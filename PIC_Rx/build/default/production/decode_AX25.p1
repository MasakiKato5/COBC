Version 3.2 HI-TECH Software Intermediate Code
"3854 C:\Program Files (x86)\Microchip\xc8\v1.38\include\pic16f887.h
[v _RB5 `Vb ~T0 @X0 0 e@53 ]
[v F1639 `(v ~T0 @X0 1 tf1`ul ]
"152 C:\Program Files (x86)\Microchip\xc8\v1.38\include\pic.h
[v __delay `JF1639 ~T0 @X0 0 e ]
[p i __delay ]
"3868 C:\Program Files (x86)\Microchip\xc8\v1.38\include\pic16f887.h
[v _RC2 `Vb ~T0 @X0 0 e@58 ]
"67
[v _STATUS `Vuc ~T0 @X0 0 e@3 ]
"3848
[v _RB2 `Vb ~T0 @X0 0 e@50 ]
"16 UART.h
[v _putch `(v ~T0 @X0 0 ef1`uc ]
"16 decode_AX25.c
[v _reverse_bit8 `(uc ~T0 @X0 0 ef1`uc ]
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;pic16f887.h: 49: extern volatile unsigned char INDF @ 0x000;
"51 C:\Program Files (x86)\Microchip\xc8\v1.38\include\pic16f887.h
[; ;pic16f887.h: 51: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16f887.h: 55: extern volatile unsigned char TMR0 @ 0x001;
"57
[; ;pic16f887.h: 57: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16f887.h: 61: extern volatile unsigned char PCL @ 0x002;
"63
[; ;pic16f887.h: 63: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f887.h: 67: extern volatile unsigned char STATUS @ 0x003;
"69
[; ;pic16f887.h: 69: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f887.h: 72: typedef union {
[; ;pic16f887.h: 73: struct {
[; ;pic16f887.h: 74: unsigned C :1;
[; ;pic16f887.h: 75: unsigned DC :1;
[; ;pic16f887.h: 76: unsigned Z :1;
[; ;pic16f887.h: 77: unsigned nPD :1;
[; ;pic16f887.h: 78: unsigned nTO :1;
[; ;pic16f887.h: 79: unsigned RP :2;
[; ;pic16f887.h: 80: unsigned IRP :1;
[; ;pic16f887.h: 81: };
[; ;pic16f887.h: 82: struct {
[; ;pic16f887.h: 83: unsigned :5;
[; ;pic16f887.h: 84: unsigned RP0 :1;
[; ;pic16f887.h: 85: unsigned RP1 :1;
[; ;pic16f887.h: 86: };
[; ;pic16f887.h: 87: struct {
[; ;pic16f887.h: 88: unsigned CARRY :1;
[; ;pic16f887.h: 89: };
[; ;pic16f887.h: 90: struct {
[; ;pic16f887.h: 91: unsigned :2;
[; ;pic16f887.h: 92: unsigned ZERO :1;
[; ;pic16f887.h: 93: };
[; ;pic16f887.h: 94: } STATUSbits_t;
[; ;pic16f887.h: 95: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16f887.h: 154: extern volatile unsigned char FSR @ 0x004;
"156
[; ;pic16f887.h: 156: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16f887.h: 160: extern volatile unsigned char PORTA @ 0x005;
"162
[; ;pic16f887.h: 162: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16f887.h: 165: typedef union {
[; ;pic16f887.h: 166: struct {
[; ;pic16f887.h: 167: unsigned RA0 :1;
[; ;pic16f887.h: 168: unsigned RA1 :1;
[; ;pic16f887.h: 169: unsigned RA2 :1;
[; ;pic16f887.h: 170: unsigned RA3 :1;
[; ;pic16f887.h: 171: unsigned RA4 :1;
[; ;pic16f887.h: 172: unsigned RA5 :1;
[; ;pic16f887.h: 173: unsigned RA6 :1;
[; ;pic16f887.h: 174: unsigned RA7 :1;
[; ;pic16f887.h: 175: };
[; ;pic16f887.h: 176: } PORTAbits_t;
[; ;pic16f887.h: 177: extern volatile PORTAbits_t PORTAbits @ 0x005;
[; ;pic16f887.h: 221: extern volatile unsigned char PORTB @ 0x006;
"223
[; ;pic16f887.h: 223: asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
[; ;pic16f887.h: 226: typedef union {
[; ;pic16f887.h: 227: struct {
[; ;pic16f887.h: 228: unsigned RB0 :1;
[; ;pic16f887.h: 229: unsigned RB1 :1;
[; ;pic16f887.h: 230: unsigned RB2 :1;
[; ;pic16f887.h: 231: unsigned RB3 :1;
[; ;pic16f887.h: 232: unsigned RB4 :1;
[; ;pic16f887.h: 233: unsigned RB5 :1;
[; ;pic16f887.h: 234: unsigned RB6 :1;
[; ;pic16f887.h: 235: unsigned RB7 :1;
[; ;pic16f887.h: 236: };
[; ;pic16f887.h: 237: } PORTBbits_t;
[; ;pic16f887.h: 238: extern volatile PORTBbits_t PORTBbits @ 0x006;
[; ;pic16f887.h: 282: extern volatile unsigned char PORTC @ 0x007;
"284
[; ;pic16f887.h: 284: asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
[; ;pic16f887.h: 287: typedef union {
[; ;pic16f887.h: 288: struct {
[; ;pic16f887.h: 289: unsigned RC0 :1;
[; ;pic16f887.h: 290: unsigned RC1 :1;
[; ;pic16f887.h: 291: unsigned RC2 :1;
[; ;pic16f887.h: 292: unsigned RC3 :1;
[; ;pic16f887.h: 293: unsigned RC4 :1;
[; ;pic16f887.h: 294: unsigned RC5 :1;
[; ;pic16f887.h: 295: unsigned RC6 :1;
[; ;pic16f887.h: 296: unsigned RC7 :1;
[; ;pic16f887.h: 297: };
[; ;pic16f887.h: 298: } PORTCbits_t;
[; ;pic16f887.h: 299: extern volatile PORTCbits_t PORTCbits @ 0x007;
[; ;pic16f887.h: 343: extern volatile unsigned char PORTD @ 0x008;
"345
[; ;pic16f887.h: 345: asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
[; ;pic16f887.h: 348: typedef union {
[; ;pic16f887.h: 349: struct {
[; ;pic16f887.h: 350: unsigned RD0 :1;
[; ;pic16f887.h: 351: unsigned RD1 :1;
[; ;pic16f887.h: 352: unsigned RD2 :1;
[; ;pic16f887.h: 353: unsigned RD3 :1;
[; ;pic16f887.h: 354: unsigned RD4 :1;
[; ;pic16f887.h: 355: unsigned RD5 :1;
[; ;pic16f887.h: 356: unsigned RD6 :1;
[; ;pic16f887.h: 357: unsigned RD7 :1;
[; ;pic16f887.h: 358: };
[; ;pic16f887.h: 359: } PORTDbits_t;
[; ;pic16f887.h: 360: extern volatile PORTDbits_t PORTDbits @ 0x008;
[; ;pic16f887.h: 404: extern volatile unsigned char PORTE @ 0x009;
"406
[; ;pic16f887.h: 406: asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
[; ;pic16f887.h: 409: typedef union {
[; ;pic16f887.h: 410: struct {
[; ;pic16f887.h: 411: unsigned RE0 :1;
[; ;pic16f887.h: 412: unsigned RE1 :1;
[; ;pic16f887.h: 413: unsigned RE2 :1;
[; ;pic16f887.h: 414: unsigned RE3 :1;
[; ;pic16f887.h: 415: };
[; ;pic16f887.h: 416: } PORTEbits_t;
[; ;pic16f887.h: 417: extern volatile PORTEbits_t PORTEbits @ 0x009;
[; ;pic16f887.h: 441: extern volatile unsigned char PCLATH @ 0x00A;
"443
[; ;pic16f887.h: 443: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f887.h: 447: extern volatile unsigned char INTCON @ 0x00B;
"449
[; ;pic16f887.h: 449: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f887.h: 452: typedef union {
[; ;pic16f887.h: 453: struct {
[; ;pic16f887.h: 454: unsigned RBIF :1;
[; ;pic16f887.h: 455: unsigned INTF :1;
[; ;pic16f887.h: 456: unsigned T0IF :1;
[; ;pic16f887.h: 457: unsigned RBIE :1;
[; ;pic16f887.h: 458: unsigned INTE :1;
[; ;pic16f887.h: 459: unsigned T0IE :1;
[; ;pic16f887.h: 460: unsigned PEIE :1;
[; ;pic16f887.h: 461: unsigned GIE :1;
[; ;pic16f887.h: 462: };
[; ;pic16f887.h: 463: struct {
[; ;pic16f887.h: 464: unsigned :2;
[; ;pic16f887.h: 465: unsigned TMR0IF :1;
[; ;pic16f887.h: 466: unsigned :2;
[; ;pic16f887.h: 467: unsigned TMR0IE :1;
[; ;pic16f887.h: 468: };
[; ;pic16f887.h: 469: } INTCONbits_t;
[; ;pic16f887.h: 470: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16f887.h: 524: extern volatile unsigned char PIR1 @ 0x00C;
"526
[; ;pic16f887.h: 526: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic16f887.h: 529: typedef union {
[; ;pic16f887.h: 530: struct {
[; ;pic16f887.h: 531: unsigned TMR1IF :1;
[; ;pic16f887.h: 532: unsigned TMR2IF :1;
[; ;pic16f887.h: 533: unsigned CCP1IF :1;
[; ;pic16f887.h: 534: unsigned SSPIF :1;
[; ;pic16f887.h: 535: unsigned TXIF :1;
[; ;pic16f887.h: 536: unsigned RCIF :1;
[; ;pic16f887.h: 537: unsigned ADIF :1;
[; ;pic16f887.h: 538: };
[; ;pic16f887.h: 539: } PIR1bits_t;
[; ;pic16f887.h: 540: extern volatile PIR1bits_t PIR1bits @ 0x00C;
[; ;pic16f887.h: 579: extern volatile unsigned char PIR2 @ 0x00D;
"581
[; ;pic16f887.h: 581: asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
[; ;pic16f887.h: 584: typedef union {
[; ;pic16f887.h: 585: struct {
[; ;pic16f887.h: 586: unsigned CCP2IF :1;
[; ;pic16f887.h: 587: unsigned :1;
[; ;pic16f887.h: 588: unsigned ULPWUIF :1;
[; ;pic16f887.h: 589: unsigned BCLIF :1;
[; ;pic16f887.h: 590: unsigned EEIF :1;
[; ;pic16f887.h: 591: unsigned C1IF :1;
[; ;pic16f887.h: 592: unsigned C2IF :1;
[; ;pic16f887.h: 593: unsigned OSFIF :1;
[; ;pic16f887.h: 594: };
[; ;pic16f887.h: 595: } PIR2bits_t;
[; ;pic16f887.h: 596: extern volatile PIR2bits_t PIR2bits @ 0x00D;
[; ;pic16f887.h: 635: extern volatile unsigned short TMR1 @ 0x00E;
"637
[; ;pic16f887.h: 637: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic16f887.h: 641: extern volatile unsigned char TMR1L @ 0x00E;
"643
[; ;pic16f887.h: 643: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic16f887.h: 647: extern volatile unsigned char TMR1H @ 0x00F;
"649
[; ;pic16f887.h: 649: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic16f887.h: 653: extern volatile unsigned char T1CON @ 0x010;
"655
[; ;pic16f887.h: 655: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic16f887.h: 658: typedef union {
[; ;pic16f887.h: 659: struct {
[; ;pic16f887.h: 660: unsigned TMR1ON :1;
[; ;pic16f887.h: 661: unsigned TMR1CS :1;
[; ;pic16f887.h: 662: unsigned nT1SYNC :1;
[; ;pic16f887.h: 663: unsigned T1OSCEN :1;
[; ;pic16f887.h: 664: unsigned T1CKPS :2;
[; ;pic16f887.h: 665: unsigned TMR1GE :1;
[; ;pic16f887.h: 666: unsigned T1GINV :1;
[; ;pic16f887.h: 667: };
[; ;pic16f887.h: 668: struct {
[; ;pic16f887.h: 669: unsigned :2;
[; ;pic16f887.h: 670: unsigned T1INSYNC :1;
[; ;pic16f887.h: 671: unsigned :1;
[; ;pic16f887.h: 672: unsigned T1CKPS0 :1;
[; ;pic16f887.h: 673: unsigned T1CKPS1 :1;
[; ;pic16f887.h: 674: unsigned :1;
[; ;pic16f887.h: 675: unsigned T1GIV :1;
[; ;pic16f887.h: 676: };
[; ;pic16f887.h: 677: struct {
[; ;pic16f887.h: 678: unsigned :2;
[; ;pic16f887.h: 679: unsigned T1SYNC :1;
[; ;pic16f887.h: 680: };
[; ;pic16f887.h: 681: } T1CONbits_t;
[; ;pic16f887.h: 682: extern volatile T1CONbits_t T1CONbits @ 0x010;
[; ;pic16f887.h: 746: extern volatile unsigned char TMR2 @ 0x011;
"748
[; ;pic16f887.h: 748: asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
[; ;pic16f887.h: 752: extern volatile unsigned char T2CON @ 0x012;
"754
[; ;pic16f887.h: 754: asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
[; ;pic16f887.h: 757: typedef union {
[; ;pic16f887.h: 758: struct {
[; ;pic16f887.h: 759: unsigned T2CKPS :2;
[; ;pic16f887.h: 760: unsigned TMR2ON :1;
[; ;pic16f887.h: 761: unsigned TOUTPS :4;
[; ;pic16f887.h: 762: };
[; ;pic16f887.h: 763: struct {
[; ;pic16f887.h: 764: unsigned T2CKPS0 :1;
[; ;pic16f887.h: 765: unsigned T2CKPS1 :1;
[; ;pic16f887.h: 766: unsigned :1;
[; ;pic16f887.h: 767: unsigned TOUTPS0 :1;
[; ;pic16f887.h: 768: unsigned TOUTPS1 :1;
[; ;pic16f887.h: 769: unsigned TOUTPS2 :1;
[; ;pic16f887.h: 770: unsigned TOUTPS3 :1;
[; ;pic16f887.h: 771: };
[; ;pic16f887.h: 772: } T2CONbits_t;
[; ;pic16f887.h: 773: extern volatile T2CONbits_t T2CONbits @ 0x012;
[; ;pic16f887.h: 822: extern volatile unsigned char SSPBUF @ 0x013;
"824
[; ;pic16f887.h: 824: asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
[; ;pic16f887.h: 828: extern volatile unsigned char SSPCON @ 0x014;
"830
[; ;pic16f887.h: 830: asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
[; ;pic16f887.h: 833: typedef union {
[; ;pic16f887.h: 834: struct {
[; ;pic16f887.h: 835: unsigned SSPM :4;
[; ;pic16f887.h: 836: unsigned CKP :1;
[; ;pic16f887.h: 837: unsigned SSPEN :1;
[; ;pic16f887.h: 838: unsigned SSPOV :1;
[; ;pic16f887.h: 839: unsigned WCOL :1;
[; ;pic16f887.h: 840: };
[; ;pic16f887.h: 841: struct {
[; ;pic16f887.h: 842: unsigned SSPM0 :1;
[; ;pic16f887.h: 843: unsigned SSPM1 :1;
[; ;pic16f887.h: 844: unsigned SSPM2 :1;
[; ;pic16f887.h: 845: unsigned SSPM3 :1;
[; ;pic16f887.h: 846: };
[; ;pic16f887.h: 847: } SSPCONbits_t;
[; ;pic16f887.h: 848: extern volatile SSPCONbits_t SSPCONbits @ 0x014;
[; ;pic16f887.h: 897: extern volatile unsigned short CCPR1 @ 0x015;
"899
[; ;pic16f887.h: 899: asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
[; ;pic16f887.h: 903: extern volatile unsigned char CCPR1L @ 0x015;
"905
[; ;pic16f887.h: 905: asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
[; ;pic16f887.h: 909: extern volatile unsigned char CCPR1H @ 0x016;
"911
[; ;pic16f887.h: 911: asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
[; ;pic16f887.h: 915: extern volatile unsigned char CCP1CON @ 0x017;
"917
[; ;pic16f887.h: 917: asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
[; ;pic16f887.h: 920: typedef union {
[; ;pic16f887.h: 921: struct {
[; ;pic16f887.h: 922: unsigned CCP1M :4;
[; ;pic16f887.h: 923: unsigned DC1B :2;
[; ;pic16f887.h: 924: unsigned P1M :2;
[; ;pic16f887.h: 925: };
[; ;pic16f887.h: 926: struct {
[; ;pic16f887.h: 927: unsigned CCP1M0 :1;
[; ;pic16f887.h: 928: unsigned CCP1M1 :1;
[; ;pic16f887.h: 929: unsigned CCP1M2 :1;
[; ;pic16f887.h: 930: unsigned CCP1M3 :1;
[; ;pic16f887.h: 931: unsigned DC1B0 :1;
[; ;pic16f887.h: 932: unsigned DC1B1 :1;
[; ;pic16f887.h: 933: unsigned P1M0 :1;
[; ;pic16f887.h: 934: unsigned P1M1 :1;
[; ;pic16f887.h: 935: };
[; ;pic16f887.h: 936: struct {
[; ;pic16f887.h: 937: unsigned :4;
[; ;pic16f887.h: 938: unsigned CCP1Y :1;
[; ;pic16f887.h: 939: unsigned CCP1X :1;
[; ;pic16f887.h: 940: };
[; ;pic16f887.h: 941: } CCP1CONbits_t;
[; ;pic16f887.h: 942: extern volatile CCP1CONbits_t CCP1CONbits @ 0x017;
[; ;pic16f887.h: 1011: extern volatile unsigned char RCSTA @ 0x018;
"1013
[; ;pic16f887.h: 1013: asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
[; ;pic16f887.h: 1016: typedef union {
[; ;pic16f887.h: 1017: struct {
[; ;pic16f887.h: 1018: unsigned RX9D :1;
[; ;pic16f887.h: 1019: unsigned OERR :1;
[; ;pic16f887.h: 1020: unsigned FERR :1;
[; ;pic16f887.h: 1021: unsigned ADDEN :1;
[; ;pic16f887.h: 1022: unsigned CREN :1;
[; ;pic16f887.h: 1023: unsigned SREN :1;
[; ;pic16f887.h: 1024: unsigned RX9 :1;
[; ;pic16f887.h: 1025: unsigned SPEN :1;
[; ;pic16f887.h: 1026: };
[; ;pic16f887.h: 1027: struct {
[; ;pic16f887.h: 1028: unsigned RCD8 :1;
[; ;pic16f887.h: 1029: unsigned :5;
[; ;pic16f887.h: 1030: unsigned RC9 :1;
[; ;pic16f887.h: 1031: };
[; ;pic16f887.h: 1032: struct {
[; ;pic16f887.h: 1033: unsigned :6;
[; ;pic16f887.h: 1034: unsigned nRC8 :1;
[; ;pic16f887.h: 1035: };
[; ;pic16f887.h: 1036: struct {
[; ;pic16f887.h: 1037: unsigned :6;
[; ;pic16f887.h: 1038: unsigned RC8_9 :1;
[; ;pic16f887.h: 1039: };
[; ;pic16f887.h: 1040: } RCSTAbits_t;
[; ;pic16f887.h: 1041: extern volatile RCSTAbits_t RCSTAbits @ 0x018;
[; ;pic16f887.h: 1105: extern volatile unsigned char TXREG @ 0x019;
"1107
[; ;pic16f887.h: 1107: asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
[; ;pic16f887.h: 1111: extern volatile unsigned char RCREG @ 0x01A;
"1113
[; ;pic16f887.h: 1113: asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
[; ;pic16f887.h: 1117: extern volatile unsigned short CCPR2 @ 0x01B;
"1119
[; ;pic16f887.h: 1119: asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
[; ;pic16f887.h: 1123: extern volatile unsigned char CCPR2L @ 0x01B;
"1125
[; ;pic16f887.h: 1125: asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
[; ;pic16f887.h: 1129: extern volatile unsigned char CCPR2H @ 0x01C;
"1131
[; ;pic16f887.h: 1131: asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
[; ;pic16f887.h: 1135: extern volatile unsigned char CCP2CON @ 0x01D;
"1137
[; ;pic16f887.h: 1137: asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
[; ;pic16f887.h: 1140: typedef union {
[; ;pic16f887.h: 1141: struct {
[; ;pic16f887.h: 1142: unsigned CCP2M :4;
[; ;pic16f887.h: 1143: unsigned DC2B0 :1;
[; ;pic16f887.h: 1144: unsigned DC2B1 :1;
[; ;pic16f887.h: 1145: };
[; ;pic16f887.h: 1146: struct {
[; ;pic16f887.h: 1147: unsigned CCP2M0 :1;
[; ;pic16f887.h: 1148: unsigned CCP2M1 :1;
[; ;pic16f887.h: 1149: unsigned CCP2M2 :1;
[; ;pic16f887.h: 1150: unsigned CCP2M3 :1;
[; ;pic16f887.h: 1151: unsigned CCP2Y :1;
[; ;pic16f887.h: 1152: unsigned CCP2X :1;
[; ;pic16f887.h: 1153: };
[; ;pic16f887.h: 1154: } CCP2CONbits_t;
[; ;pic16f887.h: 1155: extern volatile CCP2CONbits_t CCP2CONbits @ 0x01D;
[; ;pic16f887.h: 1204: extern volatile unsigned char ADRESH @ 0x01E;
"1206
[; ;pic16f887.h: 1206: asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
[; ;pic16f887.h: 1210: extern volatile unsigned char ADCON0 @ 0x01F;
"1212
[; ;pic16f887.h: 1212: asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
[; ;pic16f887.h: 1215: typedef union {
[; ;pic16f887.h: 1216: struct {
[; ;pic16f887.h: 1217: unsigned ADON :1;
[; ;pic16f887.h: 1218: unsigned GO_nDONE :1;
[; ;pic16f887.h: 1219: unsigned CHS :4;
[; ;pic16f887.h: 1220: unsigned ADCS :2;
[; ;pic16f887.h: 1221: };
[; ;pic16f887.h: 1222: struct {
[; ;pic16f887.h: 1223: unsigned :1;
[; ;pic16f887.h: 1224: unsigned GO :1;
[; ;pic16f887.h: 1225: unsigned CHS0 :1;
[; ;pic16f887.h: 1226: unsigned CHS1 :1;
[; ;pic16f887.h: 1227: unsigned CHS2 :1;
[; ;pic16f887.h: 1228: unsigned CHS3 :1;
[; ;pic16f887.h: 1229: unsigned ADCS0 :1;
[; ;pic16f887.h: 1230: unsigned ADCS1 :1;
[; ;pic16f887.h: 1231: };
[; ;pic16f887.h: 1232: struct {
[; ;pic16f887.h: 1233: unsigned :1;
[; ;pic16f887.h: 1234: unsigned nDONE :1;
[; ;pic16f887.h: 1235: };
[; ;pic16f887.h: 1236: struct {
[; ;pic16f887.h: 1237: unsigned :1;
[; ;pic16f887.h: 1238: unsigned GO_DONE :1;
[; ;pic16f887.h: 1239: };
[; ;pic16f887.h: 1240: } ADCON0bits_t;
[; ;pic16f887.h: 1241: extern volatile ADCON0bits_t ADCON0bits @ 0x01F;
[; ;pic16f887.h: 1310: extern volatile unsigned char OPTION_REG @ 0x081;
"1312
[; ;pic16f887.h: 1312: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16f887.h: 1315: typedef union {
[; ;pic16f887.h: 1316: struct {
[; ;pic16f887.h: 1317: unsigned PS :3;
[; ;pic16f887.h: 1318: unsigned PSA :1;
[; ;pic16f887.h: 1319: unsigned T0SE :1;
[; ;pic16f887.h: 1320: unsigned T0CS :1;
[; ;pic16f887.h: 1321: unsigned INTEDG :1;
[; ;pic16f887.h: 1322: unsigned nRBPU :1;
[; ;pic16f887.h: 1323: };
[; ;pic16f887.h: 1324: struct {
[; ;pic16f887.h: 1325: unsigned PS0 :1;
[; ;pic16f887.h: 1326: unsigned PS1 :1;
[; ;pic16f887.h: 1327: unsigned PS2 :1;
[; ;pic16f887.h: 1328: };
[; ;pic16f887.h: 1329: } OPTION_REGbits_t;
[; ;pic16f887.h: 1330: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic16f887.h: 1379: extern volatile unsigned char TRISA @ 0x085;
"1381
[; ;pic16f887.h: 1381: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16f887.h: 1384: typedef union {
[; ;pic16f887.h: 1385: struct {
[; ;pic16f887.h: 1386: unsigned TRISA0 :1;
[; ;pic16f887.h: 1387: unsigned TRISA1 :1;
[; ;pic16f887.h: 1388: unsigned TRISA2 :1;
[; ;pic16f887.h: 1389: unsigned TRISA3 :1;
[; ;pic16f887.h: 1390: unsigned TRISA4 :1;
[; ;pic16f887.h: 1391: unsigned TRISA5 :1;
[; ;pic16f887.h: 1392: unsigned TRISA6 :1;
[; ;pic16f887.h: 1393: unsigned TRISA7 :1;
[; ;pic16f887.h: 1394: };
[; ;pic16f887.h: 1395: } TRISAbits_t;
[; ;pic16f887.h: 1396: extern volatile TRISAbits_t TRISAbits @ 0x085;
[; ;pic16f887.h: 1440: extern volatile unsigned char TRISB @ 0x086;
"1442
[; ;pic16f887.h: 1442: asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
[; ;pic16f887.h: 1445: typedef union {
[; ;pic16f887.h: 1446: struct {
[; ;pic16f887.h: 1447: unsigned TRISB0 :1;
[; ;pic16f887.h: 1448: unsigned TRISB1 :1;
[; ;pic16f887.h: 1449: unsigned TRISB2 :1;
[; ;pic16f887.h: 1450: unsigned TRISB3 :1;
[; ;pic16f887.h: 1451: unsigned TRISB4 :1;
[; ;pic16f887.h: 1452: unsigned TRISB5 :1;
[; ;pic16f887.h: 1453: unsigned TRISB6 :1;
[; ;pic16f887.h: 1454: unsigned TRISB7 :1;
[; ;pic16f887.h: 1455: };
[; ;pic16f887.h: 1456: } TRISBbits_t;
[; ;pic16f887.h: 1457: extern volatile TRISBbits_t TRISBbits @ 0x086;
[; ;pic16f887.h: 1501: extern volatile unsigned char TRISC @ 0x087;
"1503
[; ;pic16f887.h: 1503: asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
[; ;pic16f887.h: 1506: typedef union {
[; ;pic16f887.h: 1507: struct {
[; ;pic16f887.h: 1508: unsigned TRISC0 :1;
[; ;pic16f887.h: 1509: unsigned TRISC1 :1;
[; ;pic16f887.h: 1510: unsigned TRISC2 :1;
[; ;pic16f887.h: 1511: unsigned TRISC3 :1;
[; ;pic16f887.h: 1512: unsigned TRISC4 :1;
[; ;pic16f887.h: 1513: unsigned TRISC5 :1;
[; ;pic16f887.h: 1514: unsigned TRISC6 :1;
[; ;pic16f887.h: 1515: unsigned TRISC7 :1;
[; ;pic16f887.h: 1516: };
[; ;pic16f887.h: 1517: } TRISCbits_t;
[; ;pic16f887.h: 1518: extern volatile TRISCbits_t TRISCbits @ 0x087;
[; ;pic16f887.h: 1562: extern volatile unsigned char TRISD @ 0x088;
"1564
[; ;pic16f887.h: 1564: asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
[; ;pic16f887.h: 1567: typedef union {
[; ;pic16f887.h: 1568: struct {
[; ;pic16f887.h: 1569: unsigned TRISD0 :1;
[; ;pic16f887.h: 1570: unsigned TRISD1 :1;
[; ;pic16f887.h: 1571: unsigned TRISD2 :1;
[; ;pic16f887.h: 1572: unsigned TRISD3 :1;
[; ;pic16f887.h: 1573: unsigned TRISD4 :1;
[; ;pic16f887.h: 1574: unsigned TRISD5 :1;
[; ;pic16f887.h: 1575: unsigned TRISD6 :1;
[; ;pic16f887.h: 1576: unsigned TRISD7 :1;
[; ;pic16f887.h: 1577: };
[; ;pic16f887.h: 1578: } TRISDbits_t;
[; ;pic16f887.h: 1579: extern volatile TRISDbits_t TRISDbits @ 0x088;
[; ;pic16f887.h: 1623: extern volatile unsigned char TRISE @ 0x089;
"1625
[; ;pic16f887.h: 1625: asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
[; ;pic16f887.h: 1628: typedef union {
[; ;pic16f887.h: 1629: struct {
[; ;pic16f887.h: 1630: unsigned TRISE0 :1;
[; ;pic16f887.h: 1631: unsigned TRISE1 :1;
[; ;pic16f887.h: 1632: unsigned TRISE2 :1;
[; ;pic16f887.h: 1633: unsigned TRISE3 :1;
[; ;pic16f887.h: 1634: };
[; ;pic16f887.h: 1635: } TRISEbits_t;
[; ;pic16f887.h: 1636: extern volatile TRISEbits_t TRISEbits @ 0x089;
[; ;pic16f887.h: 1660: extern volatile unsigned char PIE1 @ 0x08C;
"1662
[; ;pic16f887.h: 1662: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic16f887.h: 1665: typedef union {
[; ;pic16f887.h: 1666: struct {
[; ;pic16f887.h: 1667: unsigned TMR1IE :1;
[; ;pic16f887.h: 1668: unsigned TMR2IE :1;
[; ;pic16f887.h: 1669: unsigned CCP1IE :1;
[; ;pic16f887.h: 1670: unsigned SSPIE :1;
[; ;pic16f887.h: 1671: unsigned TXIE :1;
[; ;pic16f887.h: 1672: unsigned RCIE :1;
[; ;pic16f887.h: 1673: unsigned ADIE :1;
[; ;pic16f887.h: 1674: };
[; ;pic16f887.h: 1675: } PIE1bits_t;
[; ;pic16f887.h: 1676: extern volatile PIE1bits_t PIE1bits @ 0x08C;
[; ;pic16f887.h: 1715: extern volatile unsigned char PIE2 @ 0x08D;
"1717
[; ;pic16f887.h: 1717: asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
[; ;pic16f887.h: 1720: typedef union {
[; ;pic16f887.h: 1721: struct {
[; ;pic16f887.h: 1722: unsigned CCP2IE :1;
[; ;pic16f887.h: 1723: unsigned :1;
[; ;pic16f887.h: 1724: unsigned ULPWUIE :1;
[; ;pic16f887.h: 1725: unsigned BCLIE :1;
[; ;pic16f887.h: 1726: unsigned EEIE :1;
[; ;pic16f887.h: 1727: unsigned C1IE :1;
[; ;pic16f887.h: 1728: unsigned C2IE :1;
[; ;pic16f887.h: 1729: unsigned OSFIE :1;
[; ;pic16f887.h: 1730: };
[; ;pic16f887.h: 1731: } PIE2bits_t;
[; ;pic16f887.h: 1732: extern volatile PIE2bits_t PIE2bits @ 0x08D;
[; ;pic16f887.h: 1771: extern volatile unsigned char PCON @ 0x08E;
"1773
[; ;pic16f887.h: 1773: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic16f887.h: 1776: typedef union {
[; ;pic16f887.h: 1777: struct {
[; ;pic16f887.h: 1778: unsigned nBOR :1;
[; ;pic16f887.h: 1779: unsigned nPOR :1;
[; ;pic16f887.h: 1780: unsigned :2;
[; ;pic16f887.h: 1781: unsigned SBOREN :1;
[; ;pic16f887.h: 1782: unsigned ULPWUE :1;
[; ;pic16f887.h: 1783: };
[; ;pic16f887.h: 1784: struct {
[; ;pic16f887.h: 1785: unsigned nBO :1;
[; ;pic16f887.h: 1786: };
[; ;pic16f887.h: 1787: } PCONbits_t;
[; ;pic16f887.h: 1788: extern volatile PCONbits_t PCONbits @ 0x08E;
[; ;pic16f887.h: 1817: extern volatile unsigned char OSCCON @ 0x08F;
"1819
[; ;pic16f887.h: 1819: asm("OSCCON equ 08Fh");
[; <" OSCCON equ 08Fh ;# ">
[; ;pic16f887.h: 1822: typedef union {
[; ;pic16f887.h: 1823: struct {
[; ;pic16f887.h: 1824: unsigned SCS :1;
[; ;pic16f887.h: 1825: unsigned LTS :1;
[; ;pic16f887.h: 1826: unsigned HTS :1;
[; ;pic16f887.h: 1827: unsigned OSTS :1;
[; ;pic16f887.h: 1828: unsigned IRCF :3;
[; ;pic16f887.h: 1829: };
[; ;pic16f887.h: 1830: struct {
[; ;pic16f887.h: 1831: unsigned :4;
[; ;pic16f887.h: 1832: unsigned IRCF0 :1;
[; ;pic16f887.h: 1833: unsigned IRCF1 :1;
[; ;pic16f887.h: 1834: unsigned IRCF2 :1;
[; ;pic16f887.h: 1835: };
[; ;pic16f887.h: 1836: } OSCCONbits_t;
[; ;pic16f887.h: 1837: extern volatile OSCCONbits_t OSCCONbits @ 0x08F;
[; ;pic16f887.h: 1881: extern volatile unsigned char OSCTUNE @ 0x090;
"1883
[; ;pic16f887.h: 1883: asm("OSCTUNE equ 090h");
[; <" OSCTUNE equ 090h ;# ">
[; ;pic16f887.h: 1886: typedef union {
[; ;pic16f887.h: 1887: struct {
[; ;pic16f887.h: 1888: unsigned TUN :5;
[; ;pic16f887.h: 1889: };
[; ;pic16f887.h: 1890: struct {
[; ;pic16f887.h: 1891: unsigned TUN0 :1;
[; ;pic16f887.h: 1892: unsigned TUN1 :1;
[; ;pic16f887.h: 1893: unsigned TUN2 :1;
[; ;pic16f887.h: 1894: unsigned TUN3 :1;
[; ;pic16f887.h: 1895: unsigned TUN4 :1;
[; ;pic16f887.h: 1896: };
[; ;pic16f887.h: 1897: } OSCTUNEbits_t;
[; ;pic16f887.h: 1898: extern volatile OSCTUNEbits_t OSCTUNEbits @ 0x090;
[; ;pic16f887.h: 1932: extern volatile unsigned char SSPCON2 @ 0x091;
"1934
[; ;pic16f887.h: 1934: asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
[; ;pic16f887.h: 1937: typedef union {
[; ;pic16f887.h: 1938: struct {
[; ;pic16f887.h: 1939: unsigned SEN :1;
[; ;pic16f887.h: 1940: unsigned RSEN :1;
[; ;pic16f887.h: 1941: unsigned PEN :1;
[; ;pic16f887.h: 1942: unsigned RCEN :1;
[; ;pic16f887.h: 1943: unsigned ACKEN :1;
[; ;pic16f887.h: 1944: unsigned ACKDT :1;
[; ;pic16f887.h: 1945: unsigned ACKSTAT :1;
[; ;pic16f887.h: 1946: unsigned GCEN :1;
[; ;pic16f887.h: 1947: };
[; ;pic16f887.h: 1948: } SSPCON2bits_t;
[; ;pic16f887.h: 1949: extern volatile SSPCON2bits_t SSPCON2bits @ 0x091;
[; ;pic16f887.h: 1993: extern volatile unsigned char PR2 @ 0x092;
"1995
[; ;pic16f887.h: 1995: asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
[; ;pic16f887.h: 1999: extern volatile unsigned char SSPADD @ 0x093;
"2001
[; ;pic16f887.h: 2001: asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
[; ;pic16f887.h: 2005: extern volatile unsigned char SSPMSK @ 0x093;
"2007
[; ;pic16f887.h: 2007: asm("SSPMSK equ 093h");
[; <" SSPMSK equ 093h ;# ">
[; ;pic16f887.h: 2010: extern volatile unsigned char MSK @ 0x093;
"2012
[; ;pic16f887.h: 2012: asm("MSK equ 093h");
[; <" MSK equ 093h ;# ">
[; ;pic16f887.h: 2015: typedef union {
[; ;pic16f887.h: 2016: struct {
[; ;pic16f887.h: 2017: unsigned MSK0 :1;
[; ;pic16f887.h: 2018: unsigned MSK1 :1;
[; ;pic16f887.h: 2019: unsigned MSK2 :1;
[; ;pic16f887.h: 2020: unsigned MSK3 :1;
[; ;pic16f887.h: 2021: unsigned MSK4 :1;
[; ;pic16f887.h: 2022: unsigned MSK5 :1;
[; ;pic16f887.h: 2023: unsigned MSK6 :1;
[; ;pic16f887.h: 2024: unsigned MSK7 :1;
[; ;pic16f887.h: 2025: };
[; ;pic16f887.h: 2026: } SSPMSKbits_t;
[; ;pic16f887.h: 2027: extern volatile SSPMSKbits_t SSPMSKbits @ 0x093;
[; ;pic16f887.h: 2070: typedef union {
[; ;pic16f887.h: 2071: struct {
[; ;pic16f887.h: 2072: unsigned MSK0 :1;
[; ;pic16f887.h: 2073: unsigned MSK1 :1;
[; ;pic16f887.h: 2074: unsigned MSK2 :1;
[; ;pic16f887.h: 2075: unsigned MSK3 :1;
[; ;pic16f887.h: 2076: unsigned MSK4 :1;
[; ;pic16f887.h: 2077: unsigned MSK5 :1;
[; ;pic16f887.h: 2078: unsigned MSK6 :1;
[; ;pic16f887.h: 2079: unsigned MSK7 :1;
[; ;pic16f887.h: 2080: };
[; ;pic16f887.h: 2081: } MSKbits_t;
[; ;pic16f887.h: 2082: extern volatile MSKbits_t MSKbits @ 0x093;
[; ;pic16f887.h: 2126: extern volatile unsigned char SSPSTAT @ 0x094;
"2128
[; ;pic16f887.h: 2128: asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
[; ;pic16f887.h: 2131: typedef union {
[; ;pic16f887.h: 2132: struct {
[; ;pic16f887.h: 2133: unsigned BF :1;
[; ;pic16f887.h: 2134: unsigned UA :1;
[; ;pic16f887.h: 2135: unsigned R_nW :1;
[; ;pic16f887.h: 2136: unsigned S :1;
[; ;pic16f887.h: 2137: unsigned P :1;
[; ;pic16f887.h: 2138: unsigned D_nA :1;
[; ;pic16f887.h: 2139: unsigned CKE :1;
[; ;pic16f887.h: 2140: unsigned SMP :1;
[; ;pic16f887.h: 2141: };
[; ;pic16f887.h: 2142: struct {
[; ;pic16f887.h: 2143: unsigned :2;
[; ;pic16f887.h: 2144: unsigned R :1;
[; ;pic16f887.h: 2145: unsigned :2;
[; ;pic16f887.h: 2146: unsigned D :1;
[; ;pic16f887.h: 2147: };
[; ;pic16f887.h: 2148: struct {
[; ;pic16f887.h: 2149: unsigned :2;
[; ;pic16f887.h: 2150: unsigned I2C_READ :1;
[; ;pic16f887.h: 2151: unsigned I2C_START :1;
[; ;pic16f887.h: 2152: unsigned I2C_STOP :1;
[; ;pic16f887.h: 2153: unsigned I2C_DATA :1;
[; ;pic16f887.h: 2154: };
[; ;pic16f887.h: 2155: struct {
[; ;pic16f887.h: 2156: unsigned :2;
[; ;pic16f887.h: 2157: unsigned nW :1;
[; ;pic16f887.h: 2158: unsigned :2;
[; ;pic16f887.h: 2159: unsigned nA :1;
[; ;pic16f887.h: 2160: };
[; ;pic16f887.h: 2161: struct {
[; ;pic16f887.h: 2162: unsigned :2;
[; ;pic16f887.h: 2163: unsigned nWRITE :1;
[; ;pic16f887.h: 2164: unsigned :2;
[; ;pic16f887.h: 2165: unsigned nADDRESS :1;
[; ;pic16f887.h: 2166: };
[; ;pic16f887.h: 2167: struct {
[; ;pic16f887.h: 2168: unsigned :2;
[; ;pic16f887.h: 2169: unsigned R_W :1;
[; ;pic16f887.h: 2170: unsigned :2;
[; ;pic16f887.h: 2171: unsigned D_A :1;
[; ;pic16f887.h: 2172: };
[; ;pic16f887.h: 2173: struct {
[; ;pic16f887.h: 2174: unsigned :2;
[; ;pic16f887.h: 2175: unsigned READ_WRITE :1;
[; ;pic16f887.h: 2176: unsigned :2;
[; ;pic16f887.h: 2177: unsigned DATA_ADDRESS :1;
[; ;pic16f887.h: 2178: };
[; ;pic16f887.h: 2179: } SSPSTATbits_t;
[; ;pic16f887.h: 2180: extern volatile SSPSTATbits_t SSPSTATbits @ 0x094;
[; ;pic16f887.h: 2294: extern volatile unsigned char WPUB @ 0x095;
"2296
[; ;pic16f887.h: 2296: asm("WPUB equ 095h");
[; <" WPUB equ 095h ;# ">
[; ;pic16f887.h: 2299: typedef union {
[; ;pic16f887.h: 2300: struct {
[; ;pic16f887.h: 2301: unsigned WPUB :8;
[; ;pic16f887.h: 2302: };
[; ;pic16f887.h: 2303: struct {
[; ;pic16f887.h: 2304: unsigned WPUB0 :1;
[; ;pic16f887.h: 2305: unsigned WPUB1 :1;
[; ;pic16f887.h: 2306: unsigned WPUB2 :1;
[; ;pic16f887.h: 2307: unsigned WPUB3 :1;
[; ;pic16f887.h: 2308: unsigned WPUB4 :1;
[; ;pic16f887.h: 2309: unsigned WPUB5 :1;
[; ;pic16f887.h: 2310: unsigned WPUB6 :1;
[; ;pic16f887.h: 2311: unsigned WPUB7 :1;
[; ;pic16f887.h: 2312: };
[; ;pic16f887.h: 2313: } WPUBbits_t;
[; ;pic16f887.h: 2314: extern volatile WPUBbits_t WPUBbits @ 0x095;
[; ;pic16f887.h: 2363: extern volatile unsigned char IOCB @ 0x096;
"2365
[; ;pic16f887.h: 2365: asm("IOCB equ 096h");
[; <" IOCB equ 096h ;# ">
[; ;pic16f887.h: 2368: typedef union {
[; ;pic16f887.h: 2369: struct {
[; ;pic16f887.h: 2370: unsigned IOCB :8;
[; ;pic16f887.h: 2371: };
[; ;pic16f887.h: 2372: struct {
[; ;pic16f887.h: 2373: unsigned IOCB0 :1;
[; ;pic16f887.h: 2374: unsigned IOCB1 :1;
[; ;pic16f887.h: 2375: unsigned IOCB2 :1;
[; ;pic16f887.h: 2376: unsigned IOCB3 :1;
[; ;pic16f887.h: 2377: unsigned IOCB4 :1;
[; ;pic16f887.h: 2378: unsigned IOCB5 :1;
[; ;pic16f887.h: 2379: unsigned IOCB6 :1;
[; ;pic16f887.h: 2380: unsigned IOCB7 :1;
[; ;pic16f887.h: 2381: };
[; ;pic16f887.h: 2382: } IOCBbits_t;
[; ;pic16f887.h: 2383: extern volatile IOCBbits_t IOCBbits @ 0x096;
[; ;pic16f887.h: 2432: extern volatile unsigned char VRCON @ 0x097;
"2434
[; ;pic16f887.h: 2434: asm("VRCON equ 097h");
[; <" VRCON equ 097h ;# ">
[; ;pic16f887.h: 2437: typedef union {
[; ;pic16f887.h: 2438: struct {
[; ;pic16f887.h: 2439: unsigned VR :4;
[; ;pic16f887.h: 2440: unsigned VRSS :1;
[; ;pic16f887.h: 2441: unsigned VRR :1;
[; ;pic16f887.h: 2442: unsigned VROE :1;
[; ;pic16f887.h: 2443: unsigned VREN :1;
[; ;pic16f887.h: 2444: };
[; ;pic16f887.h: 2445: struct {
[; ;pic16f887.h: 2446: unsigned VR0 :1;
[; ;pic16f887.h: 2447: unsigned VR1 :1;
[; ;pic16f887.h: 2448: unsigned VR2 :1;
[; ;pic16f887.h: 2449: unsigned VR3 :1;
[; ;pic16f887.h: 2450: };
[; ;pic16f887.h: 2451: } VRCONbits_t;
[; ;pic16f887.h: 2452: extern volatile VRCONbits_t VRCONbits @ 0x097;
[; ;pic16f887.h: 2501: extern volatile unsigned char TXSTA @ 0x098;
"2503
[; ;pic16f887.h: 2503: asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
[; ;pic16f887.h: 2506: typedef union {
[; ;pic16f887.h: 2507: struct {
[; ;pic16f887.h: 2508: unsigned TX9D :1;
[; ;pic16f887.h: 2509: unsigned TRMT :1;
[; ;pic16f887.h: 2510: unsigned BRGH :1;
[; ;pic16f887.h: 2511: unsigned SENDB :1;
[; ;pic16f887.h: 2512: unsigned SYNC :1;
[; ;pic16f887.h: 2513: unsigned TXEN :1;
[; ;pic16f887.h: 2514: unsigned TX9 :1;
[; ;pic16f887.h: 2515: unsigned CSRC :1;
[; ;pic16f887.h: 2516: };
[; ;pic16f887.h: 2517: struct {
[; ;pic16f887.h: 2518: unsigned TXD8 :1;
[; ;pic16f887.h: 2519: unsigned :5;
[; ;pic16f887.h: 2520: unsigned nTX8 :1;
[; ;pic16f887.h: 2521: };
[; ;pic16f887.h: 2522: struct {
[; ;pic16f887.h: 2523: unsigned :6;
[; ;pic16f887.h: 2524: unsigned TX8_9 :1;
[; ;pic16f887.h: 2525: };
[; ;pic16f887.h: 2526: } TXSTAbits_t;
[; ;pic16f887.h: 2527: extern volatile TXSTAbits_t TXSTAbits @ 0x098;
[; ;pic16f887.h: 2586: extern volatile unsigned char SPBRG @ 0x099;
"2588
[; ;pic16f887.h: 2588: asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
[; ;pic16f887.h: 2591: typedef union {
[; ;pic16f887.h: 2592: struct {
[; ;pic16f887.h: 2593: unsigned BRG0 :1;
[; ;pic16f887.h: 2594: unsigned BRG1 :1;
[; ;pic16f887.h: 2595: unsigned BRG2 :1;
[; ;pic16f887.h: 2596: unsigned BRG3 :1;
[; ;pic16f887.h: 2597: unsigned BRG4 :1;
[; ;pic16f887.h: 2598: unsigned BRG5 :1;
[; ;pic16f887.h: 2599: unsigned BRG6 :1;
[; ;pic16f887.h: 2600: unsigned BRG7 :1;
[; ;pic16f887.h: 2601: };
[; ;pic16f887.h: 2602: } SPBRGbits_t;
[; ;pic16f887.h: 2603: extern volatile SPBRGbits_t SPBRGbits @ 0x099;
[; ;pic16f887.h: 2647: extern volatile unsigned char SPBRGH @ 0x09A;
"2649
[; ;pic16f887.h: 2649: asm("SPBRGH equ 09Ah");
[; <" SPBRGH equ 09Ah ;# ">
[; ;pic16f887.h: 2652: typedef union {
[; ;pic16f887.h: 2653: struct {
[; ;pic16f887.h: 2654: unsigned SPBRGH :8;
[; ;pic16f887.h: 2655: };
[; ;pic16f887.h: 2656: struct {
[; ;pic16f887.h: 2657: unsigned BRG8 :1;
[; ;pic16f887.h: 2658: unsigned BRG9 :1;
[; ;pic16f887.h: 2659: unsigned BRG10 :1;
[; ;pic16f887.h: 2660: unsigned BRG11 :1;
[; ;pic16f887.h: 2661: unsigned BRG12 :1;
[; ;pic16f887.h: 2662: unsigned BRG13 :1;
[; ;pic16f887.h: 2663: unsigned BRG14 :1;
[; ;pic16f887.h: 2664: unsigned BRG15 :1;
[; ;pic16f887.h: 2665: };
[; ;pic16f887.h: 2666: } SPBRGHbits_t;
[; ;pic16f887.h: 2667: extern volatile SPBRGHbits_t SPBRGHbits @ 0x09A;
[; ;pic16f887.h: 2716: extern volatile unsigned char PWM1CON @ 0x09B;
"2718
[; ;pic16f887.h: 2718: asm("PWM1CON equ 09Bh");
[; <" PWM1CON equ 09Bh ;# ">
[; ;pic16f887.h: 2721: typedef union {
[; ;pic16f887.h: 2722: struct {
[; ;pic16f887.h: 2723: unsigned PDC :7;
[; ;pic16f887.h: 2724: unsigned PRSEN :1;
[; ;pic16f887.h: 2725: };
[; ;pic16f887.h: 2726: struct {
[; ;pic16f887.h: 2727: unsigned PDC0 :1;
[; ;pic16f887.h: 2728: unsigned PDC1 :1;
[; ;pic16f887.h: 2729: unsigned PDC2 :1;
[; ;pic16f887.h: 2730: unsigned PDC3 :1;
[; ;pic16f887.h: 2731: unsigned PDC4 :1;
[; ;pic16f887.h: 2732: unsigned PDC5 :1;
[; ;pic16f887.h: 2733: unsigned PDC6 :1;
[; ;pic16f887.h: 2734: };
[; ;pic16f887.h: 2735: } PWM1CONbits_t;
[; ;pic16f887.h: 2736: extern volatile PWM1CONbits_t PWM1CONbits @ 0x09B;
[; ;pic16f887.h: 2785: extern volatile unsigned char ECCPAS @ 0x09C;
"2787
[; ;pic16f887.h: 2787: asm("ECCPAS equ 09Ch");
[; <" ECCPAS equ 09Ch ;# ">
[; ;pic16f887.h: 2790: typedef union {
[; ;pic16f887.h: 2791: struct {
[; ;pic16f887.h: 2792: unsigned PSSBD :2;
[; ;pic16f887.h: 2793: unsigned PSSAC :2;
[; ;pic16f887.h: 2794: unsigned ECCPAS :3;
[; ;pic16f887.h: 2795: unsigned ECCPASE :1;
[; ;pic16f887.h: 2796: };
[; ;pic16f887.h: 2797: struct {
[; ;pic16f887.h: 2798: unsigned PSSBD0 :1;
[; ;pic16f887.h: 2799: unsigned PSSBD1 :1;
[; ;pic16f887.h: 2800: unsigned PSSAC0 :1;
[; ;pic16f887.h: 2801: unsigned PSSAC1 :1;
[; ;pic16f887.h: 2802: unsigned ECCPAS0 :1;
[; ;pic16f887.h: 2803: unsigned ECCPAS1 :1;
[; ;pic16f887.h: 2804: unsigned ECCPAS2 :1;
[; ;pic16f887.h: 2805: };
[; ;pic16f887.h: 2806: } ECCPASbits_t;
[; ;pic16f887.h: 2807: extern volatile ECCPASbits_t ECCPASbits @ 0x09C;
[; ;pic16f887.h: 2866: extern volatile unsigned char PSTRCON @ 0x09D;
"2868
[; ;pic16f887.h: 2868: asm("PSTRCON equ 09Dh");
[; <" PSTRCON equ 09Dh ;# ">
[; ;pic16f887.h: 2871: typedef union {
[; ;pic16f887.h: 2872: struct {
[; ;pic16f887.h: 2873: unsigned STRA :1;
[; ;pic16f887.h: 2874: unsigned STRB :1;
[; ;pic16f887.h: 2875: unsigned STRC :1;
[; ;pic16f887.h: 2876: unsigned STRD :1;
[; ;pic16f887.h: 2877: unsigned STRSYNC :1;
[; ;pic16f887.h: 2878: };
[; ;pic16f887.h: 2879: } PSTRCONbits_t;
[; ;pic16f887.h: 2880: extern volatile PSTRCONbits_t PSTRCONbits @ 0x09D;
[; ;pic16f887.h: 2909: extern volatile unsigned char ADRESL @ 0x09E;
"2911
[; ;pic16f887.h: 2911: asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
[; ;pic16f887.h: 2915: extern volatile unsigned char ADCON1 @ 0x09F;
"2917
[; ;pic16f887.h: 2917: asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
[; ;pic16f887.h: 2920: typedef union {
[; ;pic16f887.h: 2921: struct {
[; ;pic16f887.h: 2922: unsigned :4;
[; ;pic16f887.h: 2923: unsigned VCFG0 :1;
[; ;pic16f887.h: 2924: unsigned VCFG1 :1;
[; ;pic16f887.h: 2925: unsigned :1;
[; ;pic16f887.h: 2926: unsigned ADFM :1;
[; ;pic16f887.h: 2927: };
[; ;pic16f887.h: 2928: } ADCON1bits_t;
[; ;pic16f887.h: 2929: extern volatile ADCON1bits_t ADCON1bits @ 0x09F;
[; ;pic16f887.h: 2948: extern volatile unsigned char WDTCON @ 0x105;
"2950
[; ;pic16f887.h: 2950: asm("WDTCON equ 0105h");
[; <" WDTCON equ 0105h ;# ">
[; ;pic16f887.h: 2953: typedef union {
[; ;pic16f887.h: 2954: struct {
[; ;pic16f887.h: 2955: unsigned SWDTEN :1;
[; ;pic16f887.h: 2956: unsigned WDTPS :4;
[; ;pic16f887.h: 2957: };
[; ;pic16f887.h: 2958: struct {
[; ;pic16f887.h: 2959: unsigned :1;
[; ;pic16f887.h: 2960: unsigned WDTPS0 :1;
[; ;pic16f887.h: 2961: unsigned WDTPS1 :1;
[; ;pic16f887.h: 2962: unsigned WDTPS2 :1;
[; ;pic16f887.h: 2963: unsigned WDTPS3 :1;
[; ;pic16f887.h: 2964: };
[; ;pic16f887.h: 2965: } WDTCONbits_t;
[; ;pic16f887.h: 2966: extern volatile WDTCONbits_t WDTCONbits @ 0x105;
[; ;pic16f887.h: 3000: extern volatile unsigned char CM1CON0 @ 0x107;
"3002
[; ;pic16f887.h: 3002: asm("CM1CON0 equ 0107h");
[; <" CM1CON0 equ 0107h ;# ">
[; ;pic16f887.h: 3005: typedef union {
[; ;pic16f887.h: 3006: struct {
[; ;pic16f887.h: 3007: unsigned C1CH :2;
[; ;pic16f887.h: 3008: unsigned C1R :1;
[; ;pic16f887.h: 3009: unsigned :1;
[; ;pic16f887.h: 3010: unsigned C1POL :1;
[; ;pic16f887.h: 3011: unsigned C1OE :1;
[; ;pic16f887.h: 3012: unsigned C1OUT :1;
[; ;pic16f887.h: 3013: unsigned C1ON :1;
[; ;pic16f887.h: 3014: };
[; ;pic16f887.h: 3015: struct {
[; ;pic16f887.h: 3016: unsigned C1CH0 :1;
[; ;pic16f887.h: 3017: unsigned C1CH1 :1;
[; ;pic16f887.h: 3018: };
[; ;pic16f887.h: 3019: } CM1CON0bits_t;
[; ;pic16f887.h: 3020: extern volatile CM1CON0bits_t CM1CON0bits @ 0x107;
[; ;pic16f887.h: 3064: extern volatile unsigned char CM2CON0 @ 0x108;
"3066
[; ;pic16f887.h: 3066: asm("CM2CON0 equ 0108h");
[; <" CM2CON0 equ 0108h ;# ">
[; ;pic16f887.h: 3069: typedef union {
[; ;pic16f887.h: 3070: struct {
[; ;pic16f887.h: 3071: unsigned C2CH :2;
[; ;pic16f887.h: 3072: unsigned C2R :1;
[; ;pic16f887.h: 3073: unsigned :1;
[; ;pic16f887.h: 3074: unsigned C2POL :1;
[; ;pic16f887.h: 3075: unsigned C2OE :1;
[; ;pic16f887.h: 3076: unsigned C2OUT :1;
[; ;pic16f887.h: 3077: unsigned C2ON :1;
[; ;pic16f887.h: 3078: };
[; ;pic16f887.h: 3079: struct {
[; ;pic16f887.h: 3080: unsigned C2CH0 :1;
[; ;pic16f887.h: 3081: unsigned C2CH1 :1;
[; ;pic16f887.h: 3082: };
[; ;pic16f887.h: 3083: } CM2CON0bits_t;
[; ;pic16f887.h: 3084: extern volatile CM2CON0bits_t CM2CON0bits @ 0x108;
[; ;pic16f887.h: 3128: extern volatile unsigned char CM2CON1 @ 0x109;
"3130
[; ;pic16f887.h: 3130: asm("CM2CON1 equ 0109h");
[; <" CM2CON1 equ 0109h ;# ">
[; ;pic16f887.h: 3133: typedef union {
[; ;pic16f887.h: 3134: struct {
[; ;pic16f887.h: 3135: unsigned C2SYNC :1;
[; ;pic16f887.h: 3136: unsigned T1GSS :1;
[; ;pic16f887.h: 3137: unsigned :2;
[; ;pic16f887.h: 3138: unsigned C2RSEL :1;
[; ;pic16f887.h: 3139: unsigned C1RSEL :1;
[; ;pic16f887.h: 3140: unsigned MC2OUT :1;
[; ;pic16f887.h: 3141: unsigned MC1OUT :1;
[; ;pic16f887.h: 3142: };
[; ;pic16f887.h: 3143: } CM2CON1bits_t;
[; ;pic16f887.h: 3144: extern volatile CM2CON1bits_t CM2CON1bits @ 0x109;
[; ;pic16f887.h: 3178: extern volatile unsigned char EEDATA @ 0x10C;
"3180
[; ;pic16f887.h: 3180: asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
[; ;pic16f887.h: 3183: extern volatile unsigned char EEDAT @ 0x10C;
"3185
[; ;pic16f887.h: 3185: asm("EEDAT equ 010Ch");
[; <" EEDAT equ 010Ch ;# ">
[; ;pic16f887.h: 3189: extern volatile unsigned char EEADR @ 0x10D;
"3191
[; ;pic16f887.h: 3191: asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
[; ;pic16f887.h: 3195: extern volatile unsigned char EEDATH @ 0x10E;
"3197
[; ;pic16f887.h: 3197: asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
[; ;pic16f887.h: 3201: extern volatile unsigned char EEADRH @ 0x10F;
"3203
[; ;pic16f887.h: 3203: asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
[; ;pic16f887.h: 3207: extern volatile unsigned char SRCON @ 0x185;
"3209
[; ;pic16f887.h: 3209: asm("SRCON equ 0185h");
[; <" SRCON equ 0185h ;# ">
[; ;pic16f887.h: 3212: typedef union {
[; ;pic16f887.h: 3213: struct {
[; ;pic16f887.h: 3214: unsigned FVREN :1;
[; ;pic16f887.h: 3215: unsigned :1;
[; ;pic16f887.h: 3216: unsigned PULSR :1;
[; ;pic16f887.h: 3217: unsigned PULSS :1;
[; ;pic16f887.h: 3218: unsigned C2REN :1;
[; ;pic16f887.h: 3219: unsigned C1SEN :1;
[; ;pic16f887.h: 3220: unsigned SR0 :1;
[; ;pic16f887.h: 3221: unsigned SR1 :1;
[; ;pic16f887.h: 3222: };
[; ;pic16f887.h: 3223: } SRCONbits_t;
[; ;pic16f887.h: 3224: extern volatile SRCONbits_t SRCONbits @ 0x185;
[; ;pic16f887.h: 3263: extern volatile unsigned char BAUDCTL @ 0x187;
"3265
[; ;pic16f887.h: 3265: asm("BAUDCTL equ 0187h");
[; <" BAUDCTL equ 0187h ;# ">
[; ;pic16f887.h: 3268: typedef union {
[; ;pic16f887.h: 3269: struct {
[; ;pic16f887.h: 3270: unsigned ABDEN :1;
[; ;pic16f887.h: 3271: unsigned WUE :1;
[; ;pic16f887.h: 3272: unsigned :1;
[; ;pic16f887.h: 3273: unsigned BRG16 :1;
[; ;pic16f887.h: 3274: unsigned SCKP :1;
[; ;pic16f887.h: 3275: unsigned :1;
[; ;pic16f887.h: 3276: unsigned RCIDL :1;
[; ;pic16f887.h: 3277: unsigned ABDOVF :1;
[; ;pic16f887.h: 3278: };
[; ;pic16f887.h: 3279: } BAUDCTLbits_t;
[; ;pic16f887.h: 3280: extern volatile BAUDCTLbits_t BAUDCTLbits @ 0x187;
[; ;pic16f887.h: 3314: extern volatile unsigned char ANSEL @ 0x188;
"3316
[; ;pic16f887.h: 3316: asm("ANSEL equ 0188h");
[; <" ANSEL equ 0188h ;# ">
[; ;pic16f887.h: 3319: typedef union {
[; ;pic16f887.h: 3320: struct {
[; ;pic16f887.h: 3321: unsigned ANS0 :1;
[; ;pic16f887.h: 3322: unsigned ANS1 :1;
[; ;pic16f887.h: 3323: unsigned ANS2 :1;
[; ;pic16f887.h: 3324: unsigned ANS3 :1;
[; ;pic16f887.h: 3325: unsigned ANS4 :1;
[; ;pic16f887.h: 3326: unsigned ANS5 :1;
[; ;pic16f887.h: 3327: unsigned ANS6 :1;
[; ;pic16f887.h: 3328: unsigned ANS7 :1;
[; ;pic16f887.h: 3329: };
[; ;pic16f887.h: 3330: } ANSELbits_t;
[; ;pic16f887.h: 3331: extern volatile ANSELbits_t ANSELbits @ 0x188;
[; ;pic16f887.h: 3375: extern volatile unsigned char ANSELH @ 0x189;
"3377
[; ;pic16f887.h: 3377: asm("ANSELH equ 0189h");
[; <" ANSELH equ 0189h ;# ">
[; ;pic16f887.h: 3380: typedef union {
[; ;pic16f887.h: 3381: struct {
[; ;pic16f887.h: 3382: unsigned ANS8 :1;
[; ;pic16f887.h: 3383: unsigned ANS9 :1;
[; ;pic16f887.h: 3384: unsigned ANS10 :1;
[; ;pic16f887.h: 3385: unsigned ANS11 :1;
[; ;pic16f887.h: 3386: unsigned ANS12 :1;
[; ;pic16f887.h: 3387: unsigned ANS13 :1;
[; ;pic16f887.h: 3388: };
[; ;pic16f887.h: 3389: } ANSELHbits_t;
[; ;pic16f887.h: 3390: extern volatile ANSELHbits_t ANSELHbits @ 0x189;
[; ;pic16f887.h: 3424: extern volatile unsigned char EECON1 @ 0x18C;
"3426
[; ;pic16f887.h: 3426: asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
[; ;pic16f887.h: 3429: typedef union {
[; ;pic16f887.h: 3430: struct {
[; ;pic16f887.h: 3431: unsigned RD :1;
[; ;pic16f887.h: 3432: unsigned WR :1;
[; ;pic16f887.h: 3433: unsigned WREN :1;
[; ;pic16f887.h: 3434: unsigned WRERR :1;
[; ;pic16f887.h: 3435: unsigned :3;
[; ;pic16f887.h: 3436: unsigned EEPGD :1;
[; ;pic16f887.h: 3437: };
[; ;pic16f887.h: 3438: } EECON1bits_t;
[; ;pic16f887.h: 3439: extern volatile EECON1bits_t EECON1bits @ 0x18C;
[; ;pic16f887.h: 3468: extern volatile unsigned char EECON2 @ 0x18D;
"3470
[; ;pic16f887.h: 3470: asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
[; ;pic16f887.h: 3480: extern volatile __bit ABDEN @ (((unsigned) &BAUDCTL)*8) + 0;
[; ;pic16f887.h: 3482: extern volatile __bit ABDOVF @ (((unsigned) &BAUDCTL)*8) + 7;
[; ;pic16f887.h: 3484: extern volatile __bit ACKDT @ (((unsigned) &SSPCON2)*8) + 5;
[; ;pic16f887.h: 3486: extern volatile __bit ACKEN @ (((unsigned) &SSPCON2)*8) + 4;
[; ;pic16f887.h: 3488: extern volatile __bit ACKSTAT @ (((unsigned) &SSPCON2)*8) + 6;
[; ;pic16f887.h: 3490: extern volatile __bit ADCS0 @ (((unsigned) &ADCON0)*8) + 6;
[; ;pic16f887.h: 3492: extern volatile __bit ADCS1 @ (((unsigned) &ADCON0)*8) + 7;
[; ;pic16f887.h: 3494: extern volatile __bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f887.h: 3496: extern volatile __bit ADFM @ (((unsigned) &ADCON1)*8) + 7;
[; ;pic16f887.h: 3498: extern volatile __bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f887.h: 3500: extern volatile __bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f887.h: 3502: extern volatile __bit ADON @ (((unsigned) &ADCON0)*8) + 0;
[; ;pic16f887.h: 3504: extern volatile __bit ANS0 @ (((unsigned) &ANSEL)*8) + 0;
[; ;pic16f887.h: 3506: extern volatile __bit ANS1 @ (((unsigned) &ANSEL)*8) + 1;
[; ;pic16f887.h: 3508: extern volatile __bit ANS10 @ (((unsigned) &ANSELH)*8) + 2;
[; ;pic16f887.h: 3510: extern volatile __bit ANS11 @ (((unsigned) &ANSELH)*8) + 3;
[; ;pic16f887.h: 3512: extern volatile __bit ANS12 @ (((unsigned) &ANSELH)*8) + 4;
[; ;pic16f887.h: 3514: extern volatile __bit ANS13 @ (((unsigned) &ANSELH)*8) + 5;
[; ;pic16f887.h: 3516: extern volatile __bit ANS2 @ (((unsigned) &ANSEL)*8) + 2;
[; ;pic16f887.h: 3518: extern volatile __bit ANS3 @ (((unsigned) &ANSEL)*8) + 3;
[; ;pic16f887.h: 3520: extern volatile __bit ANS4 @ (((unsigned) &ANSEL)*8) + 4;
[; ;pic16f887.h: 3522: extern volatile __bit ANS5 @ (((unsigned) &ANSEL)*8) + 5;
[; ;pic16f887.h: 3524: extern volatile __bit ANS6 @ (((unsigned) &ANSEL)*8) + 6;
[; ;pic16f887.h: 3526: extern volatile __bit ANS7 @ (((unsigned) &ANSEL)*8) + 7;
[; ;pic16f887.h: 3528: extern volatile __bit ANS8 @ (((unsigned) &ANSELH)*8) + 0;
[; ;pic16f887.h: 3530: extern volatile __bit ANS9 @ (((unsigned) &ANSELH)*8) + 1;
[; ;pic16f887.h: 3532: extern volatile __bit BCLIE @ (((unsigned) &PIE2)*8) + 3;
[; ;pic16f887.h: 3534: extern volatile __bit BCLIF @ (((unsigned) &PIR2)*8) + 3;
[; ;pic16f887.h: 3536: extern volatile __bit BF @ (((unsigned) &SSPSTAT)*8) + 0;
[; ;pic16f887.h: 3538: extern volatile __bit BRG0 @ (((unsigned) &SPBRG)*8) + 0;
[; ;pic16f887.h: 3540: extern volatile __bit BRG1 @ (((unsigned) &SPBRG)*8) + 1;
[; ;pic16f887.h: 3542: extern volatile __bit BRG10 @ (((unsigned) &SPBRGH)*8) + 2;
[; ;pic16f887.h: 3544: extern volatile __bit BRG11 @ (((unsigned) &SPBRGH)*8) + 3;
[; ;pic16f887.h: 3546: extern volatile __bit BRG12 @ (((unsigned) &SPBRGH)*8) + 4;
[; ;pic16f887.h: 3548: extern volatile __bit BRG13 @ (((unsigned) &SPBRGH)*8) + 5;
[; ;pic16f887.h: 3550: extern volatile __bit BRG14 @ (((unsigned) &SPBRGH)*8) + 6;
[; ;pic16f887.h: 3552: extern volatile __bit BRG15 @ (((unsigned) &SPBRGH)*8) + 7;
[; ;pic16f887.h: 3554: extern volatile __bit BRG16 @ (((unsigned) &BAUDCTL)*8) + 3;
[; ;pic16f887.h: 3556: extern volatile __bit BRG2 @ (((unsigned) &SPBRG)*8) + 2;
[; ;pic16f887.h: 3558: extern volatile __bit BRG3 @ (((unsigned) &SPBRG)*8) + 3;
[; ;pic16f887.h: 3560: extern volatile __bit BRG4 @ (((unsigned) &SPBRG)*8) + 4;
[; ;pic16f887.h: 3562: extern volatile __bit BRG5 @ (((unsigned) &SPBRG)*8) + 5;
[; ;pic16f887.h: 3564: extern volatile __bit BRG6 @ (((unsigned) &SPBRG)*8) + 6;
[; ;pic16f887.h: 3566: extern volatile __bit BRG7 @ (((unsigned) &SPBRG)*8) + 7;
[; ;pic16f887.h: 3568: extern volatile __bit BRG8 @ (((unsigned) &SPBRGH)*8) + 0;
[; ;pic16f887.h: 3570: extern volatile __bit BRG9 @ (((unsigned) &SPBRGH)*8) + 1;
[; ;pic16f887.h: 3572: extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16f887.h: 3574: extern volatile __bit C1CH0 @ (((unsigned) &CM1CON0)*8) + 0;
[; ;pic16f887.h: 3576: extern volatile __bit C1CH1 @ (((unsigned) &CM1CON0)*8) + 1;
[; ;pic16f887.h: 3578: extern volatile __bit C1IE @ (((unsigned) &PIE2)*8) + 5;
[; ;pic16f887.h: 3580: extern volatile __bit C1IF @ (((unsigned) &PIR2)*8) + 5;
[; ;pic16f887.h: 3582: extern volatile __bit C1OE @ (((unsigned) &CM1CON0)*8) + 5;
[; ;pic16f887.h: 3584: extern volatile __bit C1ON @ (((unsigned) &CM1CON0)*8) + 7;
[; ;pic16f887.h: 3586: extern volatile __bit C1OUT @ (((unsigned) &CM1CON0)*8) + 6;
[; ;pic16f887.h: 3588: extern volatile __bit C1POL @ (((unsigned) &CM1CON0)*8) + 4;
[; ;pic16f887.h: 3590: extern volatile __bit C1R @ (((unsigned) &CM1CON0)*8) + 2;
[; ;pic16f887.h: 3592: extern volatile __bit C1RSEL @ (((unsigned) &CM2CON1)*8) + 5;
[; ;pic16f887.h: 3594: extern volatile __bit C1SEN @ (((unsigned) &SRCON)*8) + 5;
[; ;pic16f887.h: 3596: extern volatile __bit C2CH0 @ (((unsigned) &CM2CON0)*8) + 0;
[; ;pic16f887.h: 3598: extern volatile __bit C2CH1 @ (((unsigned) &CM2CON0)*8) + 1;
[; ;pic16f887.h: 3600: extern volatile __bit C2IE @ (((unsigned) &PIE2)*8) + 6;
[; ;pic16f887.h: 3602: extern volatile __bit C2IF @ (((unsigned) &PIR2)*8) + 6;
[; ;pic16f887.h: 3604: extern volatile __bit C2OE @ (((unsigned) &CM2CON0)*8) + 5;
[; ;pic16f887.h: 3606: extern volatile __bit C2ON @ (((unsigned) &CM2CON0)*8) + 7;
[; ;pic16f887.h: 3608: extern volatile __bit C2OUT @ (((unsigned) &CM2CON0)*8) + 6;
[; ;pic16f887.h: 3610: extern volatile __bit C2POL @ (((unsigned) &CM2CON0)*8) + 4;
[; ;pic16f887.h: 3612: extern volatile __bit C2R @ (((unsigned) &CM2CON0)*8) + 2;
[; ;pic16f887.h: 3614: extern volatile __bit C2REN @ (((unsigned) &SRCON)*8) + 4;
[; ;pic16f887.h: 3616: extern volatile __bit C2RSEL @ (((unsigned) &CM2CON1)*8) + 4;
[; ;pic16f887.h: 3618: extern volatile __bit C2SYNC @ (((unsigned) &CM2CON1)*8) + 0;
[; ;pic16f887.h: 3620: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f887.h: 3622: extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16f887.h: 3624: extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16f887.h: 3626: extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic16f887.h: 3628: extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic16f887.h: 3630: extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic16f887.h: 3632: extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic16f887.h: 3634: extern volatile __bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f887.h: 3636: extern volatile __bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f887.h: 3638: extern volatile __bit CCP2IE @ (((unsigned) &PIE2)*8) + 0;
[; ;pic16f887.h: 3640: extern volatile __bit CCP2IF @ (((unsigned) &PIR2)*8) + 0;
[; ;pic16f887.h: 3642: extern volatile __bit CCP2M0 @ (((unsigned) &CCP2CON)*8) + 0;
[; ;pic16f887.h: 3644: extern volatile __bit CCP2M1 @ (((unsigned) &CCP2CON)*8) + 1;
[; ;pic16f887.h: 3646: extern volatile __bit CCP2M2 @ (((unsigned) &CCP2CON)*8) + 2;
[; ;pic16f887.h: 3648: extern volatile __bit CCP2M3 @ (((unsigned) &CCP2CON)*8) + 3;
[; ;pic16f887.h: 3650: extern volatile __bit CCP2X @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic16f887.h: 3652: extern volatile __bit CCP2Y @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic16f887.h: 3654: extern volatile __bit CHS0 @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f887.h: 3656: extern volatile __bit CHS1 @ (((unsigned) &ADCON0)*8) + 3;
[; ;pic16f887.h: 3658: extern volatile __bit CHS2 @ (((unsigned) &ADCON0)*8) + 4;
[; ;pic16f887.h: 3660: extern volatile __bit CHS3 @ (((unsigned) &ADCON0)*8) + 5;
[; ;pic16f887.h: 3662: extern volatile __bit CKE @ (((unsigned) &SSPSTAT)*8) + 6;
[; ;pic16f887.h: 3664: extern volatile __bit CKP @ (((unsigned) &SSPCON)*8) + 4;
[; ;pic16f887.h: 3666: extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16f887.h: 3668: extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16f887.h: 3670: extern volatile __bit DATA_ADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f887.h: 3672: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f887.h: 3674: extern volatile __bit DC1B0 @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f887.h: 3676: extern volatile __bit DC1B1 @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f887.h: 3678: extern volatile __bit DC2B0 @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic16f887.h: 3680: extern volatile __bit DC2B1 @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic16f887.h: 3682: extern volatile __bit D_A @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f887.h: 3684: extern volatile __bit D_nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f887.h: 3686: extern volatile __bit ECCPAS0 @ (((unsigned) &ECCPAS)*8) + 4;
[; ;pic16f887.h: 3688: extern volatile __bit ECCPAS1 @ (((unsigned) &ECCPAS)*8) + 5;
[; ;pic16f887.h: 3690: extern volatile __bit ECCPAS2 @ (((unsigned) &ECCPAS)*8) + 6;
[; ;pic16f887.h: 3692: extern volatile __bit ECCPASE @ (((unsigned) &ECCPAS)*8) + 7;
[; ;pic16f887.h: 3694: extern volatile __bit EEIE @ (((unsigned) &PIE2)*8) + 4;
[; ;pic16f887.h: 3696: extern volatile __bit EEIF @ (((unsigned) &PIR2)*8) + 4;
[; ;pic16f887.h: 3698: extern volatile __bit EEPGD @ (((unsigned) &EECON1)*8) + 7;
[; ;pic16f887.h: 3700: extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16f887.h: 3702: extern volatile __bit FVREN @ (((unsigned) &SRCON)*8) + 0;
[; ;pic16f887.h: 3704: extern volatile __bit GCEN @ (((unsigned) &SSPCON2)*8) + 7;
[; ;pic16f887.h: 3706: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f887.h: 3708: extern volatile __bit GO @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f887.h: 3710: extern volatile __bit GO_DONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f887.h: 3712: extern volatile __bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f887.h: 3714: extern volatile __bit HTS @ (((unsigned) &OSCCON)*8) + 2;
[; ;pic16f887.h: 3716: extern volatile __bit I2C_DATA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f887.h: 3718: extern volatile __bit I2C_READ @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f887.h: 3720: extern volatile __bit I2C_START @ (((unsigned) &SSPSTAT)*8) + 3;
[; ;pic16f887.h: 3722: extern volatile __bit I2C_STOP @ (((unsigned) &SSPSTAT)*8) + 4;
[; ;pic16f887.h: 3724: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f887.h: 3726: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f887.h: 3728: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f887.h: 3730: extern volatile __bit IOCB0 @ (((unsigned) &IOCB)*8) + 0;
[; ;pic16f887.h: 3732: extern volatile __bit IOCB1 @ (((unsigned) &IOCB)*8) + 1;
[; ;pic16f887.h: 3734: extern volatile __bit IOCB2 @ (((unsigned) &IOCB)*8) + 2;
[; ;pic16f887.h: 3736: extern volatile __bit IOCB3 @ (((unsigned) &IOCB)*8) + 3;
[; ;pic16f887.h: 3738: extern volatile __bit IOCB4 @ (((unsigned) &IOCB)*8) + 4;
[; ;pic16f887.h: 3740: extern volatile __bit IOCB5 @ (((unsigned) &IOCB)*8) + 5;
[; ;pic16f887.h: 3742: extern volatile __bit IOCB6 @ (((unsigned) &IOCB)*8) + 6;
[; ;pic16f887.h: 3744: extern volatile __bit IOCB7 @ (((unsigned) &IOCB)*8) + 7;
[; ;pic16f887.h: 3746: extern volatile __bit IRCF0 @ (((unsigned) &OSCCON)*8) + 4;
[; ;pic16f887.h: 3748: extern volatile __bit IRCF1 @ (((unsigned) &OSCCON)*8) + 5;
[; ;pic16f887.h: 3750: extern volatile __bit IRCF2 @ (((unsigned) &OSCCON)*8) + 6;
[; ;pic16f887.h: 3752: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f887.h: 3754: extern volatile __bit LTS @ (((unsigned) &OSCCON)*8) + 1;
[; ;pic16f887.h: 3756: extern volatile __bit MC1OUT @ (((unsigned) &CM2CON1)*8) + 7;
[; ;pic16f887.h: 3758: extern volatile __bit MC2OUT @ (((unsigned) &CM2CON1)*8) + 6;
[; ;pic16f887.h: 3760: extern volatile __bit MSK0 @ (((unsigned) &SSPMSK)*8) + 0;
[; ;pic16f887.h: 3762: extern volatile __bit MSK1 @ (((unsigned) &SSPMSK)*8) + 1;
[; ;pic16f887.h: 3764: extern volatile __bit MSK2 @ (((unsigned) &SSPMSK)*8) + 2;
[; ;pic16f887.h: 3766: extern volatile __bit MSK3 @ (((unsigned) &SSPMSK)*8) + 3;
[; ;pic16f887.h: 3768: extern volatile __bit MSK4 @ (((unsigned) &SSPMSK)*8) + 4;
[; ;pic16f887.h: 3770: extern volatile __bit MSK5 @ (((unsigned) &SSPMSK)*8) + 5;
[; ;pic16f887.h: 3772: extern volatile __bit MSK6 @ (((unsigned) &SSPMSK)*8) + 6;
[; ;pic16f887.h: 3774: extern volatile __bit MSK7 @ (((unsigned) &SSPMSK)*8) + 7;
[; ;pic16f887.h: 3776: extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16f887.h: 3778: extern volatile __bit OSFIE @ (((unsigned) &PIE2)*8) + 7;
[; ;pic16f887.h: 3780: extern volatile __bit OSFIF @ (((unsigned) &PIR2)*8) + 7;
[; ;pic16f887.h: 3782: extern volatile __bit OSTS @ (((unsigned) &OSCCON)*8) + 3;
[; ;pic16f887.h: 3784: extern volatile __bit P1M0 @ (((unsigned) &CCP1CON)*8) + 6;
[; ;pic16f887.h: 3786: extern volatile __bit P1M1 @ (((unsigned) &CCP1CON)*8) + 7;
[; ;pic16f887.h: 3788: extern volatile __bit PDC0 @ (((unsigned) &PWM1CON)*8) + 0;
[; ;pic16f887.h: 3790: extern volatile __bit PDC1 @ (((unsigned) &PWM1CON)*8) + 1;
[; ;pic16f887.h: 3792: extern volatile __bit PDC2 @ (((unsigned) &PWM1CON)*8) + 2;
[; ;pic16f887.h: 3794: extern volatile __bit PDC3 @ (((unsigned) &PWM1CON)*8) + 3;
[; ;pic16f887.h: 3796: extern volatile __bit PDC4 @ (((unsigned) &PWM1CON)*8) + 4;
[; ;pic16f887.h: 3798: extern volatile __bit PDC5 @ (((unsigned) &PWM1CON)*8) + 5;
[; ;pic16f887.h: 3800: extern volatile __bit PDC6 @ (((unsigned) &PWM1CON)*8) + 6;
[; ;pic16f887.h: 3802: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f887.h: 3804: extern volatile __bit PEN @ (((unsigned) &SSPCON2)*8) + 2;
[; ;pic16f887.h: 3806: extern volatile __bit PRSEN @ (((unsigned) &PWM1CON)*8) + 7;
[; ;pic16f887.h: 3808: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f887.h: 3810: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f887.h: 3812: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f887.h: 3814: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f887.h: 3816: extern volatile __bit PSSAC0 @ (((unsigned) &ECCPAS)*8) + 2;
[; ;pic16f887.h: 3818: extern volatile __bit PSSAC1 @ (((unsigned) &ECCPAS)*8) + 3;
[; ;pic16f887.h: 3820: extern volatile __bit PSSBD0 @ (((unsigned) &ECCPAS)*8) + 0;
[; ;pic16f887.h: 3822: extern volatile __bit PSSBD1 @ (((unsigned) &ECCPAS)*8) + 1;
[; ;pic16f887.h: 3824: extern volatile __bit PULSR @ (((unsigned) &SRCON)*8) + 2;
[; ;pic16f887.h: 3826: extern volatile __bit PULSS @ (((unsigned) &SRCON)*8) + 3;
[; ;pic16f887.h: 3828: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f887.h: 3830: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f887.h: 3832: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f887.h: 3834: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f887.h: 3836: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f887.h: 3838: extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f887.h: 3840: extern volatile __bit RA6 @ (((unsigned) &PORTA)*8) + 6;
[; ;pic16f887.h: 3842: extern volatile __bit RA7 @ (((unsigned) &PORTA)*8) + 7;
[; ;pic16f887.h: 3844: extern volatile __bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f887.h: 3846: extern volatile __bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f887.h: 3848: extern volatile __bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f887.h: 3850: extern volatile __bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f887.h: 3852: extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f887.h: 3854: extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f887.h: 3856: extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f887.h: 3858: extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f887.h: 3860: extern volatile __bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f887.h: 3862: extern volatile __bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f887.h: 3864: extern volatile __bit RC0 @ (((unsigned) &PORTC)*8) + 0;
[; ;pic16f887.h: 3866: extern volatile __bit RC1 @ (((unsigned) &PORTC)*8) + 1;
[; ;pic16f887.h: 3868: extern volatile __bit RC2 @ (((unsigned) &PORTC)*8) + 2;
[; ;pic16f887.h: 3870: extern volatile __bit RC3 @ (((unsigned) &PORTC)*8) + 3;
[; ;pic16f887.h: 3872: extern volatile __bit RC4 @ (((unsigned) &PORTC)*8) + 4;
[; ;pic16f887.h: 3874: extern volatile __bit RC5 @ (((unsigned) &PORTC)*8) + 5;
[; ;pic16f887.h: 3876: extern volatile __bit RC6 @ (((unsigned) &PORTC)*8) + 6;
[; ;pic16f887.h: 3878: extern volatile __bit RC7 @ (((unsigned) &PORTC)*8) + 7;
[; ;pic16f887.h: 3880: extern volatile __bit RC8_9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f887.h: 3882: extern volatile __bit RC9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f887.h: 3884: extern volatile __bit RCD8 @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f887.h: 3886: extern volatile __bit RCEN @ (((unsigned) &SSPCON2)*8) + 3;
[; ;pic16f887.h: 3888: extern volatile __bit RCIDL @ (((unsigned) &BAUDCTL)*8) + 6;
[; ;pic16f887.h: 3890: extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16f887.h: 3892: extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16f887.h: 3894: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16f887.h: 3896: extern volatile __bit RD0 @ (((unsigned) &PORTD)*8) + 0;
[; ;pic16f887.h: 3898: extern volatile __bit RD1 @ (((unsigned) &PORTD)*8) + 1;
[; ;pic16f887.h: 3900: extern volatile __bit RD2 @ (((unsigned) &PORTD)*8) + 2;
[; ;pic16f887.h: 3902: extern volatile __bit RD3 @ (((unsigned) &PORTD)*8) + 3;
[; ;pic16f887.h: 3904: extern volatile __bit RD4 @ (((unsigned) &PORTD)*8) + 4;
[; ;pic16f887.h: 3906: extern volatile __bit RD5 @ (((unsigned) &PORTD)*8) + 5;
[; ;pic16f887.h: 3908: extern volatile __bit RD6 @ (((unsigned) &PORTD)*8) + 6;
[; ;pic16f887.h: 3910: extern volatile __bit RD7 @ (((unsigned) &PORTD)*8) + 7;
[; ;pic16f887.h: 3912: extern volatile __bit RE0 @ (((unsigned) &PORTE)*8) + 0;
[; ;pic16f887.h: 3914: extern volatile __bit RE1 @ (((unsigned) &PORTE)*8) + 1;
[; ;pic16f887.h: 3916: extern volatile __bit RE2 @ (((unsigned) &PORTE)*8) + 2;
[; ;pic16f887.h: 3918: extern volatile __bit RE3 @ (((unsigned) &PORTE)*8) + 3;
[; ;pic16f887.h: 3920: extern volatile __bit READ_WRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f887.h: 3922: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f887.h: 3924: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f887.h: 3926: extern volatile __bit RSEN @ (((unsigned) &SSPCON2)*8) + 1;
[; ;pic16f887.h: 3928: extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f887.h: 3930: extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f887.h: 3932: extern volatile __bit R_W @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f887.h: 3934: extern volatile __bit R_nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f887.h: 3936: extern volatile __bit SBOREN @ (((unsigned) &PCON)*8) + 4;
[; ;pic16f887.h: 3938: extern volatile __bit SCKP @ (((unsigned) &BAUDCTL)*8) + 4;
[; ;pic16f887.h: 3940: extern volatile __bit SCS @ (((unsigned) &OSCCON)*8) + 0;
[; ;pic16f887.h: 3942: extern volatile __bit SEN @ (((unsigned) &SSPCON2)*8) + 0;
[; ;pic16f887.h: 3944: extern volatile __bit SENDB @ (((unsigned) &TXSTA)*8) + 3;
[; ;pic16f887.h: 3946: extern volatile __bit SMP @ (((unsigned) &SSPSTAT)*8) + 7;
[; ;pic16f887.h: 3948: extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16f887.h: 3950: extern volatile __bit SR0 @ (((unsigned) &SRCON)*8) + 6;
[; ;pic16f887.h: 3952: extern volatile __bit SR1 @ (((unsigned) &SRCON)*8) + 7;
[; ;pic16f887.h: 3954: extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16f887.h: 3956: extern volatile __bit SSPEN @ (((unsigned) &SSPCON)*8) + 5;
[; ;pic16f887.h: 3958: extern volatile __bit SSPIE @ (((unsigned) &PIE1)*8) + 3;
[; ;pic16f887.h: 3960: extern volatile __bit SSPIF @ (((unsigned) &PIR1)*8) + 3;
[; ;pic16f887.h: 3962: extern volatile __bit SSPM0 @ (((unsigned) &SSPCON)*8) + 0;
[; ;pic16f887.h: 3964: extern volatile __bit SSPM1 @ (((unsigned) &SSPCON)*8) + 1;
[; ;pic16f887.h: 3966: extern volatile __bit SSPM2 @ (((unsigned) &SSPCON)*8) + 2;
[; ;pic16f887.h: 3968: extern volatile __bit SSPM3 @ (((unsigned) &SSPCON)*8) + 3;
[; ;pic16f887.h: 3970: extern volatile __bit SSPOV @ (((unsigned) &SSPCON)*8) + 6;
[; ;pic16f887.h: 3972: extern volatile __bit STRA @ (((unsigned) &PSTRCON)*8) + 0;
[; ;pic16f887.h: 3974: extern volatile __bit STRB @ (((unsigned) &PSTRCON)*8) + 1;
[; ;pic16f887.h: 3976: extern volatile __bit STRC @ (((unsigned) &PSTRCON)*8) + 2;
[; ;pic16f887.h: 3978: extern volatile __bit STRD @ (((unsigned) &PSTRCON)*8) + 3;
[; ;pic16f887.h: 3980: extern volatile __bit STRSYNC @ (((unsigned) &PSTRCON)*8) + 4;
[; ;pic16f887.h: 3982: extern volatile __bit SWDTEN @ (((unsigned) &WDTCON)*8) + 0;
[; ;pic16f887.h: 3984: extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16f887.h: 3986: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f887.h: 3988: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f887.h: 3990: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f887.h: 3992: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f887.h: 3994: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f887.h: 3996: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f887.h: 3998: extern volatile __bit T1GINV @ (((unsigned) &T1CON)*8) + 7;
[; ;pic16f887.h: 4000: extern volatile __bit T1GIV @ (((unsigned) &T1CON)*8) + 7;
[; ;pic16f887.h: 4002: extern volatile __bit T1GSS @ (((unsigned) &CM2CON1)*8) + 1;
[; ;pic16f887.h: 4004: extern volatile __bit T1INSYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f887.h: 4006: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f887.h: 4008: extern volatile __bit T1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f887.h: 4010: extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic16f887.h: 4012: extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic16f887.h: 4014: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f887.h: 4016: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f887.h: 4018: extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic16f887.h: 4020: extern volatile __bit TMR1GE @ (((unsigned) &T1CON)*8) + 6;
[; ;pic16f887.h: 4022: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f887.h: 4024: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f887.h: 4026: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f887.h: 4028: extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16f887.h: 4030: extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16f887.h: 4032: extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic16f887.h: 4034: extern volatile __bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic16f887.h: 4036: extern volatile __bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic16f887.h: 4038: extern volatile __bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic16f887.h: 4040: extern volatile __bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic16f887.h: 4042: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f887.h: 4044: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f887.h: 4046: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f887.h: 4048: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f887.h: 4050: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f887.h: 4052: extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f887.h: 4054: extern volatile __bit TRISA6 @ (((unsigned) &TRISA)*8) + 6;
[; ;pic16f887.h: 4056: extern volatile __bit TRISA7 @ (((unsigned) &TRISA)*8) + 7;
[; ;pic16f887.h: 4058: extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f887.h: 4060: extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f887.h: 4062: extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f887.h: 4064: extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f887.h: 4066: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f887.h: 4068: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f887.h: 4070: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f887.h: 4072: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f887.h: 4074: extern volatile __bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;
[; ;pic16f887.h: 4076: extern volatile __bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;
[; ;pic16f887.h: 4078: extern volatile __bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;
[; ;pic16f887.h: 4080: extern volatile __bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;
[; ;pic16f887.h: 4082: extern volatile __bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;
[; ;pic16f887.h: 4084: extern volatile __bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;
[; ;pic16f887.h: 4086: extern volatile __bit TRISC6 @ (((unsigned) &TRISC)*8) + 6;
[; ;pic16f887.h: 4088: extern volatile __bit TRISC7 @ (((unsigned) &TRISC)*8) + 7;
[; ;pic16f887.h: 4090: extern volatile __bit TRISD0 @ (((unsigned) &TRISD)*8) + 0;
[; ;pic16f887.h: 4092: extern volatile __bit TRISD1 @ (((unsigned) &TRISD)*8) + 1;
[; ;pic16f887.h: 4094: extern volatile __bit TRISD2 @ (((unsigned) &TRISD)*8) + 2;
[; ;pic16f887.h: 4096: extern volatile __bit TRISD3 @ (((unsigned) &TRISD)*8) + 3;
[; ;pic16f887.h: 4098: extern volatile __bit TRISD4 @ (((unsigned) &TRISD)*8) + 4;
[; ;pic16f887.h: 4100: extern volatile __bit TRISD5 @ (((unsigned) &TRISD)*8) + 5;
[; ;pic16f887.h: 4102: extern volatile __bit TRISD6 @ (((unsigned) &TRISD)*8) + 6;
[; ;pic16f887.h: 4104: extern volatile __bit TRISD7 @ (((unsigned) &TRISD)*8) + 7;
[; ;pic16f887.h: 4106: extern volatile __bit TRISE0 @ (((unsigned) &TRISE)*8) + 0;
[; ;pic16f887.h: 4108: extern volatile __bit TRISE1 @ (((unsigned) &TRISE)*8) + 1;
[; ;pic16f887.h: 4110: extern volatile __bit TRISE2 @ (((unsigned) &TRISE)*8) + 2;
[; ;pic16f887.h: 4112: extern volatile __bit TRISE3 @ (((unsigned) &TRISE)*8) + 3;
[; ;pic16f887.h: 4114: extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16f887.h: 4116: extern volatile __bit TUN0 @ (((unsigned) &OSCTUNE)*8) + 0;
[; ;pic16f887.h: 4118: extern volatile __bit TUN1 @ (((unsigned) &OSCTUNE)*8) + 1;
[; ;pic16f887.h: 4120: extern volatile __bit TUN2 @ (((unsigned) &OSCTUNE)*8) + 2;
[; ;pic16f887.h: 4122: extern volatile __bit TUN3 @ (((unsigned) &OSCTUNE)*8) + 3;
[; ;pic16f887.h: 4124: extern volatile __bit TUN4 @ (((unsigned) &OSCTUNE)*8) + 4;
[; ;pic16f887.h: 4126: extern volatile __bit TX8_9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f887.h: 4128: extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f887.h: 4130: extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f887.h: 4132: extern volatile __bit TXD8 @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f887.h: 4134: extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16f887.h: 4136: extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16f887.h: 4138: extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16f887.h: 4140: extern volatile __bit UA @ (((unsigned) &SSPSTAT)*8) + 1;
[; ;pic16f887.h: 4142: extern volatile __bit ULPWUE @ (((unsigned) &PCON)*8) + 5;
[; ;pic16f887.h: 4144: extern volatile __bit ULPWUIE @ (((unsigned) &PIE2)*8) + 2;
[; ;pic16f887.h: 4146: extern volatile __bit ULPWUIF @ (((unsigned) &PIR2)*8) + 2;
[; ;pic16f887.h: 4148: extern volatile __bit VCFG0 @ (((unsigned) &ADCON1)*8) + 4;
[; ;pic16f887.h: 4150: extern volatile __bit VCFG1 @ (((unsigned) &ADCON1)*8) + 5;
[; ;pic16f887.h: 4152: extern volatile __bit VR0 @ (((unsigned) &VRCON)*8) + 0;
[; ;pic16f887.h: 4154: extern volatile __bit VR1 @ (((unsigned) &VRCON)*8) + 1;
[; ;pic16f887.h: 4156: extern volatile __bit VR2 @ (((unsigned) &VRCON)*8) + 2;
[; ;pic16f887.h: 4158: extern volatile __bit VR3 @ (((unsigned) &VRCON)*8) + 3;
[; ;pic16f887.h: 4160: extern volatile __bit VREN @ (((unsigned) &VRCON)*8) + 7;
[; ;pic16f887.h: 4162: extern volatile __bit VROE @ (((unsigned) &VRCON)*8) + 6;
[; ;pic16f887.h: 4164: extern volatile __bit VRR @ (((unsigned) &VRCON)*8) + 5;
[; ;pic16f887.h: 4166: extern volatile __bit VRSS @ (((unsigned) &VRCON)*8) + 4;
[; ;pic16f887.h: 4168: extern volatile __bit WCOL @ (((unsigned) &SSPCON)*8) + 7;
[; ;pic16f887.h: 4170: extern volatile __bit WDTPS0 @ (((unsigned) &WDTCON)*8) + 1;
[; ;pic16f887.h: 4172: extern volatile __bit WDTPS1 @ (((unsigned) &WDTCON)*8) + 2;
[; ;pic16f887.h: 4174: extern volatile __bit WDTPS2 @ (((unsigned) &WDTCON)*8) + 3;
[; ;pic16f887.h: 4176: extern volatile __bit WDTPS3 @ (((unsigned) &WDTCON)*8) + 4;
[; ;pic16f887.h: 4178: extern volatile __bit WPUB0 @ (((unsigned) &WPUB)*8) + 0;
[; ;pic16f887.h: 4180: extern volatile __bit WPUB1 @ (((unsigned) &WPUB)*8) + 1;
[; ;pic16f887.h: 4182: extern volatile __bit WPUB2 @ (((unsigned) &WPUB)*8) + 2;
[; ;pic16f887.h: 4184: extern volatile __bit WPUB3 @ (((unsigned) &WPUB)*8) + 3;
[; ;pic16f887.h: 4186: extern volatile __bit WPUB4 @ (((unsigned) &WPUB)*8) + 4;
[; ;pic16f887.h: 4188: extern volatile __bit WPUB5 @ (((unsigned) &WPUB)*8) + 5;
[; ;pic16f887.h: 4190: extern volatile __bit WPUB6 @ (((unsigned) &WPUB)*8) + 6;
[; ;pic16f887.h: 4192: extern volatile __bit WPUB7 @ (((unsigned) &WPUB)*8) + 7;
[; ;pic16f887.h: 4194: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16f887.h: 4196: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16f887.h: 4198: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16f887.h: 4200: extern volatile __bit WUE @ (((unsigned) &BAUDCTL)*8) + 1;
[; ;pic16f887.h: 4202: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f887.h: 4204: extern volatile __bit nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f887.h: 4206: extern volatile __bit nADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f887.h: 4208: extern volatile __bit nBO @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f887.h: 4210: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f887.h: 4212: extern volatile __bit nDONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f887.h: 4214: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f887.h: 4216: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f887.h: 4218: extern volatile __bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f887.h: 4220: extern volatile __bit nRC8 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f887.h: 4222: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f887.h: 4224: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic16f887.h: 4226: extern volatile __bit nTX8 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f887.h: 4228: extern volatile __bit nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f887.h: 4230: extern volatile __bit nWRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic.h: 28: extern void __nop(void);
[; ;pic.h: 77: extern unsigned int flash_read(unsigned short addr);
[; ;eeprom_routines.h: 114: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 115: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 116: extern void eecpymem(volatile unsigned char *to, __eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 117: extern void memcpyee(__eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 152: extern __nonreentrant void _delay(unsigned long);
[; ;pic.h: 186: extern unsigned char __resetbits;
[; ;pic.h: 187: extern __bit __powerdown;
[; ;pic.h: 188: extern __bit __timeout;
[; ;Type_define.h: 15: typedef signed char SBYTE;
[; ;Type_define.h: 16: typedef unsigned char UBYTE;
[; ;Type_define.h: 17: typedef signed short SWORD;
[; ;Type_define.h: 18: typedef unsigned short UWORD;
[; ;Type_define.h: 19: typedef signed int SINT;
[; ;Type_define.h: 20: typedef unsigned int UINT;
[; ;Type_define.h: 21: typedef unsigned short long USLONG;
[; ;Type_define.h: 22: typedef signed long SDWORD;
[; ;Type_define.h: 23: typedef unsigned long UDWORD;
[; ;UART.h: 15: void Init_SERIAL(void);
[; ;UART.h: 16: void putch(UBYTE c);
[; ;UART.h: 17: void putstr(UBYTE *);
[; ;UART.h: 18: UBYTE getch(void);
[; ;UART.h: 19: void putcrlf(void);
[; ;UART.h: 21: void put_error(void);
[; ;UART.h: 22: void put_ok(void);
[; ;UART.h: 23: void NM_waddress(UBYTE, UBYTE, UBYTE);
[; ;Init_MPU.h: 23: void Init_MPU(void);
[; ;Init_MPU.h: 24: void led_onoff(void);
[; ;Init_MPU.h: 25: void debug_ledy(void);
[; ;time.h: 23: void delay_ms(UWORD);
[; ;time.h: 24: void delay_us(UWORD);
[; ;__size_t.h: 4: typedef unsigned size_t;
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 43: struct __prbuf
[; ;stdio.h: 44: {
[; ;stdio.h: 45: char * ptr;
[; ;stdio.h: 46: void (* func)(char);
[; ;stdio.h: 47: };
[; ;errno.h: 29: extern int errno;
[; ;conio.h: 12: extern void init_uart(void);
[; ;conio.h: 14: extern char getch(void);
[; ;conio.h: 15: extern char getche(void);
[; ;conio.h: 16: extern void putch(char);
[; ;conio.h: 17: extern void ungetch(char);
[; ;conio.h: 19: extern __bit kbhit(void);
[; ;conio.h: 23: extern char * cgets(char *);
[; ;conio.h: 24: extern void cputs(const char *);
[; ;stdio.h: 88: extern int cprintf(char *, ...);
[; ;stdio.h: 93: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 183: extern char * gets(char *);
[; ;stdio.h: 184: extern int puts(const char *);
[; ;stdio.h: 185: extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
[; ;stdio.h: 186: extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
[; ;stdio.h: 187: extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
[; ;stdio.h: 188: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 189: extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
[; ;stdio.h: 190: extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));
[; ;stdio.h: 194: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 195: extern int printf(const char *, ...);
[; ;stdlib.h: 7: typedef unsigned short wchar_t;
[; ;stdlib.h: 15: typedef struct {
[; ;stdlib.h: 16: int rem;
[; ;stdlib.h: 17: int quot;
[; ;stdlib.h: 18: } div_t;
[; ;stdlib.h: 19: typedef struct {
[; ;stdlib.h: 20: unsigned rem;
[; ;stdlib.h: 21: unsigned quot;
[; ;stdlib.h: 22: } udiv_t;
[; ;stdlib.h: 23: typedef struct {
[; ;stdlib.h: 24: long quot;
[; ;stdlib.h: 25: long rem;
[; ;stdlib.h: 26: } ldiv_t;
[; ;stdlib.h: 27: typedef struct {
[; ;stdlib.h: 28: unsigned long quot;
[; ;stdlib.h: 29: unsigned long rem;
[; ;stdlib.h: 30: } uldiv_t;
[; ;stdlib.h: 53: extern double atof(const char *);
[; ;stdlib.h: 54: extern double strtod(const char *, const char **);
[; ;stdlib.h: 55: extern int atoi(const char *);
[; ;stdlib.h: 56: extern unsigned xtoi(const char *);
[; ;stdlib.h: 57: extern long atol(const char *);
[; ;stdlib.h: 58: extern long strtol(const char *, char **, int);
[; ;stdlib.h: 60: extern int rand(void);
[; ;stdlib.h: 61: extern void srand(unsigned int);
[; ;stdlib.h: 62: extern void * calloc(size_t, size_t);
[; ;stdlib.h: 63: extern div_t div(int numer, int denom);
[; ;stdlib.h: 64: extern udiv_t udiv(unsigned numer, unsigned denom);
[; ;stdlib.h: 65: extern ldiv_t ldiv(long numer, long denom);
[; ;stdlib.h: 66: extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
[; ;stdlib.h: 67: extern unsigned long _lrotl(unsigned long value, unsigned int shift);
[; ;stdlib.h: 68: extern unsigned long _lrotr(unsigned long value, unsigned int shift);
[; ;stdlib.h: 69: extern unsigned int _rotl(unsigned int value, unsigned int shift);
[; ;stdlib.h: 70: extern unsigned int _rotr(unsigned int value, unsigned int shift);
[; ;stdlib.h: 75: extern void * malloc(size_t);
[; ;stdlib.h: 76: extern void free(void *);
[; ;stdlib.h: 77: extern void * realloc(void *, size_t);
[; ;stdlib.h: 86: extern int atexit(void (*)(void));
[; ;stdlib.h: 87: extern char * getenv(const char *);
[; ;stdlib.h: 88: extern char ** environ;
[; ;stdlib.h: 89: extern int system(char *);
[; ;stdlib.h: 90: extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
[; ;stdlib.h: 91: extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
[; ;stdlib.h: 92: extern int abs(int);
[; ;stdlib.h: 93: extern long labs(long);
[; ;stdlib.h: 95: extern char * itoa(char * buf, int val, int base);
[; ;stdlib.h: 96: extern char * utoa(char * buf, unsigned val, int base);
[; ;stdlib.h: 101: extern char * ltoa(char * buf, long val, int base);
[; ;stdlib.h: 102: extern char * ultoa(char * buf, unsigned long val, int base);
[; ;stdlib.h: 104: extern char * ftoa(float f, int * status);
[; ;decode_AX25.h: 35: UINT getbit(void);
[; ;decode_AX25.h: 43: void ReceivePacket(void);
[; ;decode_AX25.h: 44: UBYTE *ReceivePacket_data(void);
[; ;encode_AX25.h: 24: void SendPacket(void);
[; ;decode_AX25.c: 10: void UART_TX(UINT,UINT);
[; ;decode_AX25.c: 11: void waitByte(UINT,UINT);
[; ;decode_AX25.c: 12: UINT getbit(void);
[; ;decode_AX25.c: 13: void waitFlag(void);
[; ;decode_AX25.c: 14: void getdata(void);
[; ;decode_AX25.c: 15: void conv_DI_UARTRX(void);
[; ;decode_AX25.c: 16: UBYTE reverse_bit8(UBYTE x);
"24 decode_AX25.c
[v _rcv_state `ui ~T0 @X0 1 s ]
[i _rcv_state
-> -> 0 `i `ui
]
[; ;decode_AX25.c: 24: static UINT rcv_state = 0;
"25
[v _dPacket `uc ~T0 @X0 -> 50 `i e ]
[; ;decode_AX25.c: 25: UBYTE dPacket[50];
"26
[v _dData `uc ~T0 @X0 -> 32 `i e ]
[; ;decode_AX25.c: 26: UBYTE dData[32];
"27
[v _dPacketnum `ui ~T0 @X0 1 e ]
[i _dPacketnum
-> -> 0 `i `ui
]
[; ;decode_AX25.c: 27: UINT dPacketnum = 0;
"28
[v _dfcshi `uc ~T0 @X0 1 e ]
[v _dfcslo `uc ~T0 @X0 1 e ]
[; ;decode_AX25.c: 28: UBYTE dfcshi, dfcslo;
[; ;decode_AX25.c: 30: UINT getbit(void);
[; ;decode_AX25.c: 31: void waitFlag(void);
[; ;decode_AX25.c: 32: void getdata(void);
[; ;decode_AX25.c: 33: UINT fcscheck(void);
[; ;decode_AX25.c: 34: void putAX25(void);
[; ;decode_AX25.c: 35: void conv_DI_UARTRX(void);
"39
[v _getbit `(ui ~T0 @X0 1 ef ]
{
[; ;decode_AX25.c: 39: UINT getbit(void){
[e :U _getbit ]
[f ]
"40
[v F1897 `ui ~T0 @X0 1 s oldbit ]
[; ;decode_AX25.c: 40: static UINT oldbit;
[; ;decode_AX25.c: 41: oldbit = RB5;
"41
[e = F1897 -> -> _RB5 `i `ui ]
[; ;decode_AX25.c: 42: for(UINT i=0;i<62;i++){
"42
{
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 62 `i `ui 145  ]
[e $U 146  ]
[e :U 145 ]
{
[; ;decode_AX25.c: 43: if(RB5 != oldbit){
"43
[e $ ! != -> -> _RB5 `i `ui F1897 148  ]
{
[; ;decode_AX25.c: 44: _delay((unsigned long)((400)*(10000000/4000000.0)));
"44
[e ( __delay (1 -> * -> -> 400 `i `d / -> -> 10000000 `l `d .4000000.0 `ul ]
[; ;decode_AX25.c: 45: RC2= 1- RC2;
"45
[e = _RC2 -> - -> 1 `i -> _RC2 `i `b ]
[; ;decode_AX25.c: 46: return 0;
"46
[e ) -> -> 0 `i `ui ]
[e $UE 144  ]
"47
}
[e :U 148 ]
"48
}
"42
[e ++ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 62 `i `ui 145  ]
[e :U 146 ]
"48
}
[; ;decode_AX25.c: 47: }
[; ;decode_AX25.c: 48: }
[; ;decode_AX25.c: 49: return 1;
"49
[e ) -> -> 1 `i `ui ]
[e $UE 144  ]
[; ;decode_AX25.c: 50: }
"50
[e :UE 144 ]
}
"53
[v _waitFlag `(v ~T0 @X0 1 ef ]
{
[; ;decode_AX25.c: 53: void waitFlag(void){
[e :U _waitFlag ]
[f ]
"54
[v _flag_judge `ui ~T0 @X0 1 a ]
"55
[v _buf `uc ~T0 @X0 1 a ]
[; ;decode_AX25.c: 54: UINT flag_judge;
[; ;decode_AX25.c: 55: UBYTE buf = 0xff;
[e = _buf -> -> 255 `i `uc ]
[; ;decode_AX25.c: 56: rcv_state = 0;
"56
[e = _rcv_state -> -> 0 `i `ui ]
[; ;decode_AX25.c: 57: while(rcv_state < 2){
"57
[e $U 150  ]
[e :U 151 ]
{
[; ;decode_AX25.c: 58: while(buf != 0x7e){
"58
[e $U 153  ]
[e :U 154 ]
{
[; ;decode_AX25.c: 59: flag_judge = getbit();
"59
[e = _flag_judge ( _getbit ..  ]
[; ;decode_AX25.c: 60: buf = buf << 1;
"60
[e = _buf -> << -> _buf `i -> 1 `i `uc ]
[; ;decode_AX25.c: 61: if(flag_judge == 0){
"61
[e $ ! == _flag_judge -> -> 0 `i `ui 156  ]
{
[; ;decode_AX25.c: 62: buf = buf | 0x00;
"62
[e = _buf -> | -> _buf `i -> 0 `i `uc ]
"63
}
[; ;decode_AX25.c: 63: }else{
[e $U 157  ]
[e :U 156 ]
{
[; ;decode_AX25.c: 64: buf = buf | 0x01;
"64
[e = _buf -> | -> _buf `i -> 1 `i `uc ]
"65
}
[e :U 157 ]
"66
}
[e :U 153 ]
"58
[e $ != -> _buf `i -> 126 `i 154  ]
[e :U 155 ]
[; ;decode_AX25.c: 65: }
[; ;decode_AX25.c: 66: }
[; ;decode_AX25.c: 70: while(buf == 0x7e){
"70
[e $U 158  ]
[e :U 159 ]
{
[; ;decode_AX25.c: 71: for(UINT i=0;i<8;i++){
"71
{
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 8 `i `ui 161  ]
[e $U 162  ]
[e :U 161 ]
{
[; ;decode_AX25.c: 72: flag_judge = getbit();
"72
[e = _flag_judge ( _getbit ..  ]
[; ;decode_AX25.c: 73: buf = buf >> 1;
"73
[e = _buf -> >> -> _buf `i -> 1 `i `uc ]
[; ;decode_AX25.c: 74: if(flag_judge == 0){
"74
[e $ ! == _flag_judge -> -> 0 `i `ui 164  ]
{
[; ;decode_AX25.c: 75: buf = buf | 0x00;
"75
[e = _buf -> | -> _buf `i -> 0 `i `uc ]
"76
}
[; ;decode_AX25.c: 76: }else{
[e $U 165  ]
[e :U 164 ]
{
[; ;decode_AX25.c: 77: buf = buf | 0x80;
"77
[e = _buf -> | -> _buf `i -> 128 `i `uc ]
"78
}
[e :U 165 ]
"79
}
"71
[e ++ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 8 `i `ui 161  ]
[e :U 162 ]
"79
}
"80
}
[e :U 158 ]
"70
[e $ == -> _buf `i -> 126 `i 159  ]
[e :U 160 ]
[; ;decode_AX25.c: 78: }
[; ;decode_AX25.c: 79: }
[; ;decode_AX25.c: 80: }
[; ;decode_AX25.c: 81: if(buf == ("JQ1YCZ"[0] << 1)){
"81
[e $ ! == -> _buf `i << -> *U + :s 1C * -> -> 0 `i `x -> -> # *U :s 1C `i `x `i -> 1 `i 166  ]
{
[; ;decode_AX25.c: 82: dPacket[dPacketnum] = buf;
"82
[e = *U + &U _dPacket * -> _dPacketnum `ux -> -> # *U &U _dPacket `ui `ux _buf ]
[; ;decode_AX25.c: 83: dPacketnum ++;
"83
[e ++ _dPacketnum -> -> 1 `i `ui ]
[; ;decode_AX25.c: 84: for(UINT j=0;j<8;j++){
"84
{
[v _j `ui ~T0 @X0 1 a ]
[e = _j -> -> 0 `i `ui ]
[e $ < _j -> -> 8 `i `ui 167  ]
[e $U 168  ]
[e :U 167 ]
{
[; ;decode_AX25.c: 85: flag_judge = getbit();
"85
[e = _flag_judge ( _getbit ..  ]
[; ;decode_AX25.c: 86: buf = buf >> 1;
"86
[e = _buf -> >> -> _buf `i -> 1 `i `uc ]
[; ;decode_AX25.c: 87: if(flag_judge == 0){
"87
[e $ ! == _flag_judge -> -> 0 `i `ui 170  ]
{
[; ;decode_AX25.c: 88: buf = buf | 0x00;
"88
[e = _buf -> | -> _buf `i -> 0 `i `uc ]
"89
}
[; ;decode_AX25.c: 89: }else{
[e $U 171  ]
[e :U 170 ]
{
[; ;decode_AX25.c: 90: buf = buf | 0x80;
"90
[e = _buf -> | -> _buf `i -> 128 `i `uc ]
"91
}
[e :U 171 ]
"92
}
"84
[e ++ _j -> -> 1 `i `ui ]
[e $ < _j -> -> 8 `i `ui 167  ]
[e :U 168 ]
"92
}
[; ;decode_AX25.c: 91: }
[; ;decode_AX25.c: 92: }
[; ;decode_AX25.c: 93: if(buf == ("JQ1YCZ"[1] << 1)){
"93
[e $ ! == -> _buf `i << -> *U + :s 2C * -> -> 1 `i `x -> -> # *U :s 2C `i `x `i -> 1 `i 172  ]
{
[; ;decode_AX25.c: 94: dPacket[dPacketnum] = buf;
"94
[e = *U + &U _dPacket * -> _dPacketnum `ux -> -> # *U &U _dPacket `ui `ux _buf ]
[; ;decode_AX25.c: 95: dPacketnum ++;
"95
[e ++ _dPacketnum -> -> 1 `i `ui ]
[; ;decode_AX25.c: 96: for(UINT j=0;j<8;j++){
"96
{
[v _j `ui ~T0 @X0 1 a ]
[e = _j -> -> 0 `i `ui ]
[e $ < _j -> -> 8 `i `ui 173  ]
[e $U 174  ]
[e :U 173 ]
{
[; ;decode_AX25.c: 97: flag_judge = getbit();
"97
[e = _flag_judge ( _getbit ..  ]
[; ;decode_AX25.c: 98: buf = buf >> 1;
"98
[e = _buf -> >> -> _buf `i -> 1 `i `uc ]
[; ;decode_AX25.c: 99: if(flag_judge == 0){
"99
[e $ ! == _flag_judge -> -> 0 `i `ui 176  ]
{
[; ;decode_AX25.c: 100: buf = buf | 0x00;
"100
[e = _buf -> | -> _buf `i -> 0 `i `uc ]
"101
}
[; ;decode_AX25.c: 101: }else{
[e $U 177  ]
[e :U 176 ]
{
[; ;decode_AX25.c: 102: buf = buf | 0x80;
"102
[e = _buf -> | -> _buf `i -> 128 `i `uc ]
"103
}
[e :U 177 ]
"104
}
"96
[e ++ _j -> -> 1 `i `ui ]
[e $ < _j -> -> 8 `i `ui 173  ]
[e :U 174 ]
"104
}
[; ;decode_AX25.c: 103: }
[; ;decode_AX25.c: 104: }
[; ;decode_AX25.c: 105: if(buf == ("JQ1YCZ"[2] << 1)){
"105
[e $ ! == -> _buf `i << -> *U + :s 3C * -> -> 2 `i `x -> -> # *U :s 3C `i `x `i -> 1 `i 178  ]
{
[; ;decode_AX25.c: 106: dPacket[dPacketnum] = buf;
"106
[e = *U + &U _dPacket * -> _dPacketnum `ux -> -> # *U &U _dPacket `ui `ux _buf ]
[; ;decode_AX25.c: 107: dPacketnum ++;
"107
[e ++ _dPacketnum -> -> 1 `i `ui ]
[; ;decode_AX25.c: 108: for(UINT j=0;j<8;j++){
"108
{
[v _j `ui ~T0 @X0 1 a ]
[e = _j -> -> 0 `i `ui ]
[e $ < _j -> -> 8 `i `ui 179  ]
[e $U 180  ]
[e :U 179 ]
{
[; ;decode_AX25.c: 109: flag_judge = getbit();
"109
[e = _flag_judge ( _getbit ..  ]
[; ;decode_AX25.c: 110: buf = buf >> 1;
"110
[e = _buf -> >> -> _buf `i -> 1 `i `uc ]
[; ;decode_AX25.c: 111: if(flag_judge == 0){
"111
[e $ ! == _flag_judge -> -> 0 `i `ui 182  ]
{
[; ;decode_AX25.c: 112: buf = buf | 0x00;
"112
[e = _buf -> | -> _buf `i -> 0 `i `uc ]
"113
}
[; ;decode_AX25.c: 113: }else{
[e $U 183  ]
[e :U 182 ]
{
[; ;decode_AX25.c: 114: buf = buf | 0x80;
"114
[e = _buf -> | -> _buf `i -> 128 `i `uc ]
"115
}
[e :U 183 ]
"116
}
"108
[e ++ _j -> -> 1 `i `ui ]
[e $ < _j -> -> 8 `i `ui 179  ]
[e :U 180 ]
"116
}
[; ;decode_AX25.c: 115: }
[; ;decode_AX25.c: 116: }
[; ;decode_AX25.c: 117: if(buf == ("JQ1YCZ"[3] << 1)){
"117
[e $ ! == -> _buf `i << -> *U + :s 4C * -> -> 3 `i `x -> -> # *U :s 4C `i `x `i -> 1 `i 184  ]
{
[; ;decode_AX25.c: 118: dPacket[dPacketnum] = buf;
"118
[e = *U + &U _dPacket * -> _dPacketnum `ux -> -> # *U &U _dPacket `ui `ux _buf ]
[; ;decode_AX25.c: 119: dPacketnum ++;
"119
[e ++ _dPacketnum -> -> 1 `i `ui ]
[; ;decode_AX25.c: 120: for(UINT j=0;j<8;j++){
"120
{
[v _j `ui ~T0 @X0 1 a ]
[e = _j -> -> 0 `i `ui ]
[e $ < _j -> -> 8 `i `ui 185  ]
[e $U 186  ]
[e :U 185 ]
{
[; ;decode_AX25.c: 121: flag_judge = getbit();
"121
[e = _flag_judge ( _getbit ..  ]
[; ;decode_AX25.c: 122: buf = buf >> 1;
"122
[e = _buf -> >> -> _buf `i -> 1 `i `uc ]
[; ;decode_AX25.c: 123: if(flag_judge == 0){
"123
[e $ ! == _flag_judge -> -> 0 `i `ui 188  ]
{
[; ;decode_AX25.c: 124: buf = buf | 0x00;
"124
[e = _buf -> | -> _buf `i -> 0 `i `uc ]
"125
}
[; ;decode_AX25.c: 125: }else{
[e $U 189  ]
[e :U 188 ]
{
[; ;decode_AX25.c: 126: buf = buf | 0x80;
"126
[e = _buf -> | -> _buf `i -> 128 `i `uc ]
"127
}
[e :U 189 ]
"128
}
"120
[e ++ _j -> -> 1 `i `ui ]
[e $ < _j -> -> 8 `i `ui 185  ]
[e :U 186 ]
"128
}
[; ;decode_AX25.c: 127: }
[; ;decode_AX25.c: 128: }
[; ;decode_AX25.c: 129: if(buf == ("JQ1YCZ"[4] << 1)){
"129
[e $ ! == -> _buf `i << -> *U + :s 5C * -> -> 4 `i `x -> -> # *U :s 5C `i `x `i -> 1 `i 190  ]
{
[; ;decode_AX25.c: 130: dPacket[dPacketnum] = buf;
"130
[e = *U + &U _dPacket * -> _dPacketnum `ux -> -> # *U &U _dPacket `ui `ux _buf ]
[; ;decode_AX25.c: 131: dPacketnum ++;
"131
[e ++ _dPacketnum -> -> 1 `i `ui ]
[; ;decode_AX25.c: 132: for(UINT j=0;j<8;j++){
"132
{
[v _j `ui ~T0 @X0 1 a ]
[e = _j -> -> 0 `i `ui ]
[e $ < _j -> -> 8 `i `ui 191  ]
[e $U 192  ]
[e :U 191 ]
{
[; ;decode_AX25.c: 133: flag_judge = getbit();
"133
[e = _flag_judge ( _getbit ..  ]
[; ;decode_AX25.c: 134: buf = buf >> 1;
"134
[e = _buf -> >> -> _buf `i -> 1 `i `uc ]
[; ;decode_AX25.c: 135: if(flag_judge == 0){
"135
[e $ ! == _flag_judge -> -> 0 `i `ui 194  ]
{
[; ;decode_AX25.c: 136: buf = buf | 0x00;
"136
[e = _buf -> | -> _buf `i -> 0 `i `uc ]
"137
}
[; ;decode_AX25.c: 137: }else{
[e $U 195  ]
[e :U 194 ]
{
[; ;decode_AX25.c: 138: buf = buf | 0x80;
"138
[e = _buf -> | -> _buf `i -> 128 `i `uc ]
"139
}
[e :U 195 ]
"140
}
"132
[e ++ _j -> -> 1 `i `ui ]
[e $ < _j -> -> 8 `i `ui 191  ]
[e :U 192 ]
"140
}
[; ;decode_AX25.c: 139: }
[; ;decode_AX25.c: 140: }
[; ;decode_AX25.c: 141: if(buf == ("JQ1YCZ"[5] << 1)){
"141
[e $ ! == -> _buf `i << -> *U + :s 6C * -> -> 5 `i `x -> -> # *U :s 6C `i `x `i -> 1 `i 196  ]
{
[; ;decode_AX25.c: 142: dPacket[dPacketnum] = buf;
"142
[e = *U + &U _dPacket * -> _dPacketnum `ux -> -> # *U &U _dPacket `ui `ux _buf ]
[; ;decode_AX25.c: 143: dPacketnum ++;
"143
[e ++ _dPacketnum -> -> 1 `i `ui ]
[; ;decode_AX25.c: 144: rcv_state ++;
"144
[e ++ _rcv_state -> -> 1 `i `ui ]
"145
}
[; ;decode_AX25.c: 145: }else{
[e $U 197  ]
[e :U 196 ]
{
[; ;decode_AX25.c: 146: dPacketnum = 0;
"146
[e = _dPacketnum -> -> 0 `i `ui ]
"147
}
[e :U 197 ]
"148
}
[; ;decode_AX25.c: 147: }
[; ;decode_AX25.c: 148: }else{
[e $U 198  ]
[e :U 190 ]
{
[; ;decode_AX25.c: 149: dPacketnum = 0;
"149
[e = _dPacketnum -> -> 0 `i `ui ]
"150
}
[e :U 198 ]
"151
}
[; ;decode_AX25.c: 150: }
[; ;decode_AX25.c: 151: }else{
[e $U 199  ]
[e :U 184 ]
{
[; ;decode_AX25.c: 152: dPacketnum = 0;
"152
[e = _dPacketnum -> -> 0 `i `ui ]
"153
}
[e :U 199 ]
"154
}
[; ;decode_AX25.c: 153: }
[; ;decode_AX25.c: 154: }else{
[e $U 200  ]
[e :U 178 ]
{
[; ;decode_AX25.c: 155: dPacketnum = 0;
"155
[e = _dPacketnum -> -> 0 `i `ui ]
"156
}
[e :U 200 ]
"157
}
[; ;decode_AX25.c: 156: }
[; ;decode_AX25.c: 157: }else{
[e $U 201  ]
[e :U 172 ]
{
[; ;decode_AX25.c: 158: dPacketnum = 0;
"158
[e = _dPacketnum -> -> 0 `i `ui ]
"159
}
[e :U 201 ]
"160
}
[; ;decode_AX25.c: 159: }
[; ;decode_AX25.c: 160: }else{
[e $U 202  ]
[e :U 166 ]
{
[; ;decode_AX25.c: 161: dPacketnum = 0;
"161
[e = _dPacketnum -> -> 0 `i `ui ]
"162
}
[e :U 202 ]
[; ;decode_AX25.c: 162: }
[; ;decode_AX25.c: 164: for(UINT j=0;j<8;j++){
"164
{
[v _j `ui ~T0 @X0 1 a ]
[e = _j -> -> 0 `i `ui ]
[e $ < _j -> -> 8 `i `ui 203  ]
[e $U 204  ]
[e :U 203 ]
{
[; ;decode_AX25.c: 165: flag_judge = getbit();
"165
[e = _flag_judge ( _getbit ..  ]
[; ;decode_AX25.c: 166: buf = buf >> 1;
"166
[e = _buf -> >> -> _buf `i -> 1 `i `uc ]
[; ;decode_AX25.c: 167: if(flag_judge == 0){
"167
[e $ ! == _flag_judge -> -> 0 `i `ui 206  ]
{
[; ;decode_AX25.c: 168: buf = buf | 0x00;
"168
[e = _buf -> | -> _buf `i -> 0 `i `uc ]
"169
}
[; ;decode_AX25.c: 169: }else{
[e $U 207  ]
[e :U 206 ]
{
[; ;decode_AX25.c: 170: buf = buf | 0x80;
"170
[e = _buf -> | -> _buf `i -> 128 `i `uc ]
"171
}
[e :U 207 ]
"172
}
"164
[e ++ _j -> -> 1 `i `ui ]
[e $ < _j -> -> 8 `i `ui 203  ]
[e :U 204 ]
"172
}
[; ;decode_AX25.c: 171: }
[; ;decode_AX25.c: 172: }
[; ;decode_AX25.c: 173: dPacket[dPacketnum] = buf;
"173
[e = *U + &U _dPacket * -> _dPacketnum `ux -> -> # *U &U _dPacket `ui `ux _buf ]
[; ;decode_AX25.c: 174: dPacketnum ++;
"174
[e ++ _dPacketnum -> -> 1 `i `ui ]
[; ;decode_AX25.c: 175: for(UINT j=0;j<8;j++){
"175
{
[v _j `ui ~T0 @X0 1 a ]
[e = _j -> -> 0 `i `ui ]
[e $ < _j -> -> 8 `i `ui 208  ]
[e $U 209  ]
[e :U 208 ]
{
[; ;decode_AX25.c: 176: flag_judge = getbit();
"176
[e = _flag_judge ( _getbit ..  ]
[; ;decode_AX25.c: 177: buf = buf >> 1;
"177
[e = _buf -> >> -> _buf `i -> 1 `i `uc ]
[; ;decode_AX25.c: 178: if(flag_judge == 0){
"178
[e $ ! == _flag_judge -> -> 0 `i `ui 211  ]
{
[; ;decode_AX25.c: 179: buf = buf | 0x00;
"179
[e = _buf -> | -> _buf `i -> 0 `i `uc ]
"180
}
[; ;decode_AX25.c: 180: }else{
[e $U 212  ]
[e :U 211 ]
{
[; ;decode_AX25.c: 181: buf = buf | 0x80;
"181
[e = _buf -> | -> _buf `i -> 128 `i `uc ]
"182
}
[e :U 212 ]
"183
}
"175
[e ++ _j -> -> 1 `i `ui ]
[e $ < _j -> -> 8 `i `ui 208  ]
[e :U 209 ]
"183
}
[; ;decode_AX25.c: 182: }
[; ;decode_AX25.c: 183: }
[; ;decode_AX25.c: 184: if(buf == ("JQ1ZHX"[0] << 1)){
"184
[e $ ! == -> _buf `i << -> *U + :s 7C * -> -> 0 `i `x -> -> # *U :s 7C `i `x `i -> 1 `i 213  ]
{
[; ;decode_AX25.c: 185: dPacket[dPacketnum] = buf;
"185
[e = *U + &U _dPacket * -> _dPacketnum `ux -> -> # *U &U _dPacket `ui `ux _buf ]
[; ;decode_AX25.c: 186: dPacketnum ++;
"186
[e ++ _dPacketnum -> -> 1 `i `ui ]
[; ;decode_AX25.c: 187: for(UINT j=0;j<8;j++){
"187
{
[v _j `ui ~T0 @X0 1 a ]
[e = _j -> -> 0 `i `ui ]
[e $ < _j -> -> 8 `i `ui 214  ]
[e $U 215  ]
[e :U 214 ]
{
[; ;decode_AX25.c: 188: flag_judge = getbit();
"188
[e = _flag_judge ( _getbit ..  ]
[; ;decode_AX25.c: 189: buf = buf >> 1;
"189
[e = _buf -> >> -> _buf `i -> 1 `i `uc ]
[; ;decode_AX25.c: 190: if(flag_judge == 0){
"190
[e $ ! == _flag_judge -> -> 0 `i `ui 217  ]
{
[; ;decode_AX25.c: 191: buf = buf | 0x00;
"191
[e = _buf -> | -> _buf `i -> 0 `i `uc ]
"192
}
[; ;decode_AX25.c: 192: }else{
[e $U 218  ]
[e :U 217 ]
{
[; ;decode_AX25.c: 193: buf = buf | 0x80;
"193
[e = _buf -> | -> _buf `i -> 128 `i `uc ]
"194
}
[e :U 218 ]
"195
}
"187
[e ++ _j -> -> 1 `i `ui ]
[e $ < _j -> -> 8 `i `ui 214  ]
[e :U 215 ]
"195
}
[; ;decode_AX25.c: 194: }
[; ;decode_AX25.c: 195: }
[; ;decode_AX25.c: 196: if(buf == ("JQ1ZHX"[1] << 1)){
"196
[e $ ! == -> _buf `i << -> *U + :s 8C * -> -> 1 `i `x -> -> # *U :s 8C `i `x `i -> 1 `i 219  ]
{
[; ;decode_AX25.c: 197: dPacket[dPacketnum] = buf;
"197
[e = *U + &U _dPacket * -> _dPacketnum `ux -> -> # *U &U _dPacket `ui `ux _buf ]
[; ;decode_AX25.c: 198: dPacketnum ++;
"198
[e ++ _dPacketnum -> -> 1 `i `ui ]
[; ;decode_AX25.c: 199: for(UINT j=0;j<8;j++){
"199
{
[v _j `ui ~T0 @X0 1 a ]
[e = _j -> -> 0 `i `ui ]
[e $ < _j -> -> 8 `i `ui 220  ]
[e $U 221  ]
[e :U 220 ]
{
[; ;decode_AX25.c: 200: flag_judge = getbit();
"200
[e = _flag_judge ( _getbit ..  ]
[; ;decode_AX25.c: 201: buf = buf >> 1;
"201
[e = _buf -> >> -> _buf `i -> 1 `i `uc ]
[; ;decode_AX25.c: 202: if(flag_judge == 0){
"202
[e $ ! == _flag_judge -> -> 0 `i `ui 223  ]
{
[; ;decode_AX25.c: 203: buf = buf | 0x00;
"203
[e = _buf -> | -> _buf `i -> 0 `i `uc ]
"204
}
[; ;decode_AX25.c: 204: }else{
[e $U 224  ]
[e :U 223 ]
{
[; ;decode_AX25.c: 205: buf = buf | 0x80;
"205
[e = _buf -> | -> _buf `i -> 128 `i `uc ]
"206
}
[e :U 224 ]
"207
}
"199
[e ++ _j -> -> 1 `i `ui ]
[e $ < _j -> -> 8 `i `ui 220  ]
[e :U 221 ]
"207
}
[; ;decode_AX25.c: 206: }
[; ;decode_AX25.c: 207: }
[; ;decode_AX25.c: 208: if(buf == ("JQ1ZHX"[2] << 1)){
"208
[e $ ! == -> _buf `i << -> *U + :s 9C * -> -> 2 `i `x -> -> # *U :s 9C `i `x `i -> 1 `i 225  ]
{
[; ;decode_AX25.c: 209: dPacket[dPacketnum] = buf;
"209
[e = *U + &U _dPacket * -> _dPacketnum `ux -> -> # *U &U _dPacket `ui `ux _buf ]
[; ;decode_AX25.c: 210: dPacketnum ++;
"210
[e ++ _dPacketnum -> -> 1 `i `ui ]
[; ;decode_AX25.c: 211: for(UINT j=0;j<8;j++){
"211
{
[v _j `ui ~T0 @X0 1 a ]
[e = _j -> -> 0 `i `ui ]
[e $ < _j -> -> 8 `i `ui 226  ]
[e $U 227  ]
[e :U 226 ]
{
[; ;decode_AX25.c: 212: flag_judge = getbit();
"212
[e = _flag_judge ( _getbit ..  ]
[; ;decode_AX25.c: 213: buf = buf >> 1;
"213
[e = _buf -> >> -> _buf `i -> 1 `i `uc ]
[; ;decode_AX25.c: 214: if(flag_judge == 0){
"214
[e $ ! == _flag_judge -> -> 0 `i `ui 229  ]
{
[; ;decode_AX25.c: 215: buf = buf | 0x00;
"215
[e = _buf -> | -> _buf `i -> 0 `i `uc ]
"216
}
[; ;decode_AX25.c: 216: }else{
[e $U 230  ]
[e :U 229 ]
{
[; ;decode_AX25.c: 217: buf = buf | 0x80;
"217
[e = _buf -> | -> _buf `i -> 128 `i `uc ]
"218
}
[e :U 230 ]
"219
}
"211
[e ++ _j -> -> 1 `i `ui ]
[e $ < _j -> -> 8 `i `ui 226  ]
[e :U 227 ]
"219
}
[; ;decode_AX25.c: 218: }
[; ;decode_AX25.c: 219: }
[; ;decode_AX25.c: 220: if(buf == ("JQ1ZHX"[3] << 1)){
"220
[e $ ! == -> _buf `i << -> *U + :s 10C * -> -> 3 `i `x -> -> # *U :s 10C `i `x `i -> 1 `i 231  ]
{
[; ;decode_AX25.c: 221: dPacket[dPacketnum] = buf;
"221
[e = *U + &U _dPacket * -> _dPacketnum `ux -> -> # *U &U _dPacket `ui `ux _buf ]
[; ;decode_AX25.c: 222: dPacketnum ++;
"222
[e ++ _dPacketnum -> -> 1 `i `ui ]
[; ;decode_AX25.c: 223: for(UINT j=0;j<8;j++){
"223
{
[v _j `ui ~T0 @X0 1 a ]
[e = _j -> -> 0 `i `ui ]
[e $ < _j -> -> 8 `i `ui 232  ]
[e $U 233  ]
[e :U 232 ]
{
[; ;decode_AX25.c: 224: flag_judge = getbit();
"224
[e = _flag_judge ( _getbit ..  ]
[; ;decode_AX25.c: 225: buf = buf >> 1;
"225
[e = _buf -> >> -> _buf `i -> 1 `i `uc ]
[; ;decode_AX25.c: 226: if(flag_judge == 0){
"226
[e $ ! == _flag_judge -> -> 0 `i `ui 235  ]
{
[; ;decode_AX25.c: 227: buf = buf | 0x00;
"227
[e = _buf -> | -> _buf `i -> 0 `i `uc ]
"228
}
[; ;decode_AX25.c: 228: }else{
[e $U 236  ]
[e :U 235 ]
{
[; ;decode_AX25.c: 229: buf = buf | 0x80;
"229
[e = _buf -> | -> _buf `i -> 128 `i `uc ]
"230
}
[e :U 236 ]
"231
}
"223
[e ++ _j -> -> 1 `i `ui ]
[e $ < _j -> -> 8 `i `ui 232  ]
[e :U 233 ]
"231
}
[; ;decode_AX25.c: 230: }
[; ;decode_AX25.c: 231: }
[; ;decode_AX25.c: 232: if(buf == ("JQ1ZHX"[4] << 1)){
"232
[e $ ! == -> _buf `i << -> *U + :s 11C * -> -> 4 `i `x -> -> # *U :s 11C `i `x `i -> 1 `i 237  ]
{
[; ;decode_AX25.c: 233: dPacket[dPacketnum] = buf;
"233
[e = *U + &U _dPacket * -> _dPacketnum `ux -> -> # *U &U _dPacket `ui `ux _buf ]
[; ;decode_AX25.c: 234: dPacketnum ++;
"234
[e ++ _dPacketnum -> -> 1 `i `ui ]
[; ;decode_AX25.c: 235: for(UINT j=0;j<8;j++){
"235
{
[v _j `ui ~T0 @X0 1 a ]
[e = _j -> -> 0 `i `ui ]
[e $ < _j -> -> 8 `i `ui 238  ]
[e $U 239  ]
[e :U 238 ]
{
[; ;decode_AX25.c: 236: flag_judge = getbit();
"236
[e = _flag_judge ( _getbit ..  ]
[; ;decode_AX25.c: 237: buf = buf >> 1;
"237
[e = _buf -> >> -> _buf `i -> 1 `i `uc ]
[; ;decode_AX25.c: 238: if(flag_judge == 0){
"238
[e $ ! == _flag_judge -> -> 0 `i `ui 241  ]
{
[; ;decode_AX25.c: 239: buf = buf | 0x00;
"239
[e = _buf -> | -> _buf `i -> 0 `i `uc ]
"240
}
[; ;decode_AX25.c: 240: }else{
[e $U 242  ]
[e :U 241 ]
{
[; ;decode_AX25.c: 241: buf = buf | 0x80;
"241
[e = _buf -> | -> _buf `i -> 128 `i `uc ]
"242
}
[e :U 242 ]
"243
}
"235
[e ++ _j -> -> 1 `i `ui ]
[e $ < _j -> -> 8 `i `ui 238  ]
[e :U 239 ]
"243
}
[; ;decode_AX25.c: 242: }
[; ;decode_AX25.c: 243: }
[; ;decode_AX25.c: 244: if(buf == ("JQ1ZHX"[5] << 1)){
"244
[e $ ! == -> _buf `i << -> *U + :s 12C * -> -> 5 `i `x -> -> # *U :s 12C `i `x `i -> 1 `i 243  ]
{
[; ;decode_AX25.c: 245: dPacket[dPacketnum] = buf;
"245
[e = *U + &U _dPacket * -> _dPacketnum `ux -> -> # *U &U _dPacket `ui `ux _buf ]
[; ;decode_AX25.c: 246: dPacketnum ++;
"246
[e ++ _dPacketnum -> -> 1 `i `ui ]
[; ;decode_AX25.c: 247: rcv_state ++;
"247
[e ++ _rcv_state -> -> 1 `i `ui ]
"248
}
[; ;decode_AX25.c: 248: }else{
[e $U 244  ]
[e :U 243 ]
{
[; ;decode_AX25.c: 249: dPacketnum = 0;
"249
[e = _dPacketnum -> -> 0 `i `ui ]
[; ;decode_AX25.c: 250: rcv_state = 0;
"250
[e = _rcv_state -> -> 0 `i `ui ]
"251
}
[e :U 244 ]
"252
}
[; ;decode_AX25.c: 251: }
[; ;decode_AX25.c: 252: }else{
[e $U 245  ]
[e :U 237 ]
{
[; ;decode_AX25.c: 253: dPacketnum = 0;
"253
[e = _dPacketnum -> -> 0 `i `ui ]
[; ;decode_AX25.c: 254: rcv_state = 0;
"254
[e = _rcv_state -> -> 0 `i `ui ]
"255
}
[e :U 245 ]
"256
}
[; ;decode_AX25.c: 255: }
[; ;decode_AX25.c: 256: }else{
[e $U 246  ]
[e :U 231 ]
{
[; ;decode_AX25.c: 257: dPacketnum = 0;
"257
[e = _dPacketnum -> -> 0 `i `ui ]
[; ;decode_AX25.c: 258: rcv_state = 0;
"258
[e = _rcv_state -> -> 0 `i `ui ]
"259
}
[e :U 246 ]
"260
}
[; ;decode_AX25.c: 259: }
[; ;decode_AX25.c: 260: }else{
[e $U 247  ]
[e :U 225 ]
{
[; ;decode_AX25.c: 261: dPacketnum = 0;
"261
[e = _dPacketnum -> -> 0 `i `ui ]
[; ;decode_AX25.c: 262: rcv_state = 0;
"262
[e = _rcv_state -> -> 0 `i `ui ]
"263
}
[e :U 247 ]
"264
}
[; ;decode_AX25.c: 263: }
[; ;decode_AX25.c: 264: }else{
[e $U 248  ]
[e :U 219 ]
{
[; ;decode_AX25.c: 265: dPacketnum = 0;
"265
[e = _dPacketnum -> -> 0 `i `ui ]
[; ;decode_AX25.c: 266: rcv_state = 0;
"266
[e = _rcv_state -> -> 0 `i `ui ]
"267
}
[e :U 248 ]
"268
}
[; ;decode_AX25.c: 267: }
[; ;decode_AX25.c: 268: }else{
[e $U 249  ]
[e :U 213 ]
{
[; ;decode_AX25.c: 269: dPacketnum = 0;
"269
[e = _dPacketnum -> -> 0 `i `ui ]
[; ;decode_AX25.c: 270: rcv_state = 0;
"270
[e = _rcv_state -> -> 0 `i `ui ]
"271
}
[e :U 249 ]
"272
}
[e :U 150 ]
"57
[e $ < _rcv_state -> -> 2 `i `ui 151  ]
[e :U 152 ]
[; ;decode_AX25.c: 271: }
[; ;decode_AX25.c: 272: }
[; ;decode_AX25.c: 273: }
"273
[e :UE 149 ]
}
"277
[v _getdata `(v ~T0 @X0 1 ef ]
{
[; ;decode_AX25.c: 277: void getdata(void){
[e :U _getdata ]
[f ]
"278
[v _buf `uc ~T0 @X0 1 a ]
[; ;decode_AX25.c: 278: UBYTE buf = 0x00;
[e = _buf -> -> 0 `i `uc ]
"279
[v _dstuff `ui ~T0 @X0 1 a ]
[; ;decode_AX25.c: 279: UINT dstuff = 0;
[e = _dstuff -> -> 0 `i `ui ]
"280
[v _dammy_data `uc ~T0 @X0 1 a ]
"281
[v _bufstore_counter `ui ~T0 @X0 1 a ]
[; ;decode_AX25.c: 280: UBYTE dammy_data;
[; ;decode_AX25.c: 281: UINT bufstore_counter = 0;
[e = _bufstore_counter -> -> 0 `i `ui ]
"282
[v _dbitstatus `ui ~T0 @X0 1 a ]
[; ;decode_AX25.c: 282: UINT dbitstatus = 0;
[e = _dbitstatus -> -> 0 `i `ui ]
[; ;decode_AX25.c: 284: while(rcv_state == 2){
"284
[e $U 251  ]
[e :U 252 ]
{
[; ;decode_AX25.c: 285: dbitstatus = getbit();
"285
[e = _dbitstatus ( _getbit ..  ]
[; ;decode_AX25.c: 286: if(dstuff == 5){
"286
[e $ ! == _dstuff -> -> 5 `i `ui 254  ]
{
[; ;decode_AX25.c: 287: if(dbitstatus == 1){
"287
[e $ ! == _dbitstatus -> -> 1 `i `ui 255  ]
{
[; ;decode_AX25.c: 288: rcv_state ++;
"288
[e ++ _rcv_state -> -> 1 `i `ui ]
[; ;decode_AX25.c: 289: break;
"289
[e $U 253  ]
"290
}
[; ;decode_AX25.c: 290: }else{
[e $U 256  ]
[e :U 255 ]
{
[; ;decode_AX25.c: 291: dstuff = 0;
"291
[e = _dstuff -> -> 0 `i `ui ]
"292
}
[e :U 256 ]
"293
}
[; ;decode_AX25.c: 292: }
[; ;decode_AX25.c: 293: }else{
[e $U 257  ]
[e :U 254 ]
{
[; ;decode_AX25.c: 294: buf = buf >> 1;
"294
[e = _buf -> >> -> _buf `i -> 1 `i `uc ]
[; ;decode_AX25.c: 295: if(dbitstatus == 0){
"295
[e $ ! == _dbitstatus -> -> 0 `i `ui 258  ]
{
[; ;decode_AX25.c: 296: buf = buf | 0x00;
"296
[e = _buf -> | -> _buf `i -> 0 `i `uc ]
[; ;decode_AX25.c: 297: dstuff = 0;
"297
[e = _dstuff -> -> 0 `i `ui ]
"298
}
[; ;decode_AX25.c: 298: }else{
[e $U 259  ]
[e :U 258 ]
{
[; ;decode_AX25.c: 299: buf = buf | 0x80;
"299
[e = _buf -> | -> _buf `i -> 128 `i `uc ]
[; ;decode_AX25.c: 300: dstuff ++;
"300
[e ++ _dstuff -> -> 1 `i `ui ]
"301
}
[e :U 259 ]
[; ;decode_AX25.c: 301: }
[; ;decode_AX25.c: 302: bufstore_counter ++;
"302
[e ++ _bufstore_counter -> -> 1 `i `ui ]
[; ;decode_AX25.c: 303: if(bufstore_counter == 8){
"303
[e $ ! == _bufstore_counter -> -> 8 `i `ui 260  ]
{
[; ;decode_AX25.c: 304: bufstore_counter = 0;
"304
[e = _bufstore_counter -> -> 0 `i `ui ]
[; ;decode_AX25.c: 305: dPacket[dPacketnum] = buf;
"305
[e = *U + &U _dPacket * -> _dPacketnum `ux -> -> # *U &U _dPacket `ui `ux _buf ]
[; ;decode_AX25.c: 306: dPacketnum ++;
"306
[e ++ _dPacketnum -> -> 1 `i `ui ]
"307
}
[e :U 260 ]
"308
}
[e :U 257 ]
"309
}
[e :U 251 ]
"284
[e $ == _rcv_state -> -> 2 `i `ui 252  ]
[e :U 253 ]
[; ;decode_AX25.c: 307: }
[; ;decode_AX25.c: 308: }
[; ;decode_AX25.c: 309: }
[; ;decode_AX25.c: 310: }
"310
[e :UE 250 ]
}
"312
[v _fcscheck `(ui ~T0 @X0 1 ef ]
{
[; ;decode_AX25.c: 312: UINT fcscheck(void){
[e :U _fcscheck ]
[f ]
"313
[v _bt `uc ~T0 @X0 1 a ]
[v _byte `uc ~T0 @X0 1 a ]
[; ;decode_AX25.c: 313: UBYTE bt,byte;
[; ;decode_AX25.c: 314: dfcslo = dfcshi = 0xff;
"314
[e = _dfcslo = _dfcshi -> -> 255 `i `uc ]
[; ;decode_AX25.c: 315: while(rcv_state == 3){
"315
[e $U 262  ]
[e :U 263 ]
{
[; ;decode_AX25.c: 316: for(UINT i=0;i<dPacketnum-2;i++){
"316
{
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
[e $U 268  ]
[e :U 265 ]
{
[; ;decode_AX25.c: 317: byte = dPacket[i];
"317
[e = _byte *U + &U _dPacket * -> _i `ux -> -> # *U &U _dPacket `ui `ux ]
[; ;decode_AX25.c: 318: for(UINT i=0;i<8;i++){
"318
{
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 8 `i `ui 269  ]
[e $U 270  ]
[e :U 269 ]
{
[; ;decode_AX25.c: 319: bt = byte & 0x01;
"319
[e = _bt -> & -> _byte `i -> 1 `i `uc ]
"321
[; <"                     BCF 03,0 ;# ">
"322
[; <"                     RRF _dfcshi,F ;# ">
"323
[; <"                     RRF _dfcslo,F ;# ">
[; ;decode_AX25.c: 325: if(((STATUS & 0x01)^bt) == 0x01){
"325
[e $ ! == ^ & -> _STATUS `i -> 1 `i -> _bt `i -> 1 `i 272  ]
{
[; ;decode_AX25.c: 326: dfcshi = dfcshi ^ 0x84;
"326
[e = _dfcshi -> ^ -> _dfcshi `i -> 132 `i `uc ]
[; ;decode_AX25.c: 327: dfcslo = dfcslo ^ 0x08;
"327
[e = _dfcslo -> ^ -> _dfcslo `i -> 8 `i `uc ]
"328
}
[e :U 272 ]
[; ;decode_AX25.c: 328: }
[; ;decode_AX25.c: 329: byte = byte >> 1;
"329
[e = _byte -> >> -> _byte `i -> 1 `i `uc ]
"330
}
"318
[e ++ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 8 `i `ui 269  ]
[e :U 270 ]
"330
}
"331
}
"316
[e ++ _i -> -> 1 `i `ui ]
[e :U 268 ]
[e $ < _i - _dPacketnum -> -> 2 `i `ui 265  ]
[e :U 266 ]
"331
}
[; ;decode_AX25.c: 330: }
[; ;decode_AX25.c: 331: }
[; ;decode_AX25.c: 332: dfcslo = dfcslo ^ 0xff;
"332
[e = _dfcslo -> ^ -> _dfcslo `i -> 255 `i `uc ]
[; ;decode_AX25.c: 333: dfcshi = dfcshi ^ 0xff;
"333
[e = _dfcshi -> ^ -> _dfcshi `i -> 255 `i `uc ]
[; ;decode_AX25.c: 336: if((dPacket[dPacketnum-2] == dfcslo) && (dPacket[dPacketnum-1] == dfcshi)){
"336
[e $ ! && == -> *U + &U _dPacket * -> - _dPacketnum -> -> 2 `i `ui `ux -> -> # *U &U _dPacket `ui `ux `i -> _dfcslo `i == -> *U + &U _dPacket * -> - _dPacketnum -> -> 1 `i `ui `ux -> -> # *U &U _dPacket `ui `ux `i -> _dfcshi `i 273  ]
{
[; ;decode_AX25.c: 341: return 1;
"341
[e ) -> -> 1 `i `ui ]
[e $UE 261  ]
"342
}
[; ;decode_AX25.c: 342: }else{
[e $U 274  ]
[e :U 273 ]
{
[; ;decode_AX25.c: 347: return 0;
"347
[e ) -> -> 0 `i `ui ]
[e $UE 261  ]
"348
}
[e :U 274 ]
"349
}
[e :U 262 ]
"315
[e $ == _rcv_state -> -> 3 `i `ui 263  ]
[e :U 264 ]
[; ;decode_AX25.c: 348: }
[; ;decode_AX25.c: 349: }
[; ;decode_AX25.c: 350: }
"350
[e :UE 261 ]
}
"352
[v _ReceivePacket `(v ~T0 @X0 1 ef ]
{
[; ;decode_AX25.c: 352: void ReceivePacket(void){
[e :U _ReceivePacket ]
[f ]
[; ;decode_AX25.c: 353: waitFlag();
"353
[e ( _waitFlag ..  ]
[; ;decode_AX25.c: 354: getdata();
"354
[e ( _getdata ..  ]
[; ;decode_AX25.c: 355: fcscheck();
"355
[e ( _fcscheck ..  ]
[; ;decode_AX25.c: 356: }
"356
[e :UE 275 ]
}
"358
[v _ReceivePacket_data `(*uc ~T0 @X0 1 ef ]
{
[; ;decode_AX25.c: 358: UBYTE *ReceivePacket_data(void){
[e :U _ReceivePacket_data ]
[f ]
"359
[v _fcschecker `ui ~T0 @X0 1 a ]
[; ;decode_AX25.c: 359: UINT fcschecker;
[; ;decode_AX25.c: 362: waitFlag();
"362
[e ( _waitFlag ..  ]
[; ;decode_AX25.c: 363: RB2 = 1;
"363
[e = _RB2 -> -> 1 `i `b ]
[; ;decode_AX25.c: 364: getdata();
"364
[e ( _getdata ..  ]
[; ;decode_AX25.c: 365: RB2 = 0;
"365
[e = _RB2 -> -> 0 `i `b ]
[; ;decode_AX25.c: 366: fcschecker = fcscheck();
"366
[e = _fcschecker ( _fcscheck ..  ]
[; ;decode_AX25.c: 368: if(fcschecker == 1){
"368
[e $ ! == _fcschecker -> -> 1 `i `ui 277  ]
{
[; ;decode_AX25.c: 369: for(UINT i=0; i<dPacketnum-18; i++){
"369
{
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
[e $U 281  ]
[e :U 278 ]
{
[; ;decode_AX25.c: 370: dData[i] = dPacket[i+16];
"370
[e = *U + &U _dData * -> _i `ux -> -> # *U &U _dData `ui `ux *U + &U _dPacket * -> + _i -> -> 16 `i `ui `ux -> -> # *U &U _dPacket `ui `ux ]
"371
}
"369
[e ++ _i -> -> 1 `i `ui ]
[e :U 281 ]
[e $ < _i - _dPacketnum -> -> 18 `i `ui 278  ]
[e :U 279 ]
"371
}
[; ;decode_AX25.c: 371: }
[; ;decode_AX25.c: 372: dPacketnum = 0;
"372
[e = _dPacketnum -> -> 0 `i `ui ]
[; ;decode_AX25.c: 373: rcv_state = 0;
"373
[e = _rcv_state -> -> 0 `i `ui ]
[; ;decode_AX25.c: 374: return dData;
"374
[e ) &U _dData ]
[e $UE 276  ]
"375
}
[; ;decode_AX25.c: 375: }else{
[e $U 282  ]
[e :U 277 ]
{
[; ;decode_AX25.c: 376: dPacketnum = 0;
"376
[e = _dPacketnum -> -> 0 `i `ui ]
[; ;decode_AX25.c: 377: rcv_state = 0;
"377
[e = _rcv_state -> -> 0 `i `ui ]
[; ;decode_AX25.c: 378: return 0x00;
"378
[e ) -> -> 0 `i `*uc ]
[e $UE 276  ]
"379
}
[e :U 282 ]
[; ;decode_AX25.c: 379: }
[; ;decode_AX25.c: 380: }
"380
[e :UE 276 ]
}
"383
[v _putAX25 `(v ~T0 @X0 1 ef ]
{
[; ;decode_AX25.c: 383: void putAX25(void){
[e :U _putAX25 ]
[f ]
[; ;decode_AX25.c: 384: for(UINT i=0;i<6;i++){
"384
{
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 6 `i `ui 284  ]
[e $U 285  ]
[e :U 284 ]
{
[; ;decode_AX25.c: 385: dPacket[i] = dPacket[i] >> 1;
"385
[e = *U + &U _dPacket * -> _i `ux -> -> # *U &U _dPacket `ui `ux -> >> -> *U + &U _dPacket * -> _i `ux -> -> # *U &U _dPacket `ui `ux `i -> 1 `i `uc ]
[; ;decode_AX25.c: 386: dPacket[i+7] = dPacket[i+7] >> 1;
"386
[e = *U + &U _dPacket * -> + _i -> -> 7 `i `ui `ux -> -> # *U &U _dPacket `ui `ux -> >> -> *U + &U _dPacket * -> + _i -> -> 7 `i `ui `ux -> -> # *U &U _dPacket `ui `ux `i -> 1 `i `uc ]
"387
}
"384
[e ++ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 6 `i `ui 284  ]
[e :U 285 ]
"387
}
[; ;decode_AX25.c: 387: }
[; ;decode_AX25.c: 388: for(UINT i=0;i<6;i++){
"388
{
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 6 `i `ui 287  ]
[e $U 288  ]
[e :U 287 ]
{
[; ;decode_AX25.c: 389: putch(dPacket[i]);
"389
[e ( _putch (1 *U + &U _dPacket * -> _i `ux -> -> # *U &U _dPacket `ui `ux ]
"390
}
"388
[e ++ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 6 `i `ui 287  ]
[e :U 288 ]
"390
}
[; ;decode_AX25.c: 390: }
[; ;decode_AX25.c: 391: putch('>');
"391
[e ( _putch (1 -> -> 62 `ui `uc ]
[; ;decode_AX25.c: 392: for(UINT i=0;i<6;i++){
"392
{
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 6 `i `ui 290  ]
[e $U 291  ]
[e :U 290 ]
{
[; ;decode_AX25.c: 393: putch(dPacket[i+7]);
"393
[e ( _putch (1 *U + &U _dPacket * -> + _i -> -> 7 `i `ui `ux -> -> # *U &U _dPacket `ui `ux ]
"394
}
"392
[e ++ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 6 `i `ui 290  ]
[e :U 291 ]
"394
}
[; ;decode_AX25.c: 394: }
[; ;decode_AX25.c: 395: putch(':');
"395
[e ( _putch (1 -> -> 58 `ui `uc ]
[; ;decode_AX25.c: 396: for(UINT i=0;i<dPacketnum-18;i++){
"396
{
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
[e $U 296  ]
[e :U 293 ]
{
[; ;decode_AX25.c: 397: putch(dPacket[i+16]);
"397
[e ( _putch (1 *U + &U _dPacket * -> + _i -> -> 16 `i `ui `ux -> -> # *U &U _dPacket `ui `ux ]
"398
}
"396
[e ++ _i -> -> 1 `i `ui ]
[e :U 296 ]
[e $ < _i - _dPacketnum -> -> 18 `i `ui 293  ]
[e :U 294 ]
"398
}
[; ;decode_AX25.c: 398: }
[; ;decode_AX25.c: 399: return;
"399
[e $UE 283  ]
[; ;decode_AX25.c: 400: }
"400
[e :UE 283 ]
}
"403
[v _conv_DI_UARTRX `(v ~T0 @X0 1 ef ]
{
[; ;decode_AX25.c: 403: void conv_DI_UARTRX(void){
[e :U _conv_DI_UARTRX ]
[f ]
"404
[v _buf_dammy `uc ~T0 @X0 1 a ]
[; ;decode_AX25.c: 404: UBYTE buf_dammy = 0x00;
[e = _buf_dammy -> -> 0 `i `uc ]
"405
[v _buf `uc ~T0 @X0 1 a ]
[; ;decode_AX25.c: 405: UBYTE buf = 0x00;
[e = _buf -> -> 0 `i `uc ]
[; ;decode_AX25.c: 407: getbit();
"407
[e ( _getbit ..  ]
[; ;decode_AX25.c: 408: while(RB5 == 0){
"408
[e $U 298  ]
[e :U 299 ]
{
[; ;decode_AX25.c: 409: for(UINT i=0;i<8;i++){
"409
{
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 8 `i `ui 301  ]
[e $U 302  ]
[e :U 301 ]
{
[; ;decode_AX25.c: 410: getbit();
"410
[e ( _getbit ..  ]
[; ;decode_AX25.c: 411: buf_dammy = buf_dammy << 1;
"411
[e = _buf_dammy -> << -> _buf_dammy `i -> 1 `i `uc ]
[; ;decode_AX25.c: 412: if(RB5 == 0){
"412
[e $ ! == -> _RB5 `i -> 0 `i 304  ]
{
[; ;decode_AX25.c: 413: buf_dammy = buf_dammy | 0x00;
"413
[e = _buf_dammy -> | -> _buf_dammy `i -> 0 `i `uc ]
"414
}
[; ;decode_AX25.c: 414: }else{
[e $U 305  ]
[e :U 304 ]
{
[; ;decode_AX25.c: 415: buf_dammy = buf_dammy | 0x01;
"415
[e = _buf_dammy -> | -> _buf_dammy `i -> 1 `i `uc ]
"416
}
[e :U 305 ]
"417
}
"409
[e ++ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 8 `i `ui 301  ]
[e :U 302 ]
"417
}
[; ;decode_AX25.c: 416: }
[; ;decode_AX25.c: 417: }
[; ;decode_AX25.c: 418: getbit();
"418
[e ( _getbit ..  ]
[; ;decode_AX25.c: 419: buf = reverse_bit8(buf_dammy);
"419
[e = _buf ( _reverse_bit8 (1 _buf_dammy ]
[; ;decode_AX25.c: 420: putch(buf);
"420
[e ( _putch (1 _buf ]
"421
}
[e :U 298 ]
"408
[e $ == -> _RB5 `i -> 0 `i 299  ]
[e :U 300 ]
[; ;decode_AX25.c: 421: }
[; ;decode_AX25.c: 422: }
"422
[e :UE 297 ]
}
"425
[v _reverse_bit8 `(uc ~T0 @X0 1 ef1`uc ]
{
[; ;decode_AX25.c: 425: UBYTE reverse_bit8(UBYTE x){
[e :U _reverse_bit8 ]
[v _x `uc ~T0 @X0 1 r1 ]
[f ]
[; ;decode_AX25.c: 426: x = ((x & 0x55) << 1) | ((x & 0xAA) >> 1);
"426
[e = _x -> | << & -> _x `i -> 85 `i -> 1 `i >> & -> _x `i -> 170 `i -> 1 `i `uc ]
[; ;decode_AX25.c: 427: x = ((x & 0x33) << 2) | ((x & 0xCC) >> 2);
"427
[e = _x -> | << & -> _x `i -> 51 `i -> 2 `i >> & -> _x `i -> 204 `i -> 2 `i `uc ]
[; ;decode_AX25.c: 428: return (x << 4) | (x >> 4);
"428
[e ) -> | << -> _x `i -> 4 `i >> -> _x `i -> 4 `i `uc ]
[e $UE 306  ]
[; ;decode_AX25.c: 429: }
"429
[e :UE 306 ]
}
[a 1C 74 81 49 89 67 90 0 ]
[a 2C 74 81 49 89 67 90 0 ]
[a 3C 74 81 49 89 67 90 0 ]
[a 4C 74 81 49 89 67 90 0 ]
[a 5C 74 81 49 89 67 90 0 ]
[a 6C 74 81 49 89 67 90 0 ]
[a 7C 74 81 49 90 72 88 0 ]
[a 8C 74 81 49 90 72 88 0 ]
[a 9C 74 81 49 90 72 88 0 ]
[a 10C 74 81 49 90 72 88 0 ]
[a 11C 74 81 49 90 72 88 0 ]
[a 12C 74 81 49 90 72 88 0 ]
