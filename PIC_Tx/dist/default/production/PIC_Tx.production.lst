

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Wed Nov 08 20:30:53 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	dabs	1,0x7E,2
    36  0000                     
    37                           ; Version 1.44
    38                           ; Generated 14/09/2017 GMT
    39                           ; 
    40                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F886 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  000E                     	;# 
    86  000F                     	;# 
    87  0010                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0014                     	;# 
    92  0015                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001B                     	;# 
   101  001C                     	;# 
   102  001D                     	;# 
   103  001E                     	;# 
   104  001F                     	;# 
   105  0081                     	;# 
   106  0085                     	;# 
   107  0086                     	;# 
   108  0087                     	;# 
   109  0089                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  008F                     	;# 
   114  0090                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0095                     	;# 
   122  0096                     	;# 
   123  0097                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  0105                     	;# 
   133  0107                     	;# 
   134  0108                     	;# 
   135  0109                     	;# 
   136  010C                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010E                     	;# 
   140  010F                     	;# 
   141  0185                     	;# 
   142  0187                     	;# 
   143  0188                     	;# 
   144  0189                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  0000                     	;# 
   148  0001                     	;# 
   149  0002                     	;# 
   150  0003                     	;# 
   151  0004                     	;# 
   152  0005                     	;# 
   153  0006                     	;# 
   154  0007                     	;# 
   155  0009                     	;# 
   156  000A                     	;# 
   157  000B                     	;# 
   158  000C                     	;# 
   159  000D                     	;# 
   160  000E                     	;# 
   161  000E                     	;# 
   162  000F                     	;# 
   163  0010                     	;# 
   164  0011                     	;# 
   165  0012                     	;# 
   166  0013                     	;# 
   167  0014                     	;# 
   168  0015                     	;# 
   169  0015                     	;# 
   170  0016                     	;# 
   171  0017                     	;# 
   172  0018                     	;# 
   173  0019                     	;# 
   174  001A                     	;# 
   175  001B                     	;# 
   176  001B                     	;# 
   177  001C                     	;# 
   178  001D                     	;# 
   179  001E                     	;# 
   180  001F                     	;# 
   181  0081                     	;# 
   182  0085                     	;# 
   183  0086                     	;# 
   184  0087                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  0105                     	;# 
   209  0107                     	;# 
   210  0108                     	;# 
   211  0109                     	;# 
   212  010C                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  0185                     	;# 
   218  0187                     	;# 
   219  0188                     	;# 
   220  0189                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0009                     	;# 
   232  000A                     	;# 
   233  000B                     	;# 
   234  000C                     	;# 
   235  000D                     	;# 
   236  000E                     	;# 
   237  000E                     	;# 
   238  000F                     	;# 
   239  0010                     	;# 
   240  0011                     	;# 
   241  0012                     	;# 
   242  0013                     	;# 
   243  0014                     	;# 
   244  0015                     	;# 
   245  0015                     	;# 
   246  0016                     	;# 
   247  0017                     	;# 
   248  0018                     	;# 
   249  0019                     	;# 
   250  001A                     	;# 
   251  001B                     	;# 
   252  001B                     	;# 
   253  001C                     	;# 
   254  001D                     	;# 
   255  001E                     	;# 
   256  001F                     	;# 
   257  0081                     	;# 
   258  0085                     	;# 
   259  0086                     	;# 
   260  0087                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  008F                     	;# 
   266  0090                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  0105                     	;# 
   285  0107                     	;# 
   286  0108                     	;# 
   287  0109                     	;# 
   288  010C                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  0185                     	;# 
   294  0187                     	;# 
   295  0188                     	;# 
   296  0189                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  000E                     	;# 
   315  000F                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0014                     	;# 
   321  0015                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001D                     	;# 
   332  001E                     	;# 
   333  001F                     	;# 
   334  0081                     	;# 
   335  0085                     	;# 
   336  0086                     	;# 
   337  0087                     	;# 
   338  0088                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  008F                     	;# 
   344  0090                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0094                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0097                     	;# 
   354  0098                     	;# 
   355  0099                     	;# 
   356  009A                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362  0105                     	;# 
   363  0107                     	;# 
   364  0108                     	;# 
   365  0109                     	;# 
   366  010C                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  0185                     	;# 
   372  0187                     	;# 
   373  0188                     	;# 
   374  0189                     	;# 
   375  018C                     	;# 
   376  018D                     	;# 
   377  0000                     	;# 
   378  0001                     	;# 
   379  0002                     	;# 
   380  0003                     	;# 
   381  0004                     	;# 
   382  0005                     	;# 
   383  0006                     	;# 
   384  0007                     	;# 
   385  0009                     	;# 
   386  000A                     	;# 
   387  000B                     	;# 
   388  000C                     	;# 
   389  000D                     	;# 
   390  000E                     	;# 
   391  000E                     	;# 
   392  000F                     	;# 
   393  0010                     	;# 
   394  0011                     	;# 
   395  0012                     	;# 
   396  0013                     	;# 
   397  0014                     	;# 
   398  0015                     	;# 
   399  0015                     	;# 
   400  0016                     	;# 
   401  0017                     	;# 
   402  0018                     	;# 
   403  0019                     	;# 
   404  001A                     	;# 
   405  001B                     	;# 
   406  001B                     	;# 
   407  001C                     	;# 
   408  001D                     	;# 
   409  001E                     	;# 
   410  001F                     	;# 
   411  0081                     	;# 
   412  0085                     	;# 
   413  0086                     	;# 
   414  0087                     	;# 
   415  0089                     	;# 
   416  008C                     	;# 
   417  008D                     	;# 
   418  008E                     	;# 
   419  008F                     	;# 
   420  0090                     	;# 
   421  0091                     	;# 
   422  0092                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0094                     	;# 
   427  0095                     	;# 
   428  0096                     	;# 
   429  0097                     	;# 
   430  0098                     	;# 
   431  0099                     	;# 
   432  009A                     	;# 
   433  009B                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  009F                     	;# 
   438  0105                     	;# 
   439  0107                     	;# 
   440  0108                     	;# 
   441  0109                     	;# 
   442  010C                     	;# 
   443  010C                     	;# 
   444  010D                     	;# 
   445  010E                     	;# 
   446  010F                     	;# 
   447  0185                     	;# 
   448  0187                     	;# 
   449  0188                     	;# 
   450  0189                     	;# 
   451  018C                     	;# 
   452  018D                     	;# 
   453  0000                     	;# 
   454  0001                     	;# 
   455  0002                     	;# 
   456  0003                     	;# 
   457  0004                     	;# 
   458  0005                     	;# 
   459  0006                     	;# 
   460  0007                     	;# 
   461  0008                     	;# 
   462  0009                     	;# 
   463  000A                     	;# 
   464  000B                     	;# 
   465  000C                     	;# 
   466  000D                     	;# 
   467  000E                     	;# 
   468  000E                     	;# 
   469  000F                     	;# 
   470  0010                     	;# 
   471  0011                     	;# 
   472  0012                     	;# 
   473  0013                     	;# 
   474  0014                     	;# 
   475  0015                     	;# 
   476  0015                     	;# 
   477  0016                     	;# 
   478  0017                     	;# 
   479  0018                     	;# 
   480  0019                     	;# 
   481  001A                     	;# 
   482  001B                     	;# 
   483  001B                     	;# 
   484  001C                     	;# 
   485  001D                     	;# 
   486  001E                     	;# 
   487  001F                     	;# 
   488  0081                     	;# 
   489  0085                     	;# 
   490  0086                     	;# 
   491  0087                     	;# 
   492  0088                     	;# 
   493  0089                     	;# 
   494  008C                     	;# 
   495  008D                     	;# 
   496  008E                     	;# 
   497  008F                     	;# 
   498  0090                     	;# 
   499  0091                     	;# 
   500  0092                     	;# 
   501  0093                     	;# 
   502  0093                     	;# 
   503  0093                     	;# 
   504  0094                     	;# 
   505  0095                     	;# 
   506  0096                     	;# 
   507  0097                     	;# 
   508  0098                     	;# 
   509  0099                     	;# 
   510  009A                     	;# 
   511  009B                     	;# 
   512  009C                     	;# 
   513  009D                     	;# 
   514  009E                     	;# 
   515  009F                     	;# 
   516  0105                     	;# 
   517  0107                     	;# 
   518  0108                     	;# 
   519  0109                     	;# 
   520  010C                     	;# 
   521  010C                     	;# 
   522  010D                     	;# 
   523  010E                     	;# 
   524  010F                     	;# 
   525  0185                     	;# 
   526  0187                     	;# 
   527  0188                     	;# 
   528  0189                     	;# 
   529  018C                     	;# 
   530  018D                     	;# 
   531  0000                     	;# 
   532  0001                     	;# 
   533  0002                     	;# 
   534  0003                     	;# 
   535  0004                     	;# 
   536  0005                     	;# 
   537  0006                     	;# 
   538  0007                     	;# 
   539  0009                     	;# 
   540  000A                     	;# 
   541  000B                     	;# 
   542  000C                     	;# 
   543  000D                     	;# 
   544  000E                     	;# 
   545  000E                     	;# 
   546  000F                     	;# 
   547  0010                     	;# 
   548  0011                     	;# 
   549  0012                     	;# 
   550  0013                     	;# 
   551  0014                     	;# 
   552  0015                     	;# 
   553  0015                     	;# 
   554  0016                     	;# 
   555  0017                     	;# 
   556  0018                     	;# 
   557  0019                     	;# 
   558  001A                     	;# 
   559  001B                     	;# 
   560  001B                     	;# 
   561  001C                     	;# 
   562  001D                     	;# 
   563  001E                     	;# 
   564  001F                     	;# 
   565  0081                     	;# 
   566  0085                     	;# 
   567  0086                     	;# 
   568  0087                     	;# 
   569  0089                     	;# 
   570  008C                     	;# 
   571  008D                     	;# 
   572  008E                     	;# 
   573  008F                     	;# 
   574  0090                     	;# 
   575  0091                     	;# 
   576  0092                     	;# 
   577  0093                     	;# 
   578  0093                     	;# 
   579  0093                     	;# 
   580  0094                     	;# 
   581  0095                     	;# 
   582  0096                     	;# 
   583  0097                     	;# 
   584  0098                     	;# 
   585  0099                     	;# 
   586  009A                     	;# 
   587  009B                     	;# 
   588  009C                     	;# 
   589  009D                     	;# 
   590  009E                     	;# 
   591  009F                     	;# 
   592  0105                     	;# 
   593  0107                     	;# 
   594  0108                     	;# 
   595  0109                     	;# 
   596  010C                     	;# 
   597  010C                     	;# 
   598  010D                     	;# 
   599  010E                     	;# 
   600  010F                     	;# 
   601  0185                     	;# 
   602  0187                     	;# 
   603  0188                     	;# 
   604  0189                     	;# 
   605  018C                     	;# 
   606  018D                     	;# 
   607  0000                     	;# 
   608  0001                     	;# 
   609  0002                     	;# 
   610  0003                     	;# 
   611  0004                     	;# 
   612  0005                     	;# 
   613  0006                     	;# 
   614  0007                     	;# 
   615  0008                     	;# 
   616  0009                     	;# 
   617  000A                     	;# 
   618  000B                     	;# 
   619  000C                     	;# 
   620  000D                     	;# 
   621  000E                     	;# 
   622  000E                     	;# 
   623  000F                     	;# 
   624  0010                     	;# 
   625  0011                     	;# 
   626  0012                     	;# 
   627  0013                     	;# 
   628  0014                     	;# 
   629  0015                     	;# 
   630  0015                     	;# 
   631  0016                     	;# 
   632  0017                     	;# 
   633  0018                     	;# 
   634  0019                     	;# 
   635  001A                     	;# 
   636  001B                     	;# 
   637  001B                     	;# 
   638  001C                     	;# 
   639  001D                     	;# 
   640  001E                     	;# 
   641  001F                     	;# 
   642  0081                     	;# 
   643  0085                     	;# 
   644  0086                     	;# 
   645  0087                     	;# 
   646  0088                     	;# 
   647  0089                     	;# 
   648  008C                     	;# 
   649  008D                     	;# 
   650  008E                     	;# 
   651  008F                     	;# 
   652  0090                     	;# 
   653  0091                     	;# 
   654  0092                     	;# 
   655  0093                     	;# 
   656  0093                     	;# 
   657  0093                     	;# 
   658  0094                     	;# 
   659  0095                     	;# 
   660  0096                     	;# 
   661  0097                     	;# 
   662  0098                     	;# 
   663  0099                     	;# 
   664  009A                     	;# 
   665  009B                     	;# 
   666  009C                     	;# 
   667  009D                     	;# 
   668  009E                     	;# 
   669  009F                     	;# 
   670  0105                     	;# 
   671  0107                     	;# 
   672  0108                     	;# 
   673  0109                     	;# 
   674  010C                     	;# 
   675  010C                     	;# 
   676  010D                     	;# 
   677  010E                     	;# 
   678  010F                     	;# 
   679  0185                     	;# 
   680  0187                     	;# 
   681  0188                     	;# 
   682  0189                     	;# 
   683  018C                     	;# 
   684  018D                     	;# 
   685  0000                     	;# 
   686  0001                     	;# 
   687  0002                     	;# 
   688  0003                     	;# 
   689  0004                     	;# 
   690  0005                     	;# 
   691  0006                     	;# 
   692  0007                     	;# 
   693  0009                     	;# 
   694  000A                     	;# 
   695  000B                     	;# 
   696  000C                     	;# 
   697  000D                     	;# 
   698  000E                     	;# 
   699  000E                     	;# 
   700  000F                     	;# 
   701  0010                     	;# 
   702  0011                     	;# 
   703  0012                     	;# 
   704  0013                     	;# 
   705  0014                     	;# 
   706  0015                     	;# 
   707  0015                     	;# 
   708  0016                     	;# 
   709  0017                     	;# 
   710  0018                     	;# 
   711  0019                     	;# 
   712  001A                     	;# 
   713  001B                     	;# 
   714  001B                     	;# 
   715  001C                     	;# 
   716  001D                     	;# 
   717  001E                     	;# 
   718  001F                     	;# 
   719  0081                     	;# 
   720  0085                     	;# 
   721  0086                     	;# 
   722  0087                     	;# 
   723  0089                     	;# 
   724  008C                     	;# 
   725  008D                     	;# 
   726  008E                     	;# 
   727  008F                     	;# 
   728  0090                     	;# 
   729  0091                     	;# 
   730  0092                     	;# 
   731  0093                     	;# 
   732  0093                     	;# 
   733  0093                     	;# 
   734  0094                     	;# 
   735  0095                     	;# 
   736  0096                     	;# 
   737  0097                     	;# 
   738  0098                     	;# 
   739  0099                     	;# 
   740  009A                     	;# 
   741  009B                     	;# 
   742  009C                     	;# 
   743  009D                     	;# 
   744  009E                     	;# 
   745  009F                     	;# 
   746  0105                     	;# 
   747  0107                     	;# 
   748  0108                     	;# 
   749  0109                     	;# 
   750  010C                     	;# 
   751  010C                     	;# 
   752  010D                     	;# 
   753  010E                     	;# 
   754  010F                     	;# 
   755  0185                     	;# 
   756  0187                     	;# 
   757  0188                     	;# 
   758  0189                     	;# 
   759  018C                     	;# 
   760  018D                     	;# 
   761  0000                     	;# 
   762  0001                     	;# 
   763  0002                     	;# 
   764  0003                     	;# 
   765  0004                     	;# 
   766  0005                     	;# 
   767  0006                     	;# 
   768  0007                     	;# 
   769  0008                     	;# 
   770  0009                     	;# 
   771  000A                     	;# 
   772  000B                     	;# 
   773  000C                     	;# 
   774  000D                     	;# 
   775  000E                     	;# 
   776  000E                     	;# 
   777  000F                     	;# 
   778  0010                     	;# 
   779  0011                     	;# 
   780  0012                     	;# 
   781  0013                     	;# 
   782  0014                     	;# 
   783  0015                     	;# 
   784  0015                     	;# 
   785  0016                     	;# 
   786  0017                     	;# 
   787  0018                     	;# 
   788  0019                     	;# 
   789  001A                     	;# 
   790  001B                     	;# 
   791  001B                     	;# 
   792  001C                     	;# 
   793  001D                     	;# 
   794  001E                     	;# 
   795  001F                     	;# 
   796  0081                     	;# 
   797  0085                     	;# 
   798  0086                     	;# 
   799  0087                     	;# 
   800  0088                     	;# 
   801  0089                     	;# 
   802  008C                     	;# 
   803  008D                     	;# 
   804  008E                     	;# 
   805  008F                     	;# 
   806  0090                     	;# 
   807  0091                     	;# 
   808  0092                     	;# 
   809  0093                     	;# 
   810  0093                     	;# 
   811  0093                     	;# 
   812  0094                     	;# 
   813  0095                     	;# 
   814  0096                     	;# 
   815  0097                     	;# 
   816  0098                     	;# 
   817  0099                     	;# 
   818  009A                     	;# 
   819  009B                     	;# 
   820  009C                     	;# 
   821  009D                     	;# 
   822  009E                     	;# 
   823  009F                     	;# 
   824  0105                     	;# 
   825  0107                     	;# 
   826  0108                     	;# 
   827  0109                     	;# 
   828  010C                     	;# 
   829  010C                     	;# 
   830  010D                     	;# 
   831  010E                     	;# 
   832  010F                     	;# 
   833  0185                     	;# 
   834  0187                     	;# 
   835  0188                     	;# 
   836  0189                     	;# 
   837  018C                     	;# 
   838  018D                     	;# 
   839  0000                     	;# 
   840  0001                     	;# 
   841  0002                     	;# 
   842  0003                     	;# 
   843  0004                     	;# 
   844  0005                     	;# 
   845  0006                     	;# 
   846  0007                     	;# 
   847  0009                     	;# 
   848  000A                     	;# 
   849  000B                     	;# 
   850  000C                     	;# 
   851  000D                     	;# 
   852  000E                     	;# 
   853  000E                     	;# 
   854  000F                     	;# 
   855  0010                     	;# 
   856  0011                     	;# 
   857  0012                     	;# 
   858  0013                     	;# 
   859  0014                     	;# 
   860  0015                     	;# 
   861  0015                     	;# 
   862  0016                     	;# 
   863  0017                     	;# 
   864  0018                     	;# 
   865  0019                     	;# 
   866  001A                     	;# 
   867  001B                     	;# 
   868  001B                     	;# 
   869  001C                     	;# 
   870  001D                     	;# 
   871  001E                     	;# 
   872  001F                     	;# 
   873  0081                     	;# 
   874  0085                     	;# 
   875  0086                     	;# 
   876  0087                     	;# 
   877  0089                     	;# 
   878  008C                     	;# 
   879  008D                     	;# 
   880  008E                     	;# 
   881  008F                     	;# 
   882  0090                     	;# 
   883  0091                     	;# 
   884  0092                     	;# 
   885  0093                     	;# 
   886  0093                     	;# 
   887  0093                     	;# 
   888  0094                     	;# 
   889  0095                     	;# 
   890  0096                     	;# 
   891  0097                     	;# 
   892  0098                     	;# 
   893  0099                     	;# 
   894  009A                     	;# 
   895  009B                     	;# 
   896  009C                     	;# 
   897  009D                     	;# 
   898  009E                     	;# 
   899  009F                     	;# 
   900  0105                     	;# 
   901  0107                     	;# 
   902  0108                     	;# 
   903  0109                     	;# 
   904  010C                     	;# 
   905  010C                     	;# 
   906  010D                     	;# 
   907  010E                     	;# 
   908  010F                     	;# 
   909  0185                     	;# 
   910  0187                     	;# 
   911  0188                     	;# 
   912  0189                     	;# 
   913  018C                     	;# 
   914  018D                     	;# 
   915                           
   916                           	psect	idataBANK0
   917  035F                     __pidataBANK0:	
   918                           
   919                           ;initializer for _FMRX_Nref
   920  035F  3400               	retlw	0
   921  0360  340A               	retlw	10
   922                           
   923                           ;initializer for _CWTX_Nref
   924  0361  34A0               	retlw	160
   925  0362  3400               	retlw	0
   926                           
   927                           ;initializer for _FMTX_Nref
   928  0363  3400               	retlw	0
   929  0364  340A               	retlw	10
   930                           
   931                           	psect	idataBANK1
   932  0403                     __pidataBANK1:	
   933                           
   934                           ;initializer for _FMRX_Nprg
   935  0403  3402               	retlw	2
   936  0404  3400               	retlw	0
   937  0405  3404               	retlw	4
   938  0406  3400               	retlw	0
   939  0407  3408               	retlw	8
   940  0408  3400               	retlw	0
   941  0409  3408               	retlw	8
   942  040A  3400               	retlw	0
   943  040B  3407               	retlw	7
   944  040C  3400               	retlw	0
   945                           
   946                           ;initializer for _CWTX_Nprg
   947  040D  3400               	retlw	0
   948  040E  3400               	retlw	0
   949  040F  3401               	retlw	1
   950  0410  3400               	retlw	0
   951  0411  3407               	retlw	7
   952  0412  3400               	retlw	0
   953  0413  3404               	retlw	4
   954  0414  3400               	retlw	0
   955  0415  3407               	retlw	7
   956  0416  3400               	retlw	0
   957                           
   958                           ;initializer for _FMTX_Nprg
   959  0417  3408               	retlw	8
   960  0418  3400               	retlw	0
   961  0419  3407               	retlw	7
   962  041A  3400               	retlw	0
   963  041B  3403               	retlw	3
   964  041C  3400               	retlw	0
   965  041D  3400               	retlw	0
   966  041E  3400               	retlw	0
   967  041F  3400               	retlw	0
   968  0420  3400               	retlw	0
   969  0013                     _SSPBUF	set	19
   970  0014                     _SSPCON	set	20
   971  0003                     _STATUS	set	3
   972  0009                     _PORTE	set	9
   973  0007                     _PORTC	set	7
   974  0006                     _PORTB	set	6
   975  0005                     _PORTA	set	5
   976  0019                     _TXREG	set	25
   977  001A                     _RCREG	set	26
   978  003A                     _RC2	set	58
   979  003D                     _RC5	set	61
   980  0030                     _RB0	set	48
   981  0031                     _RB1	set	49
   982  0064                     _TXIF	set	100
   983  00C6                     _RX9	set	198
   984  0065                     _RCIF	set	101
   985  00C5                     _SREN	set	197
   986  00C4                     _CREN	set	196
   987  00C7                     _SPEN	set	199
   988  0094                     _SSPSTAT	set	148
   989  0093                     _SSPADD	set	147
   990  0091                     _SSPCON2	set	145
   991  0089                     _TRISE	set	137
   992  0087                     _TRISC	set	135
   993  0086                     _TRISB	set	134
   994  0085                     _TRISA	set	133
   995  0099                     _SPBRG	set	153
   996  048C                     _ACKEN	set	1164
   997  048D                     _ACKDT	set	1165
   998  048B                     _RCEN	set	1163
   999  048A                     _PEN	set	1162
  1000  0489                     _RSEN	set	1161
  1001  0488                     _SEN	set	1160
  1002  04C5                     _TXEN	set	1221
  1003  04C6                     _TX9	set	1222
  1004  0465                     _RCIE	set	1125
  1005  0464                     _TXIE	set	1124
  1006  04C4                     _SYNC	set	1220
  1007  04C2                     _BRGH	set	1218
  1008  0189                     _ANSELH	set	393
  1009  0188                     _ANSEL	set	392
  1010                           
  1011                           	psect	strings
  1012  0003                     __pstrings:	
  1013  0003                     stringtab:	
  1014  0003                     __stringtab:	
  1015  0003                     stringcode:	
  1016                           ;	String table - string pointers are 1 byte each
  1017                           
  1018  0003                     stringdir:	
  1019  0003  3000               	movlw	high stringdir
  1020  0004  008A               	movwf	10
  1021  0005  0804               	movf	4,w
  1022  0006  0A84               	incf	4,f
  1023  0007  0782               	addwf	2,f
  1024  0008                     __stringbase:	
  1025  0008  3400               	retlw	0
  1026  0009                     __end_of__stringtab:	
  1027  0009                     STR_7:	
  1028  0009  344A               	retlw	74	;'J'
  1029  000A  3451               	retlw	81	;'Q'
  1030  000B  3431               	retlw	49	;'1'
  1031  000C  345A               	retlw	90	;'Z'
  1032  000D  3448               	retlw	72	;'H'
  1033  000E  3458               	retlw	88	;'X'
  1034  000F  3400               	retlw	0
  1035  0010                     STR_1:	
  1036  0010  344A               	retlw	74	;'J'
  1037  0011  3451               	retlw	81	;'Q'
  1038  0012  3431               	retlw	49	;'1'
  1039  0013  3459               	retlw	89	;'Y'
  1040  0014  3443               	retlw	67	;'C'
  1041  0015  345A               	retlw	90	;'Z'
  1042  0016  3400               	retlw	0
  1043  0009                     
  1044                           ; #config settings
  1045  0000                     
  1046                           	psect	cinit
  1047  07C1                     start_initialization:	
  1048  07C1                     __initialization:	
  1049                           
  1050                           ; Initialize objects allocated to BANK1
  1051  07C1  1383               	bcf	3,7	;select IRP bank0
  1052  07C2  30F0               	movlw	low (__pdataBANK1+30)
  1053  07C3  00FD               	movwf	btemp+-1
  1054  07C4  3004               	movlw	high __pidataBANK1
  1055  07C5  00FE               	movwf	btemp
  1056  07C6  3003               	movlw	low __pidataBANK1
  1057  07C7  00FF               	movwf	btemp+1
  1058  07C8  30D2               	movlw	low __pdataBANK1
  1059  07C9  0084               	movwf	4
  1060  07CA  120A  118A  2397  120A  118A  	fcall	init_ram0
  1061                           
  1062                           ; Initialize objects allocated to BANK0
  1063  07CF  3069               	movlw	low (__pdataBANK0+6)
  1064  07D0  00FD               	movwf	btemp+-1
  1065  07D1  3003               	movlw	high __pidataBANK0
  1066  07D2  00FE               	movwf	btemp
  1067  07D3  305F               	movlw	low __pidataBANK0
  1068  07D4  00FF               	movwf	btemp+1
  1069  07D5  3063               	movlw	low __pdataBANK0
  1070  07D6  0084               	movwf	4
  1071  07D7  120A  118A  2397  120A  118A  	fcall	init_ram0
  1072                           
  1073                           ; Clear objects allocated to BANK3
  1074  07DC  1783               	bsf	3,7	;select IRP bank2
  1075  07DD  3090               	movlw	low __pbssBANK3
  1076  07DE  0084               	movwf	4
  1077  07DF  30D2               	movlw	low (__pbssBANK3+66)
  1078  07E0  120A  118A  2382  120A  118A  	fcall	clear_ram0
  1079                           
  1080                           ; Clear objects allocated to BANK2
  1081  07E5  3010               	movlw	low __pbssBANK2
  1082  07E6  0084               	movwf	4
  1083  07E7  3030               	movlw	low (__pbssBANK2+32)
  1084  07E8  120A  118A  2382  120A  118A  	fcall	clear_ram0
  1085                           
  1086                           ; Clear objects allocated to BANK1
  1087  07ED  1383               	bcf	3,7	;select IRP bank0
  1088  07EE  30A0               	movlw	low __pbssBANK1
  1089  07EF  0084               	movwf	4
  1090  07F0  30D2               	movlw	low (__pbssBANK1+50)
  1091  07F1  120A  118A  2382  120A  118A  	fcall	clear_ram0
  1092                           
  1093                           ; Clear objects allocated to BANK0
  1094  07F6  3051               	movlw	low __pbssBANK0
  1095  07F7  0084               	movwf	4
  1096  07F8  3063               	movlw	low (__pbssBANK0+18)
  1097  07F9  120A  118A  2382   	fcall	clear_ram0
  1098  07FC                     end_of_initialization:	
  1099                           ;End of C runtime variable initialization code
  1100                           
  1101  07FC                     __end_of__initialization:	
  1102  07FC  0183               	clrf	3
  1103  07FD  120A  118A  2E65   	ljmp	_main	;jump to C main() function
  1104                           
  1105                           	psect	bssBANK0
  1106  0051                     __pbssBANK0:	
  1107  0051                     _ebitstatus:	
  1108  0051                     	ds	2
  1109  0053                     _estuff:	
  1110  0053                     	ds	2
  1111  0055                     _efcsflag:	
  1112  0055                     	ds	2
  1113  0057                     _eflag:	
  1114  0057                     	ds	2
  1115  0059                     getbit@oldbit:	
  1116  0059                     	ds	2
  1117  005B                     _dPacketnum:	
  1118  005B                     	ds	2
  1119  005D                     _rcv_state:	
  1120  005D                     	ds	2
  1121  005F                     _efcshi:	
  1122  005F                     	ds	1
  1123  0060                     _efcslo:	
  1124  0060                     	ds	1
  1125  0061                     _dfcslo:	
  1126  0061                     	ds	1
  1127  0062                     _dfcshi:	
  1128  0062                     	ds	1
  1129                           
  1130                           	psect	dataBANK0
  1131  0063                     __pdataBANK0:	
  1132  0063                     _FMRX_Nref:	
  1133  0063                     	ds	2
  1134  0065                     _CWTX_Nref:	
  1135  0065                     	ds	2
  1136  0067                     _FMTX_Nref:	
  1137  0067                     	ds	2
  1138                           
  1139                           	psect	bssBANK1
  1140  00A0                     __pbssBANK1:	
  1141  00A0                     _dPacket:	
  1142  00A0                     	ds	50
  1143                           
  1144                           	psect	dataBANK1
  1145  00D2                     __pdataBANK1:	
  1146  00D2                     _FMRX_Nprg:	
  1147  00D2                     	ds	10
  1148  00DC                     _CWTX_Nprg:	
  1149  00DC                     	ds	10
  1150  00E6                     _FMTX_Nprg:	
  1151  00E6                     	ds	10
  1152                           
  1153                           	psect	bssBANK3
  1154  0190                     __pbssBANK3:	
  1155  0190                     _ePacket:	
  1156  0190                     	ds	50
  1157  01C2                     _EEPROMData:	
  1158  01C2                     	ds	16
  1159                           
  1160                           	psect	bssBANK2
  1161  0110                     __pbssBANK2:	
  1162  0110                     _dData:	
  1163  0110                     	ds	32
  1164                           
  1165                           	psect	inittext
  1166  0393                     init_fetch0:	
  1167                           ;	Called with low address in FSR and high address in W
  1168                           
  1169  0393  087E               	movf	126,w
  1170  0394  008A               	movwf	10
  1171  0395  087F               	movf	127,w
  1172  0396  0082               	movwf	2
  1173  0397                     init_ram0:	
  1174                           ;Called with:
  1175                           ;	high address of idata address in btemp 
  1176                           ;	low address of idata address in btemp+1 
  1177                           ;	low address of data in FSR
  1178                           ;	high address + 1 of data in btemp-1
  1179                           
  1180  0397  2393  120A  118A   	fcall	init_fetch0
  1181  039A  0080               	movwf	0
  1182  039B  0A84               	incf	4,f
  1183  039C  0804               	movf	4,w
  1184  039D  067D               	xorwf	125,w
  1185  039E  1903               	btfsc	3,2
  1186  039F  3400               	retlw	0
  1187  03A0  0AFF               	incf	127,f
  1188  03A1  1903               	btfsc	3,2
  1189  03A2  0AFE               	incf	126,f
  1190  03A3  2B97               	goto	init_ram0
  1191                           
  1192                           	psect	clrtext
  1193  0382                     clear_ram0:	
  1194                           ;	Called with FSR containing the base address, and
  1195                           ;	W with the last address+1
  1196                           
  1197  0382  0064               	clrwdt	;clear the watchdog before getting into this loop
  1198  0383                     clrloop0:	
  1199  0383  0180               	clrf	0	;clear RAM location pointed to by FSR
  1200  0384  0A84               	incf	4,f	;increment pointer
  1201  0385  0604               	xorwf	4,w	;XOR with final address
  1202  0386  1903               	btfsc	3,2	;have we reached the end yet?
  1203  0387  3400               	retlw	0	;all done for this memory range, return
  1204  0388  0604               	xorwf	4,w	;XOR again to restore value
  1205  0389  2B83               	goto	clrloop0	;do the next byte
  1206                           
  1207                           	psect	cstackCOMMON
  1208  0070                     __pcstackCOMMON:	
  1209  0070                     ?_SendByte:	
  1210  0070                     ?_fcsbit:	
  1211                           ; 1 bytes @ 0x0
  1212                           
  1213  0070                     ??_fcsbit:	
  1214                           ; 1 bytes @ 0x0
  1215                           
  1216  0070                     ?_flipout:	
  1217                           ; 1 bytes @ 0x0
  1218                           
  1219  0070                     ??_flipout:	
  1220                           ; 1 bytes @ 0x0
  1221                           
  1222  0070                     ?_Init_SERIAL:	
  1223                           ; 1 bytes @ 0x0
  1224                           
  1225  0070                     ??_Init_SERIAL:	
  1226                           ; 1 bytes @ 0x0
  1227                           
  1228  0070                     ?_Init_MPU:	
  1229                           ; 1 bytes @ 0x0
  1230                           
  1231  0070                     ??_Init_MPU:	
  1232                           ; 1 bytes @ 0x0
  1233                           
  1234  0070                     ?_SendPacket:	
  1235                           ; 1 bytes @ 0x0
  1236                           
  1237  0070                     ?_main:	
  1238                           ; 1 bytes @ 0x0
  1239                           
  1240  0070                     ?_I2C_Master_Wait:	
  1241                           ; 1 bytes @ 0x0
  1242                           
  1243  0070                     ??_I2C_Master_Wait:	
  1244                           ; 1 bytes @ 0x0
  1245                           
  1246  0070                     ?_I2C_Master_Start:	
  1247                           ; 1 bytes @ 0x0
  1248                           
  1249  0070                     ??_I2C_Master_Start:	
  1250                           ; 1 bytes @ 0x0
  1251                           
  1252  0070                     ?_I2C_Master_RepeatedStart:	
  1253                           ; 1 bytes @ 0x0
  1254                           
  1255  0070                     ??_I2C_Master_RepeatedStart:	
  1256                           ; 1 bytes @ 0x0
  1257                           
  1258  0070                     ?_I2C_Master_Stop:	
  1259                           ; 1 bytes @ 0x0
  1260                           
  1261  0070                     ??_I2C_Master_Stop:	
  1262                           ; 1 bytes @ 0x0
  1263                           
  1264  0070                     ?_I2C_Master_Write:	
  1265                           ; 1 bytes @ 0x0
  1266                           
  1267  0070                     ?_I2C_Master_Read:	
  1268                           ; 1 bytes @ 0x0
  1269                           
  1270  0070                     ??_I2C_Master_Read:	
  1271                           ; 1 bytes @ 0x0
  1272                           
  1273  0070                     ?_Packetmaker:	
  1274                           ; 1 bytes @ 0x0
  1275                           
  1276  0070                     ?___lldiv:	
  1277                           ; 2 bytes @ 0x0
  1278                           
  1279  0070                     I2C_Master_Write@d:	
  1280                           ; 4 bytes @ 0x0
  1281                           
  1282  0070                     ___lldiv@divisor:	
  1283                           ; 2 bytes @ 0x0
  1284                           
  1285                           
  1286                           ; 4 bytes @ 0x0
  1287  0070                     	ds	1
  1288  0071                     I2C_Master_Read@a:	
  1289                           
  1290                           ; 1 bytes @ 0x1
  1291  0071                     	ds	1
  1292  0072                     ??_Packetmaker:	
  1293  0072                     ??_I2C_Master_Write:	
  1294                           ; 1 bytes @ 0x2
  1295                           
  1296  0072                     fcsbit@tbyte:	
  1297                           ; 1 bytes @ 0x2
  1298                           
  1299  0072                     I2C_Master_Read@temp:	
  1300                           ; 1 bytes @ 0x2
  1301                           
  1302                           
  1303                           ; 1 bytes @ 0x2
  1304  0072                     	ds	1
  1305  0073                     ??_SendByte:	
  1306  0073                     ?_EEPROM_Read:	
  1307                           ; 1 bytes @ 0x3
  1308                           
  1309  0073                     EEPROM_Read@high_address:	
  1310                           ; 1 bytes @ 0x3
  1311                           
  1312                           
  1313                           ; 1 bytes @ 0x3
  1314  0073                     	ds	1
  1315  0074                     Packetmaker@eDataField:	
  1316  0074                     EEPROM_Read@low_address:	
  1317                           ; 1 bytes @ 0x4
  1318                           
  1319  0074                     ___lldiv@dividend:	
  1320                           ; 1 bytes @ 0x4
  1321                           
  1322                           
  1323                           ; 4 bytes @ 0x4
  1324  0074                     	ds	1
  1325  0075                     EEPROM_Read@ReadData:	
  1326  0075                     Packetmaker@i_196:	
  1327                           ; 1 bytes @ 0x5
  1328                           
  1329  0075                     SendByte@i:	
  1330                           ; 2 bytes @ 0x5
  1331                           
  1332                           
  1333                           ; 2 bytes @ 0x5
  1334  0075                     	ds	1
  1335  0076                     EEPROM_Read@EEPROMDataLength:	
  1336                           
  1337                           ; 1 bytes @ 0x6
  1338  0076                     	ds	1
  1339  0077                     ??_EEPROM_Read:	
  1340  0077                     SendByte@byte:	
  1341                           ; 1 bytes @ 0x7
  1342                           
  1343  0077                     Packetmaker@Datanum:	
  1344                           ; 1 bytes @ 0x7
  1345                           
  1346                           
  1347                           ; 2 bytes @ 0x7
  1348  0077                     	ds	1
  1349  0078                     ??___lldiv:	
  1350  0078                     SendByte@bt:	
  1351                           ; 1 bytes @ 0x8
  1352                           
  1353                           
  1354                           ; 1 bytes @ 0x8
  1355  0078                     	ds	1
  1356  0079                     Packetmaker@i:	
  1357  0079                     ___lldiv@quotient:	
  1358                           ; 2 bytes @ 0x9
  1359                           
  1360                           
  1361                           ; 4 bytes @ 0x9
  1362  0079                     	ds	2
  1363  007B                     Packetmaker@i_193:	
  1364                           
  1365                           ; 2 bytes @ 0xB
  1366  007B                     	ds	2
  1367  007D                     ??_SendPacket:	
  1368  007D                     ___lldiv@counter:	
  1369                           ; 1 bytes @ 0xD
  1370                           
  1371                           
  1372                           ; 1 bytes @ 0xD
  1373  007D                     	ds	1
  1374                           
  1375                           	psect	cstackBANK0
  1376  0020                     __pcstackBANK0:	
  1377  0020                     ?_Init_I2C_M:	
  1378  0020                     EEPROM_Read@EEPROM_address:	
  1379                           ; 1 bytes @ 0x0
  1380                           
  1381  0020                     SendPacket@Packetnum:	
  1382                           ; 1 bytes @ 0x0
  1383                           
  1384  0020                     Init_I2C_M@c:	
  1385                           ; 2 bytes @ 0x0
  1386                           
  1387                           
  1388                           ; 4 bytes @ 0x0
  1389  0020                     	ds	1
  1390  0021                     EEPROM_Read@ReadAddress:	
  1391                           
  1392                           ; 1 bytes @ 0x1
  1393  0021                     	ds	1
  1394  0022                     SendPacket@eDataField:	
  1395  0022                     EEPROM_Read@i:	
  1396                           ; 1 bytes @ 0x2
  1397                           
  1398                           
  1399                           ; 2 bytes @ 0x2
  1400  0022                     	ds	1
  1401  0023                     SendPacket@i:	
  1402                           
  1403                           ; 2 bytes @ 0x3
  1404  0023                     	ds	1
  1405  0024                     ??_Init_I2C_M:	
  1406  0024                     EEPROM_Read@Address:	
  1407                           ; 1 bytes @ 0x4
  1408                           
  1409                           
  1410                           ; 1 bytes @ 0x4
  1411  0024                     	ds	1
  1412  0025                     SendPacket@i_201:	
  1413                           
  1414                           ; 2 bytes @ 0x5
  1415  0025                     	ds	2
  1416  0027                     SendPacket@i_202:	
  1417                           
  1418                           ; 2 bytes @ 0x7
  1419  0027                     	ds	2
  1420  0029                     ??_main:	
  1421                           
  1422                           ; 1 bytes @ 0x9
  1423  0029                     	ds	4
  1424  002D                     main@dData:	
  1425  002D                     main@EEPROMData_247:	
  1426                           ; 0 bytes @ 0xD
  1427                           
  1428                           
  1429                           ; 32 bytes @ 0xD
  1430  002D                     	ds	32
  1431  004D                     main@write_data_length:	
  1432                           
  1433                           ; 2 bytes @ 0x2D
  1434  004D                     	ds	2
  1435  004F                     main@EEPROMDataLength:	
  1436                           
  1437                           ; 2 bytes @ 0x2F
  1438  004F                     	ds	2
  1439                           
  1440                           	psect	maintext
  1441  0665                     __pmaintext:	
  1442 ;;
  1443 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1444 ;;
  1445 ;; *************** function _main *****************
  1446 ;; Defined at:
  1447 ;;		line 36 in file "main.c"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;		None
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;  EEPROMData     32   13[BANK0 ] unsigned char [32]
  1452 ;;  EEPROMDataLe    2   47[BANK0 ] unsigned int 
  1453 ;;  write_data_l    2   45[BANK0 ] unsigned int 
  1454 ;;  EEPROMData      2    0        PTR unsigned char 
  1455 ;;  dData           0   13[BANK0 ] unsigned char [0]
  1456 ;; Return value:  Size  Location     Type
  1457 ;;                  1    wreg      void 
  1458 ;; Registers used:
  1459 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1460 ;; Tracked objects:
  1461 ;;		On entry : B00/0
  1462 ;;		On exit  : 0/0
  1463 ;;		Unchanged: 0/0
  1464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1465 ;;      Params:         0       0       0       0       0
  1466 ;;      Locals:         0      36       0       0       0
  1467 ;;      Temps:          0       4       0       0       0
  1468 ;;      Totals:         0      40       0       0       0
  1469 ;;Total ram usage:       40 bytes
  1470 ;; Hardware stack levels required when called:    3
  1471 ;; This function calls:
  1472 ;;		_EEPROM_Read
  1473 ;;		_Init_I2C_M
  1474 ;;		_Init_MPU
  1475 ;;		_Init_SERIAL
  1476 ;;		_SendPacket
  1477 ;; This function is called by:
  1478 ;;		Startup code after reset
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482                           
  1483                           ;psect for function _main
  1484  0665                     _main:	
  1485                           
  1486                           ;main.c: 40: Init_SERIAL();
  1487                           
  1488                           ;incstack = 0
  1489                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1490  0665  120A  118A  23B6  120A  118A  	fcall	_Init_SERIAL
  1491                           
  1492                           ;main.c: 41: Init_MPU();
  1493  066A  120A  118A  23CF  120A  118A  	fcall	_Init_MPU
  1494                           
  1495                           ;main.c: 42: Init_I2C_M(400000);
  1496  066F  3000               	movlw	0
  1497  0670  1283               	bcf	3,5	;RP0=0, select bank0
  1498  0671  1303               	bcf	3,6	;RP1=0, select bank0
  1499  0672  00A3               	movwf	Init_I2C_M@c+3
  1500  0673  3006               	movlw	6
  1501  0674  00A2               	movwf	Init_I2C_M@c+2
  1502  0675  301A               	movlw	26
  1503  0676  00A1               	movwf	Init_I2C_M@c+1
  1504  0677  3080               	movlw	128
  1505  0678  00A0               	movwf	Init_I2C_M@c
  1506  0679  120A  118A  2447  120A  118A  	fcall	_Init_I2C_M
  1507  067E                     l2860:	
  1508                           ;main.c: 51: while(1){
  1509                           
  1510                           
  1511                           ;main.c: 67: UBYTE dData[];
  1512                           ;main.c: 72: UINT write_data_length;
  1513                           ;main.c: 73: for (write_data_length = 0; dData[write_data_length]!= '\0'; ++write_data_l
      +                          ength);
  1514  067E  1283               	bcf	3,5	;RP0=0, select bank0
  1515  067F  1303               	bcf	3,6	;RP1=0, select bank0
  1516  0680  01CD               	clrf	main@write_data_length
  1517  0681  01CE               	clrf	main@write_data_length+1
  1518  0682                     l2864:	
  1519  0682  302D               	movlw	low main@dData
  1520  0683  00A9               	movwf	??_main
  1521  0684  3000               	movlw	high main@dData
  1522  0685  00AA               	movwf	??_main+1
  1523  0686  084D               	movf	main@write_data_length,w
  1524  0687  0729               	addwf	??_main,w
  1525  0688  00AB               	movwf	??_main+2
  1526  0689  084E               	movf	main@write_data_length+1,w
  1527  068A  1803               	skipnc
  1528  068B  0A4E               	incf	main@write_data_length+1,w
  1529  068C  072A               	addwf	??_main+1,w
  1530  068D  00AC               	movwf	??_main+3
  1531  068E  082B               	movf	??_main+2,w
  1532  068F  0084               	movwf	4
  1533  0690  1783               	bsf	3,7
  1534  0691  1C2C               	btfss	??_main+3,0
  1535  0692  1383               	bcf	3,7
  1536  0693  0800               	movf	0,w
  1537  0694  1903               	btfsc	3,2
  1538  0695  2E9D               	goto	l2866
  1539  0696  3001               	movlw	1
  1540  0697  07CD               	addwf	main@write_data_length,f
  1541  0698  1803               	skipnc
  1542  0699  0ACE               	incf	main@write_data_length+1,f
  1543  069A  3000               	movlw	0
  1544  069B  07CE               	addwf	main@write_data_length+1,f
  1545  069C  2E82               	goto	l2864
  1546  069D                     l2866:	
  1547                           
  1548                           ;main.c: 76: _delay((unsigned long)((200)*(10000000/4000.0)));
  1549  069D  3003               	movlw	3
  1550  069E  1283               	bcf	3,5	;RP0=0, select bank0
  1551  069F  1303               	bcf	3,6	;RP1=0, select bank0
  1552  06A0  00AB               	movwf	??_main+2
  1553  06A1  308A               	movlw	138
  1554  06A2  00AA               	movwf	??_main+1
  1555  06A3  3055               	movlw	85
  1556  06A4  00A9               	movwf	??_main
  1557  06A5                     u2607:	
  1558  06A5  0BA9               	decfsz	??_main,f
  1559  06A6  2EA5               	goto	u2607
  1560  06A7  0BAA               	decfsz	??_main+1,f
  1561  06A8  2EA5               	goto	u2607
  1562  06A9  0BAB               	decfsz	??_main+2,f
  1563  06AA  2EA5               	goto	u2607
  1564                           
  1565                           ;main.c: 79: _delay((unsigned long)((200)*(10000000/4000.0)));
  1566  06AB  3003               	movlw	3
  1567  06AC  1283               	bcf	3,5	;RP0=0, select bank0
  1568  06AD  1303               	bcf	3,6	;RP1=0, select bank0
  1569  06AE  00AB               	movwf	??_main+2
  1570  06AF  308A               	movlw	138
  1571  06B0  00AA               	movwf	??_main+1
  1572  06B1  3055               	movlw	85
  1573  06B2  00A9               	movwf	??_main
  1574  06B3                     u2617:	
  1575  06B3  0BA9               	decfsz	??_main,f
  1576  06B4  2EB3               	goto	u2617
  1577  06B5  0BAA               	decfsz	??_main+1,f
  1578  06B6  2EB3               	goto	u2617
  1579  06B7  0BAB               	decfsz	??_main+2,f
  1580  06B8  2EB3               	goto	u2617
  1581                           
  1582                           ;main.c: 97: UBYTE *EEPROMData;
  1583                           ;main.c: 98: if (RC2==1){
  1584  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  1585  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  1586  06BB  1D07               	btfss	7,2	;volatile
  1587  06BC  2F02               	goto	l2878
  1588                           
  1589                           ;main.c: 99: UBYTE EEPROMData[32];
  1590                           ;main.c: 100: UINT EEPROMDataLength;
  1591                           ;main.c: 102: _delay((unsigned long)((200)*(10000000/4000.0)));
  1592  06BD  3003               	movlw	3
  1593  06BE  1283               	bcf	3,5	;RP0=0, select bank0
  1594  06BF  1303               	bcf	3,6	;RP1=0, select bank0
  1595  06C0  00AB               	movwf	??_main+2
  1596  06C1  308A               	movlw	138
  1597  06C2  00AA               	movwf	??_main+1
  1598  06C3  3055               	movlw	85
  1599  06C4  00A9               	movwf	??_main
  1600  06C5                     u2627:	
  1601  06C5  0BA9               	decfsz	??_main,f
  1602  06C6  2EC5               	goto	u2627
  1603  06C7  0BAA               	decfsz	??_main+1,f
  1604  06C8  2EC5               	goto	u2627
  1605  06C9  0BAB               	decfsz	??_main+2,f
  1606  06CA  2EC5               	goto	u2627
  1607                           
  1608                           ;main.c: 103: EEPROM_Read(0x50,0x00,0xE0, EEPROMData,&EEPROMDataLength);
  1609  06CB  01F3               	clrf	EEPROM_Read@high_address
  1610  06CC  30E0               	movlw	224
  1611  06CD  1283               	bcf	3,5	;RP0=0, select bank0
  1612  06CE  1303               	bcf	3,6	;RP1=0, select bank0
  1613  06CF  00A9               	movwf	??_main
  1614  06D0  0829               	movf	??_main,w
  1615  06D1  00F4               	movwf	EEPROM_Read@low_address
  1616  06D2  302D               	movlw	(low (main@EEPROMData_247| 0))& (0+255)
  1617  06D3  00AA               	movwf	??_main+1
  1618  06D4  082A               	movf	??_main+1,w
  1619  06D5  00F5               	movwf	EEPROM_Read@ReadData
  1620  06D6  304F               	movlw	(low (main@EEPROMDataLength| 0))& (0+255)
  1621  06D7  00AB               	movwf	??_main+2
  1622  06D8  082B               	movf	??_main+2,w
  1623  06D9  00F6               	movwf	EEPROM_Read@EEPROMDataLength
  1624  06DA  3050               	movlw	80
  1625  06DB  120A  118A  2711  120A  118A  	fcall	_EEPROM_Read
  1626                           
  1627                           ;main.c: 104: _delay((unsigned long)((200)*(10000000/4000.0)));
  1628  06E0  3003               	movlw	3
  1629  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  1630  06E2  1303               	bcf	3,6	;RP1=0, select bank0
  1631  06E3  00AB               	movwf	??_main+2
  1632  06E4  308A               	movlw	138
  1633  06E5  00AA               	movwf	??_main+1
  1634  06E6  3055               	movlw	85
  1635  06E7  00A9               	movwf	??_main
  1636  06E8                     u2637:	
  1637  06E8  0BA9               	decfsz	??_main,f
  1638  06E9  2EE8               	goto	u2637
  1639  06EA  0BAA               	decfsz	??_main+1,f
  1640  06EB  2EE8               	goto	u2637
  1641  06EC  0BAB               	decfsz	??_main+2,f
  1642  06ED  2EE8               	goto	u2637
  1643                           
  1644                           ;main.c: 109: SendPacket(EEPROMData);
  1645  06EE  302D               	movlw	(low (main@EEPROMData_247| 0))& (0+255)
  1646  06EF  120A  118A  2531  120A  118A  	fcall	_SendPacket
  1647                           
  1648                           ;main.c: 112: _delay((unsigned long)((200)*(10000000/4000.0)));
  1649  06F4  3003               	movlw	3
  1650  06F5  1283               	bcf	3,5	;RP0=0, select bank0
  1651  06F6  1303               	bcf	3,6	;RP1=0, select bank0
  1652  06F7  00AB               	movwf	??_main+2
  1653  06F8  308A               	movlw	138
  1654  06F9  00AA               	movwf	??_main+1
  1655  06FA  3055               	movlw	85
  1656  06FB  00A9               	movwf	??_main
  1657  06FC                     u2647:	
  1658  06FC  0BA9               	decfsz	??_main,f
  1659  06FD  2EFC               	goto	u2647
  1660  06FE  0BAA               	decfsz	??_main+1,f
  1661  06FF  2EFC               	goto	u2647
  1662  0700  0BAB               	decfsz	??_main+2,f
  1663  0701  2EFC               	goto	u2647
  1664  0702                     l2878:	
  1665                           ;main.c: 137: }else{
  1666                           
  1667                           
  1668                           ;main.c: 140: }
  1669                           ;main.c: 145: _delay((unsigned long)((200)*(10000000/4000.0)));
  1670  0702  3003               	movlw	3
  1671  0703  1283               	bcf	3,5	;RP0=0, select bank0
  1672  0704  1303               	bcf	3,6	;RP1=0, select bank0
  1673  0705  00AB               	movwf	??_main+2
  1674  0706  308A               	movlw	138
  1675  0707  00AA               	movwf	??_main+1
  1676  0708  3055               	movlw	85
  1677  0709  00A9               	movwf	??_main
  1678  070A                     u2657:	
  1679  070A  0BA9               	decfsz	??_main,f
  1680  070B  2F0A               	goto	u2657
  1681  070C  0BAA               	decfsz	??_main+1,f
  1682  070D  2F0A               	goto	u2657
  1683  070E  0BAB               	decfsz	??_main+2,f
  1684  070F  2F0A               	goto	u2657
  1685  0710  2E7E               	goto	l2860
  1686  0711                     __end_of_main:	
  1687                           
  1688                           	psect	text1
  1689  0531                     __ptext1:	
  1690 ;; *************** function _SendPacket *****************
  1691 ;; Defined at:
  1692 ;;		line 60 in file "encode_AX25.c"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;  eDataField      1    wreg     PTR unsigned char 
  1695 ;;		 -> main@EEPROMData_247(32), 
  1696 ;; Auto vars:     Size  Location     Type
  1697 ;;  eDataField      1    2[BANK0 ] PTR unsigned char 
  1698 ;;		 -> main@EEPROMData_247(32), 
  1699 ;;  i               2    7[BANK0 ] unsigned int 
  1700 ;;  i               2    5[BANK0 ] unsigned int 
  1701 ;;  i               2    3[BANK0 ] unsigned int 
  1702 ;;  Packetnum       2    0[BANK0 ] unsigned int 
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      void 
  1705 ;; Registers used:
  1706 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1712 ;;      Params:         0       0       0       0       0
  1713 ;;      Locals:         0       9       0       0       0
  1714 ;;      Temps:          1       0       0       0       0
  1715 ;;      Totals:         1       9       0       0       0
  1716 ;;Total ram usage:       10 bytes
  1717 ;; Hardware stack levels used:    1
  1718 ;; Hardware stack levels required when called:    2
  1719 ;; This function calls:
  1720 ;;		_Packetmaker
  1721 ;;		_SendByte
  1722 ;; This function is called by:
  1723 ;;		_main
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           
  1728                           ;psect for function _SendPacket
  1729  0531                     _SendPacket:	
  1730                           
  1731                           ;incstack = 0
  1732                           ; Regs used in _SendPacket: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1733                           ;SendPacket@eDataField stored from wreg
  1734  0531  1283               	bcf	3,5	;RP0=0, select bank0
  1735  0532  1303               	bcf	3,6	;RP1=0, select bank0
  1736  0533  00A2               	movwf	SendPacket@eDataField
  1737                           
  1738                           ;encode_AX25.c: 62: UINT Packetnum;
  1739                           ;encode_AX25.c: 63: Packetnum = 0;
  1740  0534  01A0               	clrf	SendPacket@Packetnum
  1741  0535  01A1               	clrf	SendPacket@Packetnum+1
  1742                           
  1743                           ;encode_AX25.c: 64: Packetnum = Packetmaker(eDataField);
  1744  0536  0822               	movf	SendPacket@eDataField,w
  1745  0537  120A  118A  25C4  120A  118A  	fcall	_Packetmaker
  1746  053C  0871               	movf	?_Packetmaker+1,w
  1747  053D  1283               	bcf	3,5	;RP0=0, select bank0
  1748  053E  1303               	bcf	3,6	;RP1=0, select bank0
  1749  053F  00A1               	movwf	SendPacket@Packetnum+1
  1750  0540  0870               	movf	?_Packetmaker,w
  1751  0541  00A0               	movwf	SendPacket@Packetnum
  1752                           
  1753                           ;encode_AX25.c: 65: ebitstatus = 1;
  1754  0542  3001               	movlw	1
  1755  0543  00D1               	movwf	_ebitstatus
  1756  0544  3000               	movlw	0
  1757  0545  00D2               	movwf	_ebitstatus+1
  1758                           
  1759                           ;encode_AX25.c: 66: efcslo = efcshi = 0xff;
  1760  0546  30FF               	movlw	255
  1761  0547  00DF               	movwf	_efcshi
  1762  0548  00FD               	movwf	??_SendPacket
  1763  0549  087D               	movf	??_SendPacket,w
  1764  054A  00E0               	movwf	_efcslo
  1765                           
  1766                           ;encode_AX25.c: 67: estuff = 0;
  1767  054B  01D3               	clrf	_estuff
  1768  054C  01D4               	clrf	_estuff+1
  1769                           
  1770                           ;encode_AX25.c: 69: eflag = 1;
  1771  054D  3001               	movlw	1
  1772  054E  00D7               	movwf	_eflag
  1773  054F  3000               	movlw	0
  1774  0550  00D8               	movwf	_eflag+1
  1775                           
  1776                           ;encode_AX25.c: 70: efcsflag = 0;
  1777  0551  01D5               	clrf	_efcsflag
  1778  0552  01D6               	clrf	_efcsflag+1
  1779                           
  1780                           ;encode_AX25.c: 71: for(UINT i=0;i<27;i++){
  1781  0553  01A3               	clrf	SendPacket@i
  1782  0554  01A4               	clrf	SendPacket@i+1
  1783  0555  3000               	movlw	0
  1784  0556  0224               	subwf	SendPacket@i+1,w
  1785  0557  301B               	movlw	27
  1786  0558  1903               	skipnz
  1787  0559  0223               	subwf	SendPacket@i,w
  1788  055A  1803               	btfsc	3,0
  1789  055B  2D71               	goto	l2664
  1790  055C                     l2658:	
  1791                           
  1792                           ;encode_AX25.c: 72: SendByte(0x7e);
  1793  055C  307E               	movlw	126
  1794  055D  120A  118A  247B  120A  118A  	fcall	_SendByte
  1795  0562  3001               	movlw	1
  1796  0563  1283               	bcf	3,5	;RP0=0, select bank0
  1797  0564  1303               	bcf	3,6	;RP1=0, select bank0
  1798  0565  07A3               	addwf	SendPacket@i,f
  1799  0566  1803               	skipnc
  1800  0567  0AA4               	incf	SendPacket@i+1,f
  1801  0568  3000               	movlw	0
  1802  0569  07A4               	addwf	SendPacket@i+1,f
  1803  056A  3000               	movlw	0
  1804  056B  0224               	subwf	SendPacket@i+1,w
  1805  056C  301B               	movlw	27
  1806  056D  1903               	skipnz
  1807  056E  0223               	subwf	SendPacket@i,w
  1808  056F  1C03               	skipc
  1809  0570  2D5C               	goto	l2658
  1810  0571                     l2664:	
  1811                           
  1812                           ;encode_AX25.c: 73: }
  1813                           ;encode_AX25.c: 74: eflag = 0;
  1814  0571  01D7               	clrf	_eflag
  1815  0572  01D8               	clrf	_eflag+1
  1816                           
  1817                           ;encode_AX25.c: 76: for(UINT i=0;i<Packetnum;i++){
  1818  0573  01A5               	clrf	SendPacket@i_201
  1819  0574  01A6               	clrf	SendPacket@i_201+1
  1820  0575                     l2670:	
  1821  0575  0821               	movf	SendPacket@Packetnum+1,w
  1822  0576  0226               	subwf	SendPacket@i_201+1,w
  1823  0577  1D03               	skipz
  1824  0578  2D7B               	goto	u2345
  1825  0579  0820               	movf	SendPacket@Packetnum,w
  1826  057A  0225               	subwf	SendPacket@i_201,w
  1827  057B                     u2345:	
  1828  057B  1803               	btfsc	3,0
  1829  057C  2D90               	goto	l2672
  1830                           
  1831                           ;encode_AX25.c: 77: SendByte(ePacket[i]);
  1832  057D  0825               	movf	SendPacket@i_201,w
  1833  057E  3E90               	addlw	(low (_ePacket| (0+256)))& (0+255)
  1834  057F  0084               	movwf	4
  1835  0580  1783               	bsf	3,7	;select IRP bank3
  1836  0581  0800               	movf	0,w
  1837  0582  120A  118A  247B  120A  118A  	fcall	_SendByte
  1838  0587  3001               	movlw	1
  1839  0588  1283               	bcf	3,5	;RP0=0, select bank0
  1840  0589  1303               	bcf	3,6	;RP1=0, select bank0
  1841  058A  07A5               	addwf	SendPacket@i_201,f
  1842  058B  1803               	skipnc
  1843  058C  0AA6               	incf	SendPacket@i_201+1,f
  1844  058D  3000               	movlw	0
  1845  058E  07A6               	addwf	SendPacket@i_201+1,f
  1846  058F  2D75               	goto	l2670
  1847  0590                     l2672:	
  1848                           
  1849                           ;encode_AX25.c: 78: }
  1850                           ;encode_AX25.c: 82: efcsflag = 1;
  1851  0590  3001               	movlw	1
  1852  0591  00D5               	movwf	_efcsflag
  1853  0592  3000               	movlw	0
  1854  0593  00D6               	movwf	_efcsflag+1
  1855                           
  1856                           ;encode_AX25.c: 83: efcslo = efcslo ^ 0xff;
  1857  0594  09E0               	comf	_efcslo,f
  1858                           
  1859                           ;encode_AX25.c: 84: efcshi = efcshi ^ 0xff;
  1860  0595  09DF               	comf	_efcshi,f
  1861                           
  1862                           ;encode_AX25.c: 85: SendByte(efcslo);
  1863  0596  0860               	movf	_efcslo,w
  1864  0597  120A  118A  247B  120A  118A  	fcall	_SendByte
  1865                           
  1866                           ;encode_AX25.c: 86: SendByte(efcshi);
  1867  059C  1283               	bcf	3,5	;RP0=0, select bank0
  1868  059D  1303               	bcf	3,6	;RP1=0, select bank0
  1869  059E  085F               	movf	_efcshi,w
  1870  059F  120A  118A  247B  120A  118A  	fcall	_SendByte
  1871                           
  1872                           ;encode_AX25.c: 87: efcsflag = 0;
  1873  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  1874  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  1875  05A6  01D5               	clrf	_efcsflag
  1876  05A7  01D6               	clrf	_efcsflag+1
  1877                           
  1878                           ;encode_AX25.c: 90: eflag = 1;
  1879  05A8  3001               	movlw	1
  1880  05A9  00D7               	movwf	_eflag
  1881  05AA  3000               	movlw	0
  1882  05AB  00D8               	movwf	_eflag+1
  1883                           
  1884                           ;encode_AX25.c: 91: for(UINT i=0;i<6;i++){
  1885  05AC  01A7               	clrf	SendPacket@i_202
  1886  05AD  01A8               	clrf	SendPacket@i_202+1
  1887  05AE                     L1:	
  1888  05AE  3000               	movlw	0
  1889  05AF  0228               	subwf	SendPacket@i_202+1,w
  1890  05B0  3006               	movlw	6
  1891  05B1  1903               	skipnz
  1892  05B2  0227               	subwf	SendPacket@i_202,w
  1893  05B3  1803               	btfsc	3,0
  1894  05B4  0008               	return
  1895                           
  1896                           ;encode_AX25.c: 92: SendByte(0x7e);
  1897  05B5  307E               	movlw	126
  1898  05B6  120A  118A  247B  120A  118A  	fcall	_SendByte
  1899  05BB  3001               	movlw	1
  1900  05BC  1283               	bcf	3,5	;RP0=0, select bank0
  1901  05BD  1303               	bcf	3,6	;RP1=0, select bank0
  1902  05BE  07A7               	addwf	SendPacket@i_202,f
  1903  05BF  1803               	skipnc
  1904  05C0  0AA8               	incf	SendPacket@i_202+1,f
  1905  05C1  3000               	movlw	0
  1906  05C2  07A8               	addwf	SendPacket@i_202+1,f
  1907  05C3  2DAE               	goto	L1
  1908  05C4                     __end_of_SendPacket:	
  1909                           
  1910                           	psect	text2
  1911  047B                     __ptext2:	
  1912 ;; *************** function _SendByte *****************
  1913 ;; Defined at:
  1914 ;;		line 97 in file "encode_AX25.c"
  1915 ;; Parameters:    Size  Location     Type
  1916 ;;  byte            1    wreg     unsigned char 
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;  byte            1    7[COMMON] unsigned char 
  1919 ;;  i               2    5[COMMON] unsigned int 
  1920 ;;  bt              1    8[COMMON] unsigned char 
  1921 ;; Return value:  Size  Location     Type
  1922 ;;                  1    wreg      void 
  1923 ;; Registers used:
  1924 ;;		wreg, status,2, status,0, pclath, cstack
  1925 ;; Tracked objects:
  1926 ;;		On entry : 0/0
  1927 ;;		On exit  : 0/0
  1928 ;;		Unchanged: 0/0
  1929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1930 ;;      Params:         0       0       0       0       0
  1931 ;;      Locals:         4       0       0       0       0
  1932 ;;      Temps:          2       0       0       0       0
  1933 ;;      Totals:         6       0       0       0       0
  1934 ;;Total ram usage:        6 bytes
  1935 ;; Hardware stack levels used:    1
  1936 ;; Hardware stack levels required when called:    1
  1937 ;; This function calls:
  1938 ;;		_fcsbit
  1939 ;;		_flipout
  1940 ;; This function is called by:
  1941 ;;		_SendPacket
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945                           
  1946                           ;psect for function _SendByte
  1947  047B                     _SendByte:	
  1948                           
  1949                           ;incstack = 0
  1950                           ; Regs used in _SendByte: [wreg+status,2+status,0+pclath+cstack]
  1951                           ;SendByte@byte stored from wreg
  1952  047B  00F7               	movwf	SendByte@byte
  1953                           
  1954                           ;encode_AX25.c: 98: UBYTE bt;
  1955                           ;encode_AX25.c: 99: for(UINT i=0;i<8;i++){
  1956  047C  01F5               	clrf	SendByte@i
  1957  047D  01F6               	clrf	SendByte@i+1
  1958  047E                     L3:	
  1959  047E  3000               	movlw	0
  1960  047F  0276               	subwf	SendByte@i+1,w
  1961  0480  3008               	movlw	8
  1962  0481  1903               	skipnz
  1963  0482  0275               	subwf	SendByte@i,w
  1964  0483  1803               	btfsc	3,0
  1965  0484  0008               	return
  1966                           
  1967                           ;encode_AX25.c: 100: bt = byte & 0x01;
  1968  0485  0877               	movf	SendByte@byte,w
  1969  0486  3901               	andlw	1
  1970  0487  00F3               	movwf	??_SendByte
  1971  0488  0873               	movf	??_SendByte,w
  1972  0489  00F8               	movwf	SendByte@bt
  1973                           
  1974                           ;encode_AX25.c: 102: if(efcsflag == 0 && eflag == 0){
  1975  048A  1283               	bcf	3,5	;RP0=0, select bank0
  1976  048B  1303               	bcf	3,6	;RP1=0, select bank0
  1977  048C  0855               	movf	_efcsflag,w
  1978  048D  0456               	iorwf	_efcsflag+1,w
  1979  048E  1D03               	btfss	3,2
  1980  048F  2C9A               	goto	l2032
  1981  0490  0857               	movf	_eflag,w
  1982  0491  0458               	iorwf	_eflag+1,w
  1983  0492  1D03               	btfss	3,2
  1984  0493  2C9A               	goto	l2032
  1985                           
  1986                           ;encode_AX25.c: 103: fcsbit(bt);
  1987  0494  0878               	movf	SendByte@bt,w
  1988  0495  120A  118A  23E9  120A  118A  	fcall	_fcsbit
  1989  049A                     l2032:	
  1990                           
  1991                           ;encode_AX25.c: 104: }
  1992                           ;encode_AX25.c: 106: if(bt == 0x00){
  1993  049A  0878               	movf	SendByte@bt,w
  1994  049B  1903               	btfsc	3,2
  1995  049C  2CB7               	goto	L2
  1996                           
  1997                           ;encode_AX25.c: 109: estuff ++;
  1998                           
  1999                           ;encode_AX25.c: 108: }else{
  2000                           
  2001                           ;encode_AX25.c: 107: flipout();
  2002  049D  3001               	movlw	1
  2003  049E  1283               	bcf	3,5	;RP0=0, select bank0
  2004  049F  1303               	bcf	3,6	;RP1=0, select bank0
  2005  04A0  07D3               	addwf	_estuff,f
  2006  04A1  1803               	skipnc
  2007  04A2  0AD4               	incf	_estuff+1,f
  2008  04A3  3000               	movlw	0
  2009  04A4  07D4               	addwf	_estuff+1,f
  2010                           
  2011                           ;encode_AX25.c: 111: if(eflag == 0 && estuff == 5){
  2012  04A5  0857               	movf	_eflag,w
  2013  04A6  0458               	iorwf	_eflag+1,w
  2014  04A7  1D03               	btfss	3,2
  2015  04A8  2CBC               	goto	l2046
  2016  04A9  3005               	movlw	5
  2017  04AA  0653               	xorwf	_estuff,w
  2018  04AB  0454               	iorwf	_estuff+1,w
  2019  04AC  1D03               	btfss	3,2
  2020  04AD  2CBC               	goto	l2046
  2021                           
  2022                           ;encode_AX25.c: 112: _delay((unsigned long)((795)*(10000000/4000000.0)));
  2023  04AE  3003               	movlw	3
  2024  04AF  00F4               	movwf	??_SendByte+1
  2025  04B0  3093               	movlw	147
  2026  04B1  00F3               	movwf	??_SendByte
  2027  04B2                     u2667:	
  2028  04B2  0BF3               	decfsz	??_SendByte,f
  2029  04B3  2CB2               	goto	u2667
  2030  04B4  0BF4               	decfsz	??_SendByte+1,f
  2031  04B5  2CB2               	goto	u2667
  2032  04B6  0000               	nop
  2033  04B7                     L2:	
  2034                           
  2035                           ;encode_AX25.c: 113: flipout();
  2036  04B7  120A  118A  23A4  120A  118A  	fcall	_flipout
  2037  04BC                     l2046:	
  2038                           
  2039                           ;encode_AX25.c: 114: }
  2040                           ;encode_AX25.c: 115: }
  2041                           ;encode_AX25.c: 116: _delay((unsigned long)((795)*(10000000/4000000.0)));
  2042  04BC  3003               	movlw	3
  2043  04BD  00F4               	movwf	??_SendByte+1
  2044  04BE  3093               	movlw	147
  2045  04BF  00F3               	movwf	??_SendByte
  2046  04C0                     u2677:	
  2047  04C0  0BF3               	decfsz	??_SendByte,f
  2048  04C1  2CC0               	goto	u2677
  2049  04C2  0BF4               	decfsz	??_SendByte+1,f
  2050  04C3  2CC0               	goto	u2677
  2051  04C4  0000               	nop
  2052                           
  2053                           ;encode_AX25.c: 117: byte = byte >> 1;
  2054  04C5  0877               	movf	SendByte@byte,w
  2055  04C6  00F3               	movwf	??_SendByte
  2056  04C7  1003               	clrc
  2057  04C8  0C73               	rrf	??_SendByte,w
  2058  04C9  00F4               	movwf	??_SendByte+1
  2059  04CA  0874               	movf	??_SendByte+1,w
  2060  04CB  00F7               	movwf	SendByte@byte
  2061  04CC  3001               	movlw	1
  2062  04CD  07F5               	addwf	SendByte@i,f
  2063  04CE  1803               	skipnc
  2064  04CF  0AF6               	incf	SendByte@i+1,f
  2065  04D0  3000               	movlw	0
  2066  04D1  07F6               	addwf	SendByte@i+1,f
  2067  04D2  2C7E               	goto	L3
  2068  04D3                     __end_of_SendByte:	
  2069                           
  2070                           	psect	text3
  2071  03A4                     __ptext3:	
  2072 ;; *************** function _flipout *****************
  2073 ;; Defined at:
  2074 ;;		line 121 in file "encode_AX25.c"
  2075 ;; Parameters:    Size  Location     Type
  2076 ;;		None
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;		None
  2079 ;; Return value:  Size  Location     Type
  2080 ;;                  1    wreg      void 
  2081 ;; Registers used:
  2082 ;;		wreg, status,2, status,0
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2088 ;;      Params:         0       0       0       0       0
  2089 ;;      Locals:         0       0       0       0       0
  2090 ;;      Temps:          0       0       0       0       0
  2091 ;;      Totals:         0       0       0       0       0
  2092 ;;Total ram usage:        0 bytes
  2093 ;; Hardware stack levels used:    1
  2094 ;; This function calls:
  2095 ;;		Nothing
  2096 ;; This function is called by:
  2097 ;;		_SendByte
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           
  2102                           ;psect for function _flipout
  2103  03A4                     _flipout:	
  2104                           
  2105                           ;encode_AX25.c: 122: estuff = 0;
  2106                           
  2107                           ;incstack = 0
  2108                           ; Regs used in _flipout: [wreg+status,2+status,0]
  2109  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  2110  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  2111  03A6  01D3               	clrf	_estuff
  2112  03A7  01D4               	clrf	_estuff+1
  2113                           
  2114                           ;encode_AX25.c: 123: if(ebitstatus == 0){
  2115  03A8  0851               	movf	_ebitstatus,w
  2116  03A9  0452               	iorwf	_ebitstatus+1,w
  2117  03AA  1D03               	btfss	3,2
  2118  03AB  2BB2               	goto	l368
  2119                           
  2120                           ;encode_AX25.c: 124: RC5 = 1;
  2121  03AC  1687               	bsf	7,5	;volatile
  2122                           
  2123                           ;encode_AX25.c: 125: ebitstatus = 1;
  2124  03AD  3001               	movlw	1
  2125  03AE  00D1               	movwf	_ebitstatus
  2126  03AF  3000               	movlw	0
  2127  03B0  00D2               	movwf	_ebitstatus+1
  2128                           
  2129                           ;encode_AX25.c: 126: }else{
  2130  03B1  0008               	return
  2131  03B2                     l368:	
  2132                           
  2133                           ;encode_AX25.c: 127: RC5 = 0;
  2134  03B2  1287               	bcf	7,5	;volatile
  2135                           
  2136                           ;encode_AX25.c: 128: ebitstatus = 0;
  2137  03B3  01D1               	clrf	_ebitstatus
  2138  03B4  01D2               	clrf	_ebitstatus+1
  2139  03B5  0008               	return
  2140  03B6                     __end_of_flipout:	
  2141                           
  2142                           	psect	text4
  2143  03E9                     __ptext4:	
  2144 ;; *************** function _fcsbit *****************
  2145 ;; Defined at:
  2146 ;;		line 134 in file "encode_AX25.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;  tbyte           1    wreg     unsigned char 
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;  tbyte           1    2[COMMON] unsigned char 
  2151 ;; Return value:  Size  Location     Type
  2152 ;;                  1    wreg      void 
  2153 ;; Registers used:
  2154 ;;		wreg, status,2, status,0
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2160 ;;      Params:         0       0       0       0       0
  2161 ;;      Locals:         1       0       0       0       0
  2162 ;;      Temps:          2       0       0       0       0
  2163 ;;      Totals:         3       0       0       0       0
  2164 ;;Total ram usage:        3 bytes
  2165 ;; Hardware stack levels used:    1
  2166 ;; This function calls:
  2167 ;;		Nothing
  2168 ;; This function is called by:
  2169 ;;		_SendByte
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           
  2174                           ;psect for function _fcsbit
  2175  03E9                     _fcsbit:	
  2176                           
  2177                           ;incstack = 0
  2178                           ; Regs used in _fcsbit: [wreg+status,2+status,0]
  2179                           ;fcsbit@tbyte stored from wreg
  2180  03E9  00F2               	movwf	fcsbit@tbyte
  2181  03EA  1003               	bcf	3,0	;# 
  2182  03EB  0CDF               	rrf	_efcshi,f	;# 
  2183  03EC  0CE0               	rrf	_efcslo,f	;# 
  2184                           
  2185                           ;encode_AX25.c: 140: if(((STATUS & 0x01)^(tbyte)) == 0x01){
  2186  03ED  3001               	movlw	1
  2187  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  2188  03EF  1303               	bcf	3,6	;RP1=0, select bank0
  2189  03F0  0503               	andwf	3,w	;volatile
  2190  03F1  00F0               	movwf	??_fcsbit
  2191  03F2  0872               	movf	fcsbit@tbyte,w
  2192  03F3  0670               	xorwf	??_fcsbit,w
  2193  03F4  00F1               	movwf	??_fcsbit+1
  2194  03F5  0371               	decf	??_fcsbit+1,w
  2195  03F6  1D03               	btfss	3,2
  2196  03F7  0008               	return
  2197                           
  2198                           ;encode_AX25.c: 141: efcshi = efcshi ^ 0x84;
  2199  03F8  085F               	movf	_efcshi,w
  2200  03F9  3A84               	xorlw	132
  2201  03FA  00F0               	movwf	??_fcsbit
  2202  03FB  0870               	movf	??_fcsbit,w
  2203  03FC  00DF               	movwf	_efcshi
  2204                           
  2205                           ;encode_AX25.c: 142: efcslo = efcslo ^ 0x08;
  2206  03FD  0860               	movf	_efcslo,w
  2207  03FE  3A08               	xorlw	8
  2208  03FF  00F0               	movwf	??_fcsbit
  2209  0400  0870               	movf	??_fcsbit,w
  2210  0401  00E0               	movwf	_efcslo
  2211  0402  0008               	return
  2212  0403                     __end_of_fcsbit:	
  2213                           
  2214                           	psect	text5
  2215  05C4                     __ptext5:	
  2216 ;; *************** function _Packetmaker *****************
  2217 ;; Defined at:
  2218 ;;		line 41 in file "encode_AX25.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;  eDataField      1    wreg     PTR unsigned char 
  2221 ;;		 -> main@EEPROMData_247(32), 
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;  eDataField      1    4[COMMON] PTR unsigned char 
  2224 ;;		 -> main@EEPROMData_247(32), 
  2225 ;;  i               2    5[COMMON] unsigned int 
  2226 ;;  i               2   11[COMMON] unsigned int 
  2227 ;;  i               2    9[COMMON] unsigned int 
  2228 ;;  Datanum         2    7[COMMON] unsigned int 
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  2    0[COMMON] unsigned int 
  2231 ;; Registers used:
  2232 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2238 ;;      Params:         2       0       0       0       0
  2239 ;;      Locals:         9       0       0       0       0
  2240 ;;      Temps:          2       0       0       0       0
  2241 ;;      Totals:        13       0       0       0       0
  2242 ;;Total ram usage:       13 bytes
  2243 ;; Hardware stack levels used:    2
  2244 ;; This function calls:
  2245 ;;		Nothing
  2246 ;; This function is called by:
  2247 ;;		_SendPacket
  2248 ;;		_test_Packetmaker
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           
  2253                           ;psect for function _Packetmaker
  2254  05C4                     _Packetmaker:	
  2255                           
  2256                           ;incstack = 0
  2257                           ; Regs used in _Packetmaker: [wreg-fsr0h+status,2+status,0+pclath]
  2258                           ;Packetmaker@eDataField stored from wreg
  2259  05C4  00F4               	movwf	Packetmaker@eDataField
  2260                           
  2261                           ;encode_AX25.c: 42: for(UINT i=0;i<6;i++){
  2262  05C5  01F9               	clrf	Packetmaker@i
  2263  05C6  01FA               	clrf	Packetmaker@i+1
  2264  05C7  3000               	movlw	0
  2265  05C8  027A               	subwf	Packetmaker@i+1,w
  2266  05C9  3006               	movlw	6
  2267  05CA  1903               	skipnz
  2268  05CB  0279               	subwf	Packetmaker@i,w
  2269  05CC  1803               	btfsc	3,0
  2270  05CD  2DEC               	goto	l1982
  2271  05CE                     l1976:	
  2272                           
  2273                           ;encode_AX25.c: 43: ePacket[i] = "JQ1YCZ"[i] << 1;
  2274  05CE  0879               	movf	Packetmaker@i,w
  2275  05CF  3E08               	addlw	low ((STR_1-__stringbase)| (0+32768))
  2276  05D0  0084               	movwf	4
  2277  05D1  120A  118A  2003  120A  118A  	fcall	stringdir
  2278  05D6  00F2               	movwf	??_Packetmaker
  2279  05D7  0772               	addwf	??_Packetmaker,w
  2280  05D8  00F3               	movwf	??_Packetmaker+1
  2281  05D9  0879               	movf	Packetmaker@i,w
  2282  05DA  3E90               	addlw	(low (_ePacket| (0+256)))& (0+255)
  2283  05DB  0084               	movwf	4
  2284  05DC  0873               	movf	??_Packetmaker+1,w
  2285  05DD  1783               	bsf	3,7	;select IRP bank3
  2286  05DE  0080               	movwf	0
  2287  05DF  3001               	movlw	1
  2288  05E0  07F9               	addwf	Packetmaker@i,f
  2289  05E1  1803               	skipnc
  2290  05E2  0AFA               	incf	Packetmaker@i+1,f
  2291  05E3  3000               	movlw	0
  2292  05E4  07FA               	addwf	Packetmaker@i+1,f
  2293  05E5  3000               	movlw	0
  2294  05E6  027A               	subwf	Packetmaker@i+1,w
  2295  05E7  3006               	movlw	6
  2296  05E8  1903               	skipnz
  2297  05E9  0279               	subwf	Packetmaker@i,w
  2298  05EA  1C03               	skipc
  2299  05EB  2DCE               	goto	l1976
  2300  05EC                     l1982:	
  2301                           
  2302                           ;encode_AX25.c: 44: }
  2303                           ;encode_AX25.c: 45: ePacket[6] = 0x60;
  2304  05EC  3060               	movlw	96
  2305  05ED  00F2               	movwf	??_Packetmaker
  2306  05EE  0872               	movf	??_Packetmaker,w
  2307  05EF  1683               	bsf	3,5	;RP0=1, select bank3
  2308  05F0  1703               	bsf	3,6	;RP1=1, select bank3
  2309  05F1  0096               	movwf	(_ePacket^(0+384)+6)
  2310                           
  2311                           ;encode_AX25.c: 46: for(UINT i=0;i<6;i++){
  2312  05F2  01FB               	clrf	Packetmaker@i_193
  2313  05F3  01FC               	clrf	Packetmaker@i_193+1
  2314  05F4  3000               	movlw	0
  2315  05F5  027C               	subwf	Packetmaker@i_193+1,w
  2316  05F6  3006               	movlw	6
  2317  05F7  1903               	skipnz
  2318  05F8  027B               	subwf	Packetmaker@i_193,w
  2319  05F9  1803               	btfsc	3,0
  2320  05FA  2E1A               	goto	l1996
  2321  05FB                     l1990:	
  2322                           
  2323                           ;encode_AX25.c: 47: ePacket[i+7] = "JQ1ZHX"[i] << 1;
  2324  05FB  087B               	movf	Packetmaker@i_193,w
  2325  05FC  3E01               	addlw	low ((STR_7-__stringbase)| (0+32768))
  2326  05FD  0084               	movwf	4
  2327  05FE  120A  118A  2003  120A  118A  	fcall	stringdir
  2328  0603  00F2               	movwf	??_Packetmaker
  2329  0604  0772               	addwf	??_Packetmaker,w
  2330  0605  00F3               	movwf	??_Packetmaker+1
  2331  0606  087B               	movf	Packetmaker@i_193,w
  2332  0607  3E07               	addlw	7
  2333  0608  3E90               	addlw	(low (_ePacket| (0+256)))& (0+255)
  2334  0609  0084               	movwf	4
  2335  060A  0873               	movf	??_Packetmaker+1,w
  2336  060B  1783               	bsf	3,7	;select IRP bank3
  2337  060C  0080               	movwf	0
  2338  060D  3001               	movlw	1
  2339  060E  07FB               	addwf	Packetmaker@i_193,f
  2340  060F  1803               	skipnc
  2341  0610  0AFC               	incf	Packetmaker@i_193+1,f
  2342  0611  3000               	movlw	0
  2343  0612  07FC               	addwf	Packetmaker@i_193+1,f
  2344  0613  3000               	movlw	0
  2345  0614  027C               	subwf	Packetmaker@i_193+1,w
  2346  0615  3006               	movlw	6
  2347  0616  1903               	skipnz
  2348  0617  027B               	subwf	Packetmaker@i_193,w
  2349  0618  1C03               	skipc
  2350  0619  2DFB               	goto	l1990
  2351  061A                     l1996:	
  2352                           
  2353                           ;encode_AX25.c: 48: }
  2354                           ;encode_AX25.c: 49: ePacket[13] = 0xe1;
  2355  061A  30E1               	movlw	225
  2356  061B  00F2               	movwf	??_Packetmaker
  2357  061C  0872               	movf	??_Packetmaker,w
  2358  061D  1683               	bsf	3,5	;RP0=1, select bank3
  2359  061E  1703               	bsf	3,6	;RP1=1, select bank3
  2360  061F  009D               	movwf	(_ePacket^(0+384)+13)
  2361                           
  2362                           ;encode_AX25.c: 50: ePacket[14] = 0x03;
  2363  0620  3003               	movlw	3
  2364  0621  00F2               	movwf	??_Packetmaker
  2365  0622  0872               	movf	??_Packetmaker,w
  2366  0623  009E               	movwf	(_ePacket^(0+384)+14)
  2367                           
  2368                           ;encode_AX25.c: 51: ePacket[15] = 0xf0;
  2369  0624  30F0               	movlw	240
  2370  0625  00F2               	movwf	??_Packetmaker
  2371  0626  0872               	movf	??_Packetmaker,w
  2372  0627  009F               	movwf	(_ePacket^(0+384)+15)
  2373                           
  2374                           ;encode_AX25.c: 52: UINT Datanum = 0;
  2375  0628  01F7               	clrf	Packetmaker@Datanum
  2376  0629  01F8               	clrf	Packetmaker@Datanum+1
  2377                           
  2378                           ;encode_AX25.c: 53: for(Datanum=0;eDataField[Datanum] != '\0';Datanum++);
  2379  062A  01F7               	clrf	Packetmaker@Datanum
  2380  062B  01F8               	clrf	Packetmaker@Datanum+1
  2381  062C                     l2004:	
  2382  062C  0877               	movf	Packetmaker@Datanum,w
  2383  062D  0774               	addwf	Packetmaker@eDataField,w
  2384  062E  00F2               	movwf	??_Packetmaker
  2385  062F  0872               	movf	??_Packetmaker,w
  2386  0630  0084               	movwf	4
  2387  0631  1383               	bcf	3,7	;select IRP bank0
  2388  0632  0800               	movf	0,w
  2389  0633  1903               	btfsc	3,2
  2390  0634  2E3C               	goto	l2006
  2391  0635  3001               	movlw	1
  2392  0636  07F7               	addwf	Packetmaker@Datanum,f
  2393  0637  1803               	skipnc
  2394  0638  0AF8               	incf	Packetmaker@Datanum+1,f
  2395  0639  3000               	movlw	0
  2396  063A  07F8               	addwf	Packetmaker@Datanum+1,f
  2397  063B  2E2C               	goto	l2004
  2398  063C                     l2006:	
  2399                           
  2400                           ;encode_AX25.c: 54: for(UINT i=0;i<Datanum;i++){
  2401  063C  01F5               	clrf	Packetmaker@i_196
  2402  063D  01F6               	clrf	Packetmaker@i_196+1
  2403  063E                     l2012:	
  2404  063E  0878               	movf	Packetmaker@Datanum+1,w
  2405  063F  0276               	subwf	Packetmaker@i_196+1,w
  2406  0640  1D03               	skipz
  2407  0641  2E44               	goto	u1455
  2408  0642  0877               	movf	Packetmaker@Datanum,w
  2409  0643  0275               	subwf	Packetmaker@i_196,w
  2410  0644                     u1455:	
  2411  0644  1803               	btfsc	3,0
  2412  0645  2E5C               	goto	l2014
  2413                           
  2414                           ;encode_AX25.c: 55: ePacket[16+i] = eDataField[i];
  2415  0646  0875               	movf	Packetmaker@i_196,w
  2416  0647  0774               	addwf	Packetmaker@eDataField,w
  2417  0648  00F2               	movwf	??_Packetmaker
  2418  0649  0872               	movf	??_Packetmaker,w
  2419  064A  0084               	movwf	4
  2420  064B  1383               	bcf	3,7	;select IRP bank0
  2421  064C  0800               	movf	0,w
  2422  064D  00F3               	movwf	??_Packetmaker+1
  2423  064E  0875               	movf	Packetmaker@i_196,w
  2424  064F  3E10               	addlw	16
  2425  0650  3E90               	addlw	(low (_ePacket| (0+256)))& (0+255)
  2426  0651  0084               	movwf	4
  2427  0652  0873               	movf	??_Packetmaker+1,w
  2428  0653  1783               	bsf	3,7	;select IRP bank3
  2429  0654  0080               	movwf	0
  2430  0655  3001               	movlw	1
  2431  0656  07F5               	addwf	Packetmaker@i_196,f
  2432  0657  1803               	skipnc
  2433  0658  0AF6               	incf	Packetmaker@i_196+1,f
  2434  0659  3000               	movlw	0
  2435  065A  07F6               	addwf	Packetmaker@i_196+1,f
  2436  065B  2E3E               	goto	l2012
  2437  065C                     l2014:	
  2438                           
  2439                           ;encode_AX25.c: 56: }
  2440                           ;encode_AX25.c: 57: return 16+Datanum;
  2441  065C  0877               	movf	Packetmaker@Datanum,w
  2442  065D  3E10               	addlw	16
  2443  065E  00F0               	movwf	?_Packetmaker
  2444  065F  0878               	movf	Packetmaker@Datanum+1,w
  2445  0660  1803               	skipnc
  2446  0661  3E01               	addlw	1
  2447  0662  3E00               	addlw	0
  2448  0663  00F1               	movwf	?_Packetmaker+1
  2449  0664  0008               	return
  2450  0665                     __end_of_Packetmaker:	
  2451                           
  2452                           	psect	text6
  2453  03B6                     __ptext6:	
  2454 ;; *************** function _Init_SERIAL *****************
  2455 ;; Defined at:
  2456 ;;		line 5 in file "UART.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;		None
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;		None
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  1    wreg      void 
  2463 ;; Registers used:
  2464 ;;		wreg
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2470 ;;      Params:         0       0       0       0       0
  2471 ;;      Locals:         0       0       0       0       0
  2472 ;;      Temps:          0       0       0       0       0
  2473 ;;      Totals:         0       0       0       0       0
  2474 ;;Total ram usage:        0 bytes
  2475 ;; Hardware stack levels used:    1
  2476 ;; This function calls:
  2477 ;;		Nothing
  2478 ;; This function is called by:
  2479 ;;		_main
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           
  2484                           ;psect for function _Init_SERIAL
  2485  03B6                     _Init_SERIAL:	
  2486                           
  2487                           ;UART.c: 6: SPBRG = 129;
  2488                           
  2489                           ;incstack = 0
  2490                           ; Regs used in _Init_SERIAL: [wreg]
  2491  03B6  3081               	movlw	129
  2492  03B7  1683               	bsf	3,5	;RP0=1, select bank1
  2493  03B8  1303               	bcf	3,6	;RP1=0, select bank1
  2494  03B9  0099               	movwf	25	;volatile
  2495                           
  2496                           ;UART.c: 7: BRGH = 0;
  2497  03BA  1118               	bcf	24,2	;volatile
  2498                           
  2499                           ;UART.c: 8: SYNC = 0;
  2500  03BB  1218               	bcf	24,4	;volatile
  2501                           
  2502                           ;UART.c: 9: SPEN = 1;
  2503  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  2504  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  2505  03BE  1798               	bsf	24,7	;volatile
  2506                           
  2507                           ;UART.c: 10: CREN = 1;
  2508  03BF  1618               	bsf	24,4	;volatile
  2509                           
  2510                           ;UART.c: 11: SREN = 0;
  2511  03C0  1298               	bcf	24,5	;volatile
  2512                           
  2513                           ;UART.c: 12: RCIF = 0;
  2514  03C1  128C               	bcf	12,5	;volatile
  2515                           
  2516                           ;UART.c: 13: TXIE = 0;
  2517  03C2  1683               	bsf	3,5	;RP0=1, select bank1
  2518  03C3  1303               	bcf	3,6	;RP1=0, select bank1
  2519  03C4  120C               	bcf	12,4	;volatile
  2520                           
  2521                           ;UART.c: 14: RCIE = 1;
  2522  03C5  168C               	bsf	12,5	;volatile
  2523                           
  2524                           ;UART.c: 15: TX9 = 0;
  2525  03C6  1318               	bcf	24,6	;volatile
  2526                           
  2527                           ;UART.c: 16: RX9 = 0;
  2528  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  2529  03C8  1303               	bcf	3,6	;RP1=0, select bank0
  2530  03C9  1318               	bcf	24,6	;volatile
  2531                           
  2532                           ;UART.c: 17: TXEN = 0;
  2533  03CA  1683               	bsf	3,5	;RP0=1, select bank1
  2534  03CB  1303               	bcf	3,6	;RP1=0, select bank1
  2535  03CC  1298               	bcf	24,5	;volatile
  2536                           
  2537                           ;UART.c: 18: TXEN = 1;
  2538  03CD  1698               	bsf	24,5	;volatile
  2539  03CE  0008               	return
  2540  03CF                     __end_of_Init_SERIAL:	
  2541                           
  2542                           	psect	text7
  2543  03CF                     __ptext7:	
  2544 ;; *************** function _Init_MPU *****************
  2545 ;; Defined at:
  2546 ;;		line 8 in file "Init_MPU.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;		None
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;		None
  2551 ;; Return value:  Size  Location     Type
  2552 ;;                  1    wreg      void 
  2553 ;; Registers used:
  2554 ;;		wreg, status,2
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2560 ;;      Params:         0       0       0       0       0
  2561 ;;      Locals:         0       0       0       0       0
  2562 ;;      Temps:          0       0       0       0       0
  2563 ;;      Totals:         0       0       0       0       0
  2564 ;;Total ram usage:        0 bytes
  2565 ;; Hardware stack levels used:    1
  2566 ;; This function calls:
  2567 ;;		Nothing
  2568 ;; This function is called by:
  2569 ;;		_main
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573                           
  2574                           ;psect for function _Init_MPU
  2575  03CF                     _Init_MPU:	
  2576                           
  2577                           ;Init_MPU.c: 11: PORTA = 0x00;
  2578                           
  2579                           ;incstack = 0
  2580                           ; Regs used in _Init_MPU: [wreg+status,2]
  2581  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  2582  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  2583  03D1  0185               	clrf	5	;volatile
  2584                           
  2585                           ;Init_MPU.c: 12: PORTB = 0x00;
  2586  03D2  0186               	clrf	6	;volatile
  2587                           
  2588                           ;Init_MPU.c: 13: PORTC = 0x00;
  2589  03D3  0187               	clrf	7	;volatile
  2590                           
  2591                           ;Init_MPU.c: 15: PORTE = 0x00;
  2592  03D4  0189               	clrf	9	;volatile
  2593                           
  2594                           ;Init_MPU.c: 18: ANSEL = 0x00;
  2595  03D5  1683               	bsf	3,5	;RP0=1, select bank3
  2596  03D6  1703               	bsf	3,6	;RP1=1, select bank3
  2597  03D7  0188               	clrf	8	;volatile
  2598                           
  2599                           ;Init_MPU.c: 19: ANSELH = 0x00;
  2600  03D8  0189               	clrf	9	;volatile
  2601                           
  2602                           ;Init_MPU.c: 23: TRISA = 0b10000000;
  2603  03D9  3080               	movlw	128
  2604  03DA  1683               	bsf	3,5	;RP0=1, select bank1
  2605  03DB  1303               	bcf	3,6	;RP1=0, select bank1
  2606  03DC  0085               	movwf	5	;volatile
  2607                           
  2608                           ;Init_MPU.c: 24: TRISB = 0b00000001;
  2609  03DD  3001               	movlw	1
  2610  03DE  0086               	movwf	6	;volatile
  2611                           
  2612                           ;Init_MPU.c: 25: TRISC = 0b01011100;
  2613  03DF  305C               	movlw	92
  2614  03E0  0087               	movwf	7	;volatile
  2615                           
  2616                           ;Init_MPU.c: 27: TRISE = 0b00000000;
  2617  03E1  0189               	clrf	9	;volatile
  2618                           
  2619                           ;Init_MPU.c: 30: PORTA = 0x00;
  2620  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  2621  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  2622  03E4  0185               	clrf	5	;volatile
  2623                           
  2624                           ;Init_MPU.c: 31: PORTB = 0x00;
  2625  03E5  0186               	clrf	6	;volatile
  2626                           
  2627                           ;Init_MPU.c: 32: PORTC = 0x00;
  2628  03E6  0187               	clrf	7	;volatile
  2629                           
  2630                           ;Init_MPU.c: 34: PORTE = 0x00;
  2631  03E7  0189               	clrf	9	;volatile
  2632  03E8  0008               	return
  2633  03E9                     __end_of_Init_MPU:	
  2634                           
  2635                           	psect	text8
  2636  0447                     __ptext8:	
  2637 ;; *************** function _Init_I2C_M *****************
  2638 ;; Defined at:
  2639 ;;		line 11 in file "I2C.c"
  2640 ;; Parameters:    Size  Location     Type
  2641 ;;  c               4    0[BANK0 ] const unsigned long 
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;		None
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  1    wreg      void 
  2646 ;; Registers used:
  2647 ;;		wreg, status,2, status,0, pclath, cstack
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2653 ;;      Params:         0       4       0       0       0
  2654 ;;      Locals:         0       0       0       0       0
  2655 ;;      Temps:          0       4       0       0       0
  2656 ;;      Totals:         0       8       0       0       0
  2657 ;;Total ram usage:        8 bytes
  2658 ;; Hardware stack levels used:    1
  2659 ;; Hardware stack levels required when called:    1
  2660 ;; This function calls:
  2661 ;;		___lldiv
  2662 ;; This function is called by:
  2663 ;;		_main
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           
  2667                           
  2668                           ;psect for function _Init_I2C_M
  2669  0447                     _Init_I2C_M:	
  2670                           
  2671                           ;I2C.c: 12: SSPCON = 0b00101000;
  2672                           
  2673                           ;incstack = 0
  2674                           ; Regs used in _Init_I2C_M: [wreg+status,2+status,0+pclath+cstack]
  2675  0447  3028               	movlw	40
  2676  0448  1283               	bcf	3,5	;RP0=0, select bank0
  2677  0449  1303               	bcf	3,6	;RP1=0, select bank0
  2678  044A  0094               	movwf	20	;volatile
  2679                           
  2680                           ;I2C.c: 13: SSPCON2 = 0;
  2681  044B  1683               	bsf	3,5	;RP0=1, select bank1
  2682  044C  1303               	bcf	3,6	;RP1=0, select bank1
  2683  044D  0191               	clrf	17	;volatile
  2684                           
  2685                           ;I2C.c: 14: SSPADD = (10000000/(4*c))-1;
  2686  044E  1283               	bcf	3,5	;RP0=0, select bank0
  2687  044F  1303               	bcf	3,6	;RP1=0, select bank0
  2688  0450  0820               	movf	Init_I2C_M@c,w
  2689  0451  00A4               	movwf	??_Init_I2C_M
  2690  0452  0821               	movf	Init_I2C_M@c+1,w
  2691  0453  00A5               	movwf	??_Init_I2C_M+1
  2692  0454  0822               	movf	Init_I2C_M@c+2,w
  2693  0455  00A6               	movwf	??_Init_I2C_M+2
  2694  0456  0823               	movf	Init_I2C_M@c+3,w
  2695  0457  00A7               	movwf	??_Init_I2C_M+3
  2696  0458  3002               	movlw	2
  2697  0459                     u2375:	
  2698  0459  1003               	clrc
  2699  045A  0DA4               	rlf	??_Init_I2C_M,f
  2700  045B  0DA5               	rlf	??_Init_I2C_M+1,f
  2701  045C  0DA6               	rlf	??_Init_I2C_M+2,f
  2702  045D  0DA7               	rlf	??_Init_I2C_M+3,f
  2703  045E  3EFF               	addlw	-1
  2704  045F  1D03               	skipz
  2705  0460  2C59               	goto	u2375
  2706  0461  0827               	movf	??_Init_I2C_M+3,w
  2707  0462  00F3               	movwf	___lldiv@divisor+3
  2708  0463  0826               	movf	??_Init_I2C_M+2,w
  2709  0464  00F2               	movwf	___lldiv@divisor+2
  2710  0465  0825               	movf	??_Init_I2C_M+1,w
  2711  0466  00F1               	movwf	___lldiv@divisor+1
  2712  0467  0824               	movf	??_Init_I2C_M,w
  2713  0468  00F0               	movwf	___lldiv@divisor
  2714  0469  3000               	movlw	0
  2715  046A  00F7               	movwf	___lldiv@dividend+3
  2716  046B  3098               	movlw	152
  2717  046C  00F6               	movwf	___lldiv@dividend+2
  2718  046D  3096               	movlw	150
  2719  046E  00F5               	movwf	___lldiv@dividend+1
  2720  046F  3080               	movlw	128
  2721  0470  00F4               	movwf	___lldiv@dividend
  2722  0471  120A  118A  24D3   	fcall	___lldiv
  2723  0474  0870               	movf	?___lldiv,w
  2724  0475  3EFF               	addlw	255
  2725  0476  1683               	bsf	3,5	;RP0=1, select bank1
  2726  0477  1303               	bcf	3,6	;RP1=0, select bank1
  2727  0478  0093               	movwf	19	;volatile
  2728                           
  2729                           ;I2C.c: 15: SSPSTAT = 0;
  2730  0479  0194               	clrf	20	;volatile
  2731  047A  0008               	return
  2732  047B                     __end_of_Init_I2C_M:	
  2733                           
  2734                           	psect	text9
  2735  04D3                     __ptext9:	
  2736 ;; *************** function ___lldiv *****************
  2737 ;; Defined at:
  2738 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lldiv.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;  divisor         4    0[COMMON] unsigned long 
  2741 ;;  dividend        4    4[COMMON] unsigned long 
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;  quotient        4    9[COMMON] unsigned long 
  2744 ;;  counter         1   13[COMMON] unsigned char 
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  4    0[COMMON] unsigned long 
  2747 ;; Registers used:
  2748 ;;		wreg, status,2, status,0
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2754 ;;      Params:         8       0       0       0       0
  2755 ;;      Locals:         5       0       0       0       0
  2756 ;;      Temps:          1       0       0       0       0
  2757 ;;      Totals:        14       0       0       0       0
  2758 ;;Total ram usage:       14 bytes
  2759 ;; Hardware stack levels used:    1
  2760 ;; This function calls:
  2761 ;;		Nothing
  2762 ;; This function is called by:
  2763 ;;		_Init_I2C_M
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767                           
  2768                           ;psect for function ___lldiv
  2769  04D3                     ___lldiv:	
  2770                           
  2771                           ;incstack = 0
  2772                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2773  04D3  3000               	movlw	0
  2774  04D4  00FC               	movwf	___lldiv@quotient+3
  2775  04D5  3000               	movlw	0
  2776  04D6  00FB               	movwf	___lldiv@quotient+2
  2777  04D7  3000               	movlw	0
  2778  04D8  00FA               	movwf	___lldiv@quotient+1
  2779  04D9  3000               	movlw	0
  2780  04DA  00F9               	movwf	___lldiv@quotient
  2781  04DB  0873               	movf	___lldiv@divisor+3,w
  2782  04DC  0472               	iorwf	___lldiv@divisor+2,w
  2783  04DD  0471               	iorwf	___lldiv@divisor+1,w
  2784  04DE  0470               	iorwf	___lldiv@divisor,w
  2785  04DF  1903               	skipnz
  2786  04E0  2D28               	goto	l2106
  2787  04E1  01FD               	clrf	___lldiv@counter
  2788  04E2  0AFD               	incf	___lldiv@counter,f
  2789  04E3                     l2092:	
  2790  04E3  1BF3               	btfsc	___lldiv@divisor+3,7
  2791  04E4  2CF3               	goto	l2094
  2792  04E5  3001               	movlw	1
  2793  04E6  00F8               	movwf	??___lldiv
  2794  04E7                     u1565:	
  2795  04E7  1003               	clrc
  2796  04E8  0DF0               	rlf	___lldiv@divisor,f
  2797  04E9  0DF1               	rlf	___lldiv@divisor+1,f
  2798  04EA  0DF2               	rlf	___lldiv@divisor+2,f
  2799  04EB  0DF3               	rlf	___lldiv@divisor+3,f
  2800  04EC  0BF8               	decfsz	??___lldiv,f
  2801  04ED  2CE7               	goto	u1565
  2802  04EE  3001               	movlw	1
  2803  04EF  00F8               	movwf	??___lldiv
  2804  04F0  0878               	movf	??___lldiv,w
  2805  04F1  07FD               	addwf	___lldiv@counter,f
  2806  04F2  2CE3               	goto	l2092
  2807  04F3                     l2094:	
  2808  04F3  3001               	movlw	1
  2809  04F4  00F8               	movwf	??___lldiv
  2810  04F5                     u1585:	
  2811  04F5  1003               	clrc
  2812  04F6  0DF9               	rlf	___lldiv@quotient,f
  2813  04F7  0DFA               	rlf	___lldiv@quotient+1,f
  2814  04F8  0DFB               	rlf	___lldiv@quotient+2,f
  2815  04F9  0DFC               	rlf	___lldiv@quotient+3,f
  2816  04FA  0BF8               	decfsz	??___lldiv,f
  2817  04FB  2CF5               	goto	u1585
  2818  04FC  0873               	movf	___lldiv@divisor+3,w
  2819  04FD  0277               	subwf	___lldiv@dividend+3,w
  2820  04FE  1D03               	skipz
  2821  04FF  2D0A               	goto	u1595
  2822  0500  0872               	movf	___lldiv@divisor+2,w
  2823  0501  0276               	subwf	___lldiv@dividend+2,w
  2824  0502  1D03               	skipz
  2825  0503  2D0A               	goto	u1595
  2826  0504  0871               	movf	___lldiv@divisor+1,w
  2827  0505  0275               	subwf	___lldiv@dividend+1,w
  2828  0506  1D03               	skipz
  2829  0507  2D0A               	goto	u1595
  2830  0508  0870               	movf	___lldiv@divisor,w
  2831  0509  0274               	subwf	___lldiv@dividend,w
  2832  050A                     u1595:	
  2833  050A  1C03               	skipc
  2834  050B  2D1B               	goto	l2102
  2835  050C  0870               	movf	___lldiv@divisor,w
  2836  050D  02F4               	subwf	___lldiv@dividend,f
  2837  050E  0871               	movf	___lldiv@divisor+1,w
  2838  050F  1C03               	skipc
  2839  0510  0F71               	incfsz	___lldiv@divisor+1,w
  2840  0511  02F5               	subwf	___lldiv@dividend+1,f
  2841  0512  0872               	movf	___lldiv@divisor+2,w
  2842  0513  1C03               	skipc
  2843  0514  0F72               	incfsz	___lldiv@divisor+2,w
  2844  0515  02F6               	subwf	___lldiv@dividend+2,f
  2845  0516  0873               	movf	___lldiv@divisor+3,w
  2846  0517  1C03               	skipc
  2847  0518  0F73               	incfsz	___lldiv@divisor+3,w
  2848  0519  02F7               	subwf	___lldiv@dividend+3,f
  2849  051A  1479               	bsf	___lldiv@quotient,0
  2850  051B                     l2102:	
  2851  051B  3001               	movlw	1
  2852  051C                     u1605:	
  2853  051C  1003               	clrc
  2854  051D  0CF3               	rrf	___lldiv@divisor+3,f
  2855  051E  0CF2               	rrf	___lldiv@divisor+2,f
  2856  051F  0CF1               	rrf	___lldiv@divisor+1,f
  2857  0520  0CF0               	rrf	___lldiv@divisor,f
  2858  0521  3EFF               	addlw	-1
  2859  0522  1D03               	skipz
  2860  0523  2D1C               	goto	u1605
  2861  0524  3001               	movlw	1
  2862  0525  02FD               	subwf	___lldiv@counter,f
  2863  0526  1D03               	btfss	3,2
  2864  0527  2CF3               	goto	l2094
  2865  0528                     l2106:	
  2866  0528  087C               	movf	___lldiv@quotient+3,w
  2867  0529  00F3               	movwf	?___lldiv+3
  2868  052A  087B               	movf	___lldiv@quotient+2,w
  2869  052B  00F2               	movwf	?___lldiv+2
  2870  052C  087A               	movf	___lldiv@quotient+1,w
  2871  052D  00F1               	movwf	?___lldiv+1
  2872  052E  0879               	movf	___lldiv@quotient,w
  2873  052F  00F0               	movwf	?___lldiv
  2874  0530  0008               	return
  2875  0531                     __end_of___lldiv:	
  2876                           
  2877                           	psect	text10
  2878  0711                     __ptext10:	
  2879 ;; *************** function _EEPROM_Read *****************
  2880 ;; Defined at:
  2881 ;;		line 77 in file "I2C.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;  EEPROM_addre    1    wreg     unsigned char 
  2884 ;;  high_address    1    3[COMMON] unsigned char 
  2885 ;;  low_address     1    4[COMMON] unsigned char 
  2886 ;;  ReadData        1    5[COMMON] PTR unsigned char 
  2887 ;;		 -> main@EEPROMData_247(32), 
  2888 ;;  EEPROMDataLe    1    6[COMMON] PTR unsigned int 
  2889 ;;		 -> main@EEPROMDataLength(2), 
  2890 ;; Auto vars:     Size  Location     Type
  2891 ;;  EEPROM_addre    1    0[BANK0 ] unsigned char 
  2892 ;;  i               2    2[BANK0 ] unsigned int 
  2893 ;;  Address         1    4[BANK0 ] unsigned char 
  2894 ;;  ReadAddress     1    1[BANK0 ] unsigned char 
  2895 ;; Return value:  Size  Location     Type
  2896 ;;                  1    wreg      void 
  2897 ;; Registers used:
  2898 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2899 ;; Tracked objects:
  2900 ;;		On entry : 0/0
  2901 ;;		On exit  : 0/0
  2902 ;;		Unchanged: 0/0
  2903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2904 ;;      Params:         4       0       0       0       0
  2905 ;;      Locals:         0       5       0       0       0
  2906 ;;      Temps:          3       0       0       0       0
  2907 ;;      Totals:         7       5       0       0       0
  2908 ;;Total ram usage:       12 bytes
  2909 ;; Hardware stack levels used:    1
  2910 ;; Hardware stack levels required when called:    2
  2911 ;; This function calls:
  2912 ;;		_I2C_Master_Read
  2913 ;;		_I2C_Master_RepeatedStart
  2914 ;;		_I2C_Master_Start
  2915 ;;		_I2C_Master_Stop
  2916 ;;		_I2C_Master_Write
  2917 ;; This function is called by:
  2918 ;;		_main
  2919 ;; This function uses a non-reentrant model
  2920 ;;
  2921                           
  2922                           
  2923                           ;psect for function _EEPROM_Read
  2924  0711                     _EEPROM_Read:	
  2925                           
  2926                           ;incstack = 0
  2927                           ; Regs used in _EEPROM_Read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2928                           ;EEPROM_Read@EEPROM_address stored from wreg
  2929  0711  1283               	bcf	3,5	;RP0=0, select bank0
  2930  0712  1303               	bcf	3,6	;RP1=0, select bank0
  2931  0713  00A0               	movwf	EEPROM_Read@EEPROM_address
  2932                           
  2933                           ;I2C.c: 78: UBYTE Address = EEPROM_address << 1;
  2934  0714  0820               	movf	EEPROM_Read@EEPROM_address,w
  2935  0715  00F7               	movwf	??_EEPROM_Read
  2936  0716  0777               	addwf	??_EEPROM_Read,w
  2937  0717  00F8               	movwf	??_EEPROM_Read+1
  2938  0718  0878               	movf	??_EEPROM_Read+1,w
  2939  0719  00A4               	movwf	EEPROM_Read@Address
  2940                           
  2941                           ;I2C.c: 79: UBYTE ReadAddress = Address | 0x01;
  2942  071A  0824               	movf	EEPROM_Read@Address,w
  2943  071B  3801               	iorlw	1
  2944  071C  00F7               	movwf	??_EEPROM_Read
  2945  071D  0877               	movf	??_EEPROM_Read,w
  2946  071E  00A1               	movwf	EEPROM_Read@ReadAddress
  2947                           
  2948                           ;I2C.c: 83: I2C_Master_Start();
  2949  071F  120A  118A  236C  120A  118A  	fcall	_I2C_Master_Start
  2950                           
  2951                           ;I2C.c: 84: I2C_Master_Write(Address);
  2952  0724  1283               	bcf	3,5	;RP0=0, select bank0
  2953  0725  1303               	bcf	3,6	;RP1=0, select bank0
  2954  0726  0824               	movf	EEPROM_Read@Address,w
  2955  0727  00F7               	movwf	??_EEPROM_Read
  2956  0728  01F8               	clrf	??_EEPROM_Read+1
  2957  0729  0877               	movf	??_EEPROM_Read,w
  2958  072A  00F0               	movwf	I2C_Master_Write@d
  2959  072B  0878               	movf	??_EEPROM_Read+1,w
  2960  072C  00F1               	movwf	I2C_Master_Write@d+1
  2961  072D  120A  118A  237A  120A  118A  	fcall	_I2C_Master_Write
  2962                           
  2963                           ;I2C.c: 85: I2C_Master_Write(high_address);
  2964  0732  0873               	movf	EEPROM_Read@high_address,w
  2965  0733  00F7               	movwf	??_EEPROM_Read
  2966  0734  01F8               	clrf	??_EEPROM_Read+1
  2967  0735  0877               	movf	??_EEPROM_Read,w
  2968  0736  00F0               	movwf	I2C_Master_Write@d
  2969  0737  0878               	movf	??_EEPROM_Read+1,w
  2970  0738  00F1               	movwf	I2C_Master_Write@d+1
  2971  0739  120A  118A  237A  120A  118A  	fcall	_I2C_Master_Write
  2972                           
  2973                           ;I2C.c: 86: I2C_Master_Write(low_address);
  2974  073E  0874               	movf	EEPROM_Read@low_address,w
  2975  073F  00F7               	movwf	??_EEPROM_Read
  2976  0740  01F8               	clrf	??_EEPROM_Read+1
  2977  0741  0877               	movf	??_EEPROM_Read,w
  2978  0742  00F0               	movwf	I2C_Master_Write@d
  2979  0743  0878               	movf	??_EEPROM_Read+1,w
  2980  0744  00F1               	movwf	I2C_Master_Write@d+1
  2981  0745  120A  118A  237A  120A  118A  	fcall	_I2C_Master_Write
  2982                           
  2983                           ;I2C.c: 87: I2C_Master_RepeatedStart();
  2984  074A  120A  118A  2365  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2985                           
  2986                           ;I2C.c: 90: I2C_Master_Write(ReadAddress);
  2987  074F  1283               	bcf	3,5	;RP0=0, select bank0
  2988  0750  1303               	bcf	3,6	;RP1=0, select bank0
  2989  0751  0821               	movf	EEPROM_Read@ReadAddress,w
  2990  0752  00F7               	movwf	??_EEPROM_Read
  2991  0753  01F8               	clrf	??_EEPROM_Read+1
  2992  0754  0877               	movf	??_EEPROM_Read,w
  2993  0755  00F0               	movwf	I2C_Master_Write@d
  2994  0756  0878               	movf	??_EEPROM_Read+1,w
  2995  0757  00F1               	movwf	I2C_Master_Write@d+1
  2996  0758  120A  118A  237A  120A  118A  	fcall	_I2C_Master_Write
  2997                           
  2998                           ;I2C.c: 92: for (*EEPROMDataLength = 0; ReadData[*EEPROMDataLength]!= 0x00; *EEPROMDataL
      +                          ength++);
  2999  075D  0876               	movf	EEPROM_Read@EEPROMDataLength,w
  3000  075E  0084               	movwf	4
  3001  075F  1383               	bcf	3,7	;select IRP bank0
  3002  0760  0180               	clrf	0
  3003  0761  0A84               	incf	4,f
  3004  0762  0180               	clrf	0
  3005  0763                     l2724:	
  3006  0763  0876               	movf	EEPROM_Read@EEPROMDataLength,w
  3007  0764  0084               	movwf	4
  3008  0765  0800               	movf	0,w
  3009  0766  0775               	addwf	EEPROM_Read@ReadData,w
  3010  0767  00F7               	movwf	??_EEPROM_Read
  3011  0768  0877               	movf	??_EEPROM_Read,w
  3012  0769  0084               	movwf	4
  3013  076A  0800               	movf	0,w
  3014  076B  1903               	btfsc	3,2
  3015  076C  2F72               	goto	l2726
  3016  076D  3002               	movlw	2
  3017  076E  00F7               	movwf	??_EEPROM_Read
  3018  076F  0877               	movf	??_EEPROM_Read,w
  3019  0770  07F6               	addwf	EEPROM_Read@EEPROMDataLength,f
  3020  0771  2F63               	goto	l2724
  3021  0772                     l2726:	
  3022                           
  3023                           ;I2C.c: 95: for(UINT i = 0; i < *EEPROMDataLength; i++){
  3024  0772  1283               	bcf	3,5	;RP0=0, select bank0
  3025  0773  1303               	bcf	3,6	;RP1=0, select bank0
  3026  0774  01A2               	clrf	EEPROM_Read@i
  3027  0775  01A3               	clrf	EEPROM_Read@i+1
  3028  0776                     l2732:	
  3029  0776  0876               	movf	EEPROM_Read@EEPROMDataLength,w
  3030  0777  0084               	movwf	4
  3031  0778  0800               	movf	0,w
  3032  0779  00F7               	movwf	??_EEPROM_Read
  3033  077A  0A84               	incf	4,f
  3034  077B  0800               	movf	0,w
  3035  077C  00F8               	movwf	??_EEPROM_Read+1
  3036  077D  0878               	movf	??_EEPROM_Read+1,w
  3037  077E  0223               	subwf	EEPROM_Read@i+1,w
  3038  077F  1D03               	skipz
  3039  0780  2F83               	goto	u2395
  3040  0781  0877               	movf	??_EEPROM_Read,w
  3041  0782  0222               	subwf	EEPROM_Read@i,w
  3042  0783                     u2395:	
  3043  0783  1803               	btfsc	3,0
  3044  0784  2F9D               	goto	l2734
  3045                           
  3046                           ;I2C.c: 99: ReadData[i] = I2C_Master_Read(1);
  3047  0785  3001               	movlw	1
  3048  0786  120A  118A  2421  120A  118A  	fcall	_I2C_Master_Read
  3049  078B  00F7               	movwf	??_EEPROM_Read
  3050  078C  1283               	bcf	3,5	;RP0=0, select bank0
  3051  078D  1303               	bcf	3,6	;RP1=0, select bank0
  3052  078E  0822               	movf	EEPROM_Read@i,w
  3053  078F  0775               	addwf	EEPROM_Read@ReadData,w
  3054  0790  00F8               	movwf	??_EEPROM_Read+1
  3055  0791  0878               	movf	??_EEPROM_Read+1,w
  3056  0792  0084               	movwf	4
  3057  0793  0877               	movf	??_EEPROM_Read,w
  3058  0794  1383               	bcf	3,7	;select IRP bank0
  3059  0795  0080               	movwf	0
  3060  0796  3001               	movlw	1
  3061  0797  07A2               	addwf	EEPROM_Read@i,f
  3062  0798  1803               	skipnc
  3063  0799  0AA3               	incf	EEPROM_Read@i+1,f
  3064  079A  3000               	movlw	0
  3065  079B  07A3               	addwf	EEPROM_Read@i+1,f
  3066  079C  2F76               	goto	l2732
  3067  079D                     l2734:	
  3068                           
  3069                           ;I2C.c: 101: }
  3070                           ;I2C.c: 102: ReadData[*EEPROMDataLength] = I2C_Master_Read(0);
  3071  079D  3000               	movlw	0
  3072  079E  120A  118A  2421  120A  118A  	fcall	_I2C_Master_Read
  3073  07A3  00F7               	movwf	??_EEPROM_Read
  3074  07A4  0876               	movf	EEPROM_Read@EEPROMDataLength,w
  3075  07A5  0084               	movwf	4
  3076  07A6  1383               	bcf	3,7	;select IRP bank0
  3077  07A7  0800               	movf	0,w
  3078  07A8  0775               	addwf	EEPROM_Read@ReadData,w
  3079  07A9  00F8               	movwf	??_EEPROM_Read+1
  3080  07AA  0878               	movf	??_EEPROM_Read+1,w
  3081  07AB  0084               	movwf	4
  3082  07AC  0877               	movf	??_EEPROM_Read,w
  3083  07AD  0080               	movwf	0
  3084                           
  3085                           ;I2C.c: 104: I2C_Master_Stop();
  3086  07AE  120A  118A  2373  120A  118A  	fcall	_I2C_Master_Stop
  3087                           
  3088                           ;I2C.c: 113: _delay((unsigned long)((200)*(10000000/4000.0)));
  3089  07B3  3003               	movlw	3
  3090  07B4  00F9               	movwf	??_EEPROM_Read+2
  3091  07B5  308A               	movlw	138
  3092  07B6  00F8               	movwf	??_EEPROM_Read+1
  3093  07B7  3055               	movlw	85
  3094  07B8  00F7               	movwf	??_EEPROM_Read
  3095  07B9                     u2687:	
  3096  07B9  0BF7               	decfsz	??_EEPROM_Read,f
  3097  07BA  2FB9               	goto	u2687
  3098  07BB  0BF8               	decfsz	??_EEPROM_Read+1,f
  3099  07BC  2FB9               	goto	u2687
  3100  07BD  0BF9               	decfsz	??_EEPROM_Read+2,f
  3101  07BE  2FB9               	goto	u2687
  3102  07BF  2FC0               	nop2
  3103  07C0  0008               	return
  3104  07C1                     __end_of_EEPROM_Read:	
  3105                           
  3106                           	psect	text11
  3107  037A                     __ptext11:	
  3108 ;; *************** function _I2C_Master_Write *****************
  3109 ;; Defined at:
  3110 ;;		line 37 in file "I2C.c"
  3111 ;; Parameters:    Size  Location     Type
  3112 ;;  d               2    0[COMMON] unsigned int 
  3113 ;; Auto vars:     Size  Location     Type
  3114 ;;		None
  3115 ;; Return value:  Size  Location     Type
  3116 ;;                  1    wreg      void 
  3117 ;; Registers used:
  3118 ;;		wreg, status,2, status,0, pclath, cstack
  3119 ;; Tracked objects:
  3120 ;;		On entry : 0/0
  3121 ;;		On exit  : 0/0
  3122 ;;		Unchanged: 0/0
  3123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3124 ;;      Params:         2       0       0       0       0
  3125 ;;      Locals:         0       0       0       0       0
  3126 ;;      Temps:          0       0       0       0       0
  3127 ;;      Totals:         2       0       0       0       0
  3128 ;;Total ram usage:        2 bytes
  3129 ;; Hardware stack levels used:    1
  3130 ;; Hardware stack levels required when called:    1
  3131 ;; This function calls:
  3132 ;;		_I2C_Master_Wait
  3133 ;; This function is called by:
  3134 ;;		_EEPROM_Read
  3135 ;;		_EEPROM_Write
  3136 ;; This function uses a non-reentrant model
  3137 ;;
  3138                           
  3139                           
  3140                           ;psect for function _I2C_Master_Write
  3141  037A                     _I2C_Master_Write:	
  3142                           
  3143                           ;I2C.c: 38: I2C_Master_Wait();
  3144                           
  3145                           ;incstack = 0
  3146                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3147  037A  120A  118A  238A   	fcall	_I2C_Master_Wait
  3148                           
  3149                           ;I2C.c: 39: SSPBUF = d;
  3150  037D  0870               	movf	I2C_Master_Write@d,w
  3151  037E  1283               	bcf	3,5	;RP0=0, select bank0
  3152  037F  1303               	bcf	3,6	;RP1=0, select bank0
  3153  0380  0093               	movwf	19	;volatile
  3154  0381  0008               	return
  3155  0382                     __end_of_I2C_Master_Write:	
  3156                           
  3157                           	psect	text12
  3158  0373                     __ptext12:	
  3159 ;; *************** function _I2C_Master_Stop *****************
  3160 ;; Defined at:
  3161 ;;		line 32 in file "I2C.c"
  3162 ;; Parameters:    Size  Location     Type
  3163 ;;		None
  3164 ;; Auto vars:     Size  Location     Type
  3165 ;;		None
  3166 ;; Return value:  Size  Location     Type
  3167 ;;                  1    wreg      void 
  3168 ;; Registers used:
  3169 ;;		wreg, status,2, status,0, pclath, cstack
  3170 ;; Tracked objects:
  3171 ;;		On entry : 0/0
  3172 ;;		On exit  : 0/0
  3173 ;;		Unchanged: 0/0
  3174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3175 ;;      Params:         0       0       0       0       0
  3176 ;;      Locals:         0       0       0       0       0
  3177 ;;      Temps:          0       0       0       0       0
  3178 ;;      Totals:         0       0       0       0       0
  3179 ;;Total ram usage:        0 bytes
  3180 ;; Hardware stack levels used:    1
  3181 ;; Hardware stack levels required when called:    1
  3182 ;; This function calls:
  3183 ;;		_I2C_Master_Wait
  3184 ;; This function is called by:
  3185 ;;		_EEPROM_Read
  3186 ;;		_EEPROM_Write
  3187 ;; This function uses a non-reentrant model
  3188 ;;
  3189                           
  3190                           
  3191                           ;psect for function _I2C_Master_Stop
  3192  0373                     _I2C_Master_Stop:	
  3193                           
  3194                           ;I2C.c: 33: I2C_Master_Wait();
  3195                           
  3196                           ;incstack = 0
  3197                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3198  0373  120A  118A  238A   	fcall	_I2C_Master_Wait
  3199                           
  3200                           ;I2C.c: 34: PEN = 1;
  3201  0376  1683               	bsf	3,5	;RP0=1, select bank1
  3202  0377  1303               	bcf	3,6	;RP1=0, select bank1
  3203  0378  1511               	bsf	17,2	;volatile
  3204  0379  0008               	return
  3205  037A                     __end_of_I2C_Master_Stop:	
  3206                           
  3207                           	psect	text13
  3208  036C                     __ptext13:	
  3209 ;; *************** function _I2C_Master_Start *****************
  3210 ;; Defined at:
  3211 ;;		line 22 in file "I2C.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;		None
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;		None
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  1    wreg      void 
  3218 ;; Registers used:
  3219 ;;		wreg, status,2, status,0, pclath, cstack
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3225 ;;      Params:         0       0       0       0       0
  3226 ;;      Locals:         0       0       0       0       0
  3227 ;;      Temps:          0       0       0       0       0
  3228 ;;      Totals:         0       0       0       0       0
  3229 ;;Total ram usage:        0 bytes
  3230 ;; Hardware stack levels used:    1
  3231 ;; Hardware stack levels required when called:    1
  3232 ;; This function calls:
  3233 ;;		_I2C_Master_Wait
  3234 ;; This function is called by:
  3235 ;;		_EEPROM_Read
  3236 ;;		_EEPROM_Write
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           
  3240                           
  3241                           ;psect for function _I2C_Master_Start
  3242  036C                     _I2C_Master_Start:	
  3243                           
  3244                           ;I2C.c: 23: I2C_Master_Wait();
  3245                           
  3246                           ;incstack = 0
  3247                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3248  036C  120A  118A  238A   	fcall	_I2C_Master_Wait
  3249                           
  3250                           ;I2C.c: 24: SEN = 1;
  3251  036F  1683               	bsf	3,5	;RP0=1, select bank1
  3252  0370  1303               	bcf	3,6	;RP1=0, select bank1
  3253  0371  1411               	bsf	17,0	;volatile
  3254  0372  0008               	return
  3255  0373                     __end_of_I2C_Master_Start:	
  3256                           
  3257                           	psect	text14
  3258  0365                     __ptext14:	
  3259 ;; *************** function _I2C_Master_RepeatedStart *****************
  3260 ;; Defined at:
  3261 ;;		line 27 in file "I2C.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;		None
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;		None
  3266 ;; Return value:  Size  Location     Type
  3267 ;;                  1    wreg      void 
  3268 ;; Registers used:
  3269 ;;		wreg, status,2, status,0, pclath, cstack
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3275 ;;      Params:         0       0       0       0       0
  3276 ;;      Locals:         0       0       0       0       0
  3277 ;;      Temps:          0       0       0       0       0
  3278 ;;      Totals:         0       0       0       0       0
  3279 ;;Total ram usage:        0 bytes
  3280 ;; Hardware stack levels used:    1
  3281 ;; Hardware stack levels required when called:    1
  3282 ;; This function calls:
  3283 ;;		_I2C_Master_Wait
  3284 ;; This function is called by:
  3285 ;;		_EEPROM_Read
  3286 ;; This function uses a non-reentrant model
  3287 ;;
  3288                           
  3289                           
  3290                           ;psect for function _I2C_Master_RepeatedStart
  3291  0365                     _I2C_Master_RepeatedStart:	
  3292                           
  3293                           ;I2C.c: 28: I2C_Master_Wait();
  3294                           
  3295                           ;incstack = 0
  3296                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3297  0365  120A  118A  238A   	fcall	_I2C_Master_Wait
  3298                           
  3299                           ;I2C.c: 29: RSEN = 1;
  3300  0368  1683               	bsf	3,5	;RP0=1, select bank1
  3301  0369  1303               	bcf	3,6	;RP1=0, select bank1
  3302  036A  1491               	bsf	17,1	;volatile
  3303  036B  0008               	return
  3304  036C                     __end_of_I2C_Master_RepeatedStart:	
  3305                           
  3306                           	psect	text15
  3307  0421                     __ptext15:	
  3308 ;; *************** function _I2C_Master_Read *****************
  3309 ;; Defined at:
  3310 ;;		line 42 in file "I2C.c"
  3311 ;; Parameters:    Size  Location     Type
  3312 ;;  a               1    wreg     unsigned char 
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;  a               1    1[COMMON] unsigned char 
  3315 ;;  temp            1    2[COMMON] unsigned char 
  3316 ;; Return value:  Size  Location     Type
  3317 ;;                  1    wreg      unsigned char 
  3318 ;; Registers used:
  3319 ;;		wreg, status,2, status,0, pclath, cstack
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3325 ;;      Params:         0       0       0       0       0
  3326 ;;      Locals:         2       0       0       0       0
  3327 ;;      Temps:          1       0       0       0       0
  3328 ;;      Totals:         3       0       0       0       0
  3329 ;;Total ram usage:        3 bytes
  3330 ;; Hardware stack levels used:    1
  3331 ;; Hardware stack levels required when called:    1
  3332 ;; This function calls:
  3333 ;;		_I2C_Master_Wait
  3334 ;; This function is called by:
  3335 ;;		_EEPROM_Read
  3336 ;; This function uses a non-reentrant model
  3337 ;;
  3338                           
  3339                           
  3340                           ;psect for function _I2C_Master_Read
  3341  0421                     _I2C_Master_Read:	
  3342                           
  3343                           ;incstack = 0
  3344                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3345                           ;I2C_Master_Read@a stored from wreg
  3346  0421  00F1               	movwf	I2C_Master_Read@a
  3347                           
  3348                           ;I2C.c: 43: unsigned char temp;
  3349                           ;I2C.c: 45: I2C_Master_Wait();
  3350  0422  120A  118A  238A  120A  118A  	fcall	_I2C_Master_Wait
  3351                           
  3352                           ;I2C.c: 46: RCEN = 1;
  3353  0427  1683               	bsf	3,5	;RP0=1, select bank1
  3354  0428  1303               	bcf	3,6	;RP1=0, select bank1
  3355  0429  1591               	bsf	17,3	;volatile
  3356                           
  3357                           ;I2C.c: 47: I2C_Master_Wait();
  3358  042A  120A  118A  238A  120A  118A  	fcall	_I2C_Master_Wait
  3359                           
  3360                           ;I2C.c: 48: temp = SSPBUF;
  3361  042F  1283               	bcf	3,5	;RP0=0, select bank0
  3362  0430  1303               	bcf	3,6	;RP1=0, select bank0
  3363  0431  0813               	movf	19,w	;volatile
  3364  0432  00F0               	movwf	??_I2C_Master_Read
  3365  0433  0870               	movf	??_I2C_Master_Read,w
  3366  0434  00F2               	movwf	I2C_Master_Read@temp
  3367                           
  3368                           ;I2C.c: 50: I2C_Master_Wait();
  3369  0435  120A  118A  238A  120A  118A  	fcall	_I2C_Master_Wait
  3370                           
  3371                           ;I2C.c: 51: ACKDT = (a)?0:1;
  3372  043A  0871               	movf	I2C_Master_Read@a,w
  3373  043B  1D03               	btfss	3,2
  3374  043C  2C41               	goto	u1530
  3375  043D  1683               	bsf	3,5	;RP0=1, select bank1
  3376  043E  1303               	bcf	3,6	;RP1=0, select bank1
  3377  043F  1691               	bsf	17,5	;volatile
  3378  0440  2C44               	goto	l2080
  3379  0441                     u1530:	
  3380  0441  1683               	bsf	3,5	;RP0=1, select bank1
  3381  0442  1303               	bcf	3,6	;RP1=0, select bank1
  3382  0443  1291               	bcf	17,5	;volatile
  3383  0444                     l2080:	
  3384                           
  3385                           ;I2C.c: 52: ACKEN = 1;
  3386  0444  1611               	bsf	17,4	;volatile
  3387                           
  3388                           ;I2C.c: 53: return temp;
  3389  0445  0872               	movf	I2C_Master_Read@temp,w
  3390  0446  0008               	return
  3391  0447                     __end_of_I2C_Master_Read:	
  3392                           
  3393                           	psect	text16
  3394  038A                     __ptext16:	
  3395 ;; *************** function _I2C_Master_Wait *****************
  3396 ;; Defined at:
  3397 ;;		line 18 in file "I2C.c"
  3398 ;; Parameters:    Size  Location     Type
  3399 ;;		None
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;		None
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  1    wreg      void 
  3404 ;; Registers used:
  3405 ;;		wreg, status,2
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3411 ;;      Params:         0       0       0       0       0
  3412 ;;      Locals:         0       0       0       0       0
  3413 ;;      Temps:          0       0       0       0       0
  3414 ;;      Totals:         0       0       0       0       0
  3415 ;;Total ram usage:        0 bytes
  3416 ;; Hardware stack levels used:    1
  3417 ;; This function calls:
  3418 ;;		Nothing
  3419 ;; This function is called by:
  3420 ;;		_I2C_Master_Start
  3421 ;;		_I2C_Master_RepeatedStart
  3422 ;;		_I2C_Master_Stop
  3423 ;;		_I2C_Master_Write
  3424 ;;		_I2C_Master_Read
  3425 ;; This function uses a non-reentrant model
  3426 ;;
  3427                           
  3428                           
  3429                           ;psect for function _I2C_Master_Wait
  3430  038A                     _I2C_Master_Wait:	
  3431  038A                     l447:	
  3432                           ;I2C.c: 19: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3433                           
  3434                           ;incstack = 0
  3435                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3436                           
  3437  038A  1683               	bsf	3,5	;RP0=1, select bank1
  3438  038B  1303               	bcf	3,6	;RP1=0, select bank1
  3439  038C  1914               	btfsc	20,2	;volatile
  3440  038D  2B8A               	goto	l447
  3441  038E  0811               	movf	17,w	;volatile
  3442  038F  391F               	andlw	31
  3443  0390  1903               	btfsc	3,2
  3444  0391  0008               	return
  3445  0392  2B8A               	goto	l447
  3446  0393                     __end_of_I2C_Master_Wait:	
  3447  007E                     btemp	set	126	;btemp
  3448  007E                     wtemp0	set	126


Data Sizes:
    Strings     14
    Constant    0
    Data        36
    BSS         166
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     49      73
    BANK1            80      0      80
    BANK3            96      0      66
    BANK2            96      0      32

Pointer List with Targets:

    EEPROM_Read@ReadData	PTR unsigned char  size(1) Largest target is 32
		 -> main@EEPROMData_247(BANK0[32]), 

    EEPROM_Read@EEPROMDataLength	PTR unsigned int  size(1) Largest target is 2
		 -> main@EEPROMDataLength(BANK0[2]), 

    SendPacket@eDataField	PTR unsigned char  size(1) Largest target is 32
		 -> main@EEPROMData_247(BANK0[32]), 

    Packetmaker@eDataField	PTR unsigned char  size(1) Largest target is 32
		 -> main@EEPROMData_247(BANK0[32]), 


Critical Paths under _main in COMMON

    _main->_SendPacket
    _SendPacket->_Packetmaker
    _SendByte->_fcsbit
    _Init_I2C_M->___lldiv
    _EEPROM_Read->_I2C_Master_Read

Critical Paths under _main in BANK0

    _main->_SendPacket

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                42    42      0    2343
                                              9 BANK0     40    40      0
                        _EEPROM_Read
                         _Init_I2C_M
                           _Init_MPU
                        _Init_SERIAL
                         _SendPacket
 ---------------------------------------------------------------------------------
 (1) _SendPacket                                          10    10      0     784
                                             13 COMMON     1     1      0
                                              0 BANK0      9     9      0
                        _Packetmaker
                           _SendByte
 ---------------------------------------------------------------------------------
 (2) _SendByte                                             6     6      0     158
                                              3 COMMON     6     6      0
                             _fcsbit
                            _flipout
 ---------------------------------------------------------------------------------
 (3) _flipout                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _fcsbit                                               3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _Packetmaker                                         13    11      2     415
                                              0 COMMON    13    11      2
 ---------------------------------------------------------------------------------
 (1) _Init_SERIAL                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_MPU                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_I2C_M                                           8     4      4     343
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     268
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read                                         12     8      4    1091
                                              3 COMMON     7     3      4
                                              0 BANK0      5     5      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     499
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      3     3      0      45
                                              0 COMMON     3     3      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_Read
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _Init_I2C_M
     ___lldiv
   _Init_MPU
   _Init_SERIAL
   _SendPacket
     _Packetmaker
     _SendByte
       _fcsbit
       _flipout

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      42       9       68.8%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      20      11       33.3%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     31      49       5       91.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     109      12        0.0%
ABS                  0      0     109       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Wed Nov 08 20:30:53 2017

                                pc 0002                        __CFG_CP$OFF 0000  
                               fsr 0004                                l447 038A  
                              l368 03B2                                _RB0 0030  
                              _RB1 0031                                _RC2 003A  
                              _RC5 003D                                _PEN 048A  
                     __CFG_CPD$OFF 0000                                _SEN 0488  
                              _RX9 00C6                                _TX9 04C6  
                              fsr0 0004                                indf 0000  
                     __CFG_FOSC$HS 0000                       __CFG_LVP$OFF 0000  
                  SendPacket@i_201 0025                    SendPacket@i_202 0027  
                             l2012 063E                               l2004 062C  
                             l2102 051B                               l2014 065C  
                             l2006 063C                               l2032 049A  
                             l2106 0528                               l2046 04BC  
                             l2080 0444                               l2092 04E3  
                             l2094 04F3                               l2732 0776  
                             l2724 0763                               l2734 079D  
                             l2726 0772                               l2670 0575  
                             l2672 0590                               l2664 0571  
                             l2658 055C                               l2860 067E  
                             l1990 05FB                               l1982 05EC  
                             l1976 05CE                               l2864 0682  
                             l2866 069D                               l1996 061A  
                             l2878 0702                               STR_1 0010  
                             STR_7 0009                               _BRGH 04C2  
                             _CREN 00C4                               u1530 0441  
                             u1605 051C                               u1455 0644  
                             u2345 057B                               u1565 04E7  
                             u2375 0459                               u2607 06A5  
                             u1585 04F5                               u2617 06B3  
                             u2395 0783                               u1595 050A  
                             u2627 06C5                               u2637 06E8  
                             u2647 06FC                               u2657 070A  
                             u2667 04B2                               u2677 04C0  
                             u2687 07B9                               _RCIE 0465  
                             _RCEN 048B                               _RCIF 0065  
                             _SPEN 00C7                               _RSEN 0489  
                             _SREN 00C5                               _TXIE 0464  
                             _TXEN 04C5                               _TXIF 0064  
                             _SYNC 04C4                       __CFG_WRT$OFF 0000  
 __end_of_I2C_Master_RepeatedStart 036C                               _main 0665  
                    ??_Init_SERIAL 0070                               btemp 007E  
                    ??_Packetmaker 0072                       getbit@oldbit 0059  
                      Init_I2C_M@c 0020                               start 0000  
                    __CFG_IESO$OFF 0000                      __CFG_MCLRE$ON 0000  
                 ?_I2C_Master_Read 0070                   ?_I2C_Master_Wait 0070  
                 ?_I2C_Master_Stop 0070                              ?_main 0070  
                            _ACKEN 048C                              _ACKDT 048D  
                            STR_13 0010                              STR_14 0009  
                    __CFG_WDTE$OFF 0000                              _ANSEL 0188  
                  __end_of___lldiv 0531                              _RCREG 001A  
                            _SPBRG 0099                              _PORTA 0005  
                            _PORTB 0006                              _PORTC 0007  
                            _PORTE 0009                              _TRISA 0085  
                            _TRISB 0086                              _TRISC 0087  
                            _TRISE 0089                              _TXREG 0019  
                    __CFG_PWRTE$ON 0000                     __CFG_FCMEN$OFF 0000  
                            _dData 0110                    __end_of_flipout 03B6  
                            _eflag 0057                     __CFG_BOREN$OFF 0000  
                            pclath 000A                              status 0003  
                            wtemp0 007E                         _Init_I2C_M 0447  
                       SendByte@bt 0078            EEPROM_Read@high_address 0073  
             __size_of_EEPROM_Read 00B0                    __initialization 07C1  
                     __end_of_main 0711                __end_of_Init_SERIAL 03CF  
                 __end_of_Init_MPU 03E9                __end_of_Packetmaker 0665  
                           ??_main 0029                   __end_of_SendByte 04D3  
                ?_I2C_Master_Start 0070                  ?_I2C_Master_Write 0070  
            Packetmaker@eDataField 0074                 ??_I2C_Master_Start 0070  
                       _SendPacket 0531                 ??_I2C_Master_Write 0072  
                           _ANSELH 0189                       Packetmaker@i 0079  
                           _SSPADD 0093                             _STATUS 0003  
                           _SSPCON 0014                             _SSPBUF 0013  
         _I2C_Master_RepeatedStart 0365                             _dfcshi 0062  
                        ??___lldiv 0078                             _dfcslo 0061  
                           _efcshi 005F                             _efcslo 0060  
                           _fcsbit 03E9                             _estuff 0053  
                       _dPacketnum 005B                          ??_flipout 0070  
           EEPROM_Read@low_address 0074            __end_of__initialization 07FC  
                      SendPacket@i 0023                        ?_Init_I2C_M 0020  
                      _Init_SERIAL 03B6                 Packetmaker@Datanum 0077  
                      _Packetmaker 05C4                     __pcstackCOMMON 0070  
                     __pidataBANK0 035F                       __pidataBANK1 0403  
                      ?_SendPacket 0070                         __pbssBANK0 0051  
                       __pbssBANK1 00A0                         __pbssBANK2 0110  
                       __pbssBANK3 0190                          ?_Init_MPU 0070  
                        ?_SendByte 0070                         __pmaintext 0665  
                       _ebitstatus 0051                            ?_fcsbit 0070  
             SendPacket@eDataField 0022                __size_of_Init_I2C_M 0034  
                          _SSPCON2 0091                            _SSPSTAT 0094  
                       __stringtab 0003                         ??_Init_MPU 0070  
                       ??_SendByte 0073                            _dPacket 00A0  
                          _ePacket 0190                            ___lldiv 04D3  
              __size_of_SendPacket 0093                    __size_of_fcsbit 001A  
                          __ptext1 0531                            __ptext2 047B  
                          __ptext3 03A4                            __ptext4 03E9  
                          __ptext5 05C4                            __ptext6 03B6  
                          __ptext7 03CF                            __ptext8 0447  
                          __ptext9 04D3                            _flipout 03A4  
         __size_of_I2C_Master_Read 0026           __size_of_I2C_Master_Wait 0009  
         __size_of_I2C_Master_Stop 0007                            clrloop0 0383  
             end_of_initialization 07FC                          _FMRX_Nref 0063  
                        _FMRX_Nprg 00D2         ??_I2C_Master_RepeatedStart 0070  
                        _FMTX_Nref 0067                          _FMTX_Nprg 00E6  
                    ??_EEPROM_Read 0077                          _CWTX_Nref 0065  
                        _CWTX_Nprg 00DC          __size_of_I2C_Master_Start 0007  
        __size_of_I2C_Master_Write 0008                    ___lldiv@divisor 0070  
                  ___lldiv@counter 007D                   I2C_Master_Read@a 0071  
                     SendByte@byte 0077                       ??_Init_I2C_M 0024  
                     ?_Init_SERIAL 0070                       ?_Packetmaker 0070  
        EEPROM_Read@EEPROM_address 0020                __end_of_EEPROM_Read 07C1  
                   __end_of_fcsbit 0403                start_initialization 07C1  
                        SendByte@i 0075                 __end_of_Init_I2C_M 047B  
                     ??_SendPacket 007D                  ??_I2C_Master_Read 0070  
                ??_I2C_Master_Wait 0070                  ??_I2C_Master_Stop 0070  
                __size_of_Init_MPU 001A             EEPROM_Read@ReadAddress 0021  
                __size_of_SendByte 0058                         init_fetch0 0393  
                         ??_fcsbit 0070                        __pdataBANK0 0063  
                      __pdataBANK1 00D2                 __end_of_SendPacket 05C4  
             main@EEPROMDataLength 004F                          ___latbits 0002  
                    __pcstackBANK0 0020                 main@EEPROMData_247 002D  
                      _EEPROM_Read 0711                SendPacket@Packetnum 0020  
                 _I2C_Master_Start 036C                   _I2C_Master_Write 037A  
                         ?___lldiv 0070                          __pstrings 0003  
                         ?_flipout 0070                          clear_ram0 0382  
                        _rcv_state 005D               __size_of_Init_SERIAL 0019  
             __size_of_Packetmaker 00A1                       EEPROM_Read@i 0022  
                      __stringbase 0008                          main@dData 002D  
              I2C_Master_Read@temp 0072                           _Init_MPU 03CF  
                         _SendByte 047B  __size_of_I2C_Master_RepeatedStart 0007  
        ?_I2C_Master_RepeatedStart 0070                   __size_of___lldiv 005E  
                 Packetmaker@i_193 007B                   Packetmaker@i_196 0075  
               __end_of__stringtab 0009                EEPROM_Read@ReadData 0075  
                       _EEPROMData 01C2                    _I2C_Master_Read 0421  
                 __size_of_flipout 0012                    _I2C_Master_Wait 038A  
                  _I2C_Master_Stop 0373                           _efcsflag 0055  
            main@write_data_length 004D                           __ptext10 0711  
                         __ptext11 037A                           __ptext12 0373  
                         __ptext13 036C                           __ptext14 0365  
                         __ptext15 0421                           __ptext16 038A  
                __CFG_BOR4V$BOR40V 0000                      __size_of_main 00AC  
      EEPROM_Read@EEPROMDataLength 0076           __end_of_I2C_Master_Start 0373  
         __end_of_I2C_Master_Write 0382                 EEPROM_Read@Address 0024  
                         init_ram0 0397                       ?_EEPROM_Read 0073  
                 ___lldiv@dividend 0074                          stringcode 0003  
          __end_of_I2C_Master_Read 0447            __end_of_I2C_Master_Wait 0393  
          __end_of_I2C_Master_Stop 037A                        fcsbit@tbyte 0072  
                 ___lldiv@quotient 0079                  I2C_Master_Write@d 0070  
                         stringdir 0003                           stringtab 0003  
