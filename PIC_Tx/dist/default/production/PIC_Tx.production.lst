

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Feb 23 15:38:17 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 1.45
    42                           ; Generated 16/11/2017 GMT
    43                           ; 
    44                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F886 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  0087                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  008F                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  0105                     	;# 
   137  0107                     	;# 
   138  0108                     	;# 
   139  0109                     	;# 
   140  010C                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  0185                     	;# 
   146  0187                     	;# 
   147  0188                     	;# 
   148  0189                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151  0000                     	;# 
   152  0001                     	;# 
   153  0002                     	;# 
   154  0003                     	;# 
   155  0004                     	;# 
   156  0005                     	;# 
   157  0006                     	;# 
   158  0007                     	;# 
   159  0009                     	;# 
   160  000A                     	;# 
   161  000B                     	;# 
   162  000C                     	;# 
   163  000D                     	;# 
   164  000E                     	;# 
   165  000E                     	;# 
   166  000F                     	;# 
   167  0010                     	;# 
   168  0011                     	;# 
   169  0012                     	;# 
   170  0013                     	;# 
   171  0014                     	;# 
   172  0015                     	;# 
   173  0015                     	;# 
   174  0016                     	;# 
   175  0017                     	;# 
   176  0018                     	;# 
   177  0019                     	;# 
   178  001A                     	;# 
   179  001B                     	;# 
   180  001B                     	;# 
   181  001C                     	;# 
   182  001D                     	;# 
   183  001E                     	;# 
   184  001F                     	;# 
   185  0081                     	;# 
   186  0085                     	;# 
   187  0086                     	;# 
   188  0087                     	;# 
   189  0089                     	;# 
   190  008C                     	;# 
   191  008D                     	;# 
   192  008E                     	;# 
   193  008F                     	;# 
   194  0090                     	;# 
   195  0091                     	;# 
   196  0092                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0094                     	;# 
   201  0095                     	;# 
   202  0096                     	;# 
   203  0097                     	;# 
   204  0098                     	;# 
   205  0099                     	;# 
   206  009A                     	;# 
   207  009B                     	;# 
   208  009C                     	;# 
   209  009D                     	;# 
   210  009E                     	;# 
   211  009F                     	;# 
   212  0105                     	;# 
   213  0107                     	;# 
   214  0108                     	;# 
   215  0109                     	;# 
   216  010C                     	;# 
   217  010C                     	;# 
   218  010D                     	;# 
   219  010E                     	;# 
   220  010F                     	;# 
   221  0185                     	;# 
   222  0187                     	;# 
   223  0188                     	;# 
   224  0189                     	;# 
   225  018C                     	;# 
   226  018D                     	;# 
   227  0000                     	;# 
   228  0001                     	;# 
   229  0002                     	;# 
   230  0003                     	;# 
   231  0004                     	;# 
   232  0005                     	;# 
   233  0006                     	;# 
   234  0007                     	;# 
   235  0008                     	;# 
   236  0009                     	;# 
   237  000A                     	;# 
   238  000B                     	;# 
   239  000C                     	;# 
   240  000D                     	;# 
   241  000E                     	;# 
   242  000E                     	;# 
   243  000F                     	;# 
   244  0010                     	;# 
   245  0011                     	;# 
   246  0012                     	;# 
   247  0013                     	;# 
   248  0014                     	;# 
   249  0015                     	;# 
   250  0015                     	;# 
   251  0016                     	;# 
   252  0017                     	;# 
   253  0018                     	;# 
   254  0019                     	;# 
   255  001A                     	;# 
   256  001B                     	;# 
   257  001B                     	;# 
   258  001C                     	;# 
   259  001D                     	;# 
   260  001E                     	;# 
   261  001F                     	;# 
   262  0081                     	;# 
   263  0085                     	;# 
   264  0086                     	;# 
   265  0087                     	;# 
   266  0088                     	;# 
   267  0089                     	;# 
   268  008C                     	;# 
   269  008D                     	;# 
   270  008E                     	;# 
   271  008F                     	;# 
   272  0090                     	;# 
   273  0091                     	;# 
   274  0092                     	;# 
   275  0093                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0094                     	;# 
   279  0095                     	;# 
   280  0096                     	;# 
   281  0097                     	;# 
   282  0098                     	;# 
   283  0099                     	;# 
   284  009A                     	;# 
   285  009B                     	;# 
   286  009C                     	;# 
   287  009D                     	;# 
   288  009E                     	;# 
   289  009F                     	;# 
   290  0105                     	;# 
   291  0107                     	;# 
   292  0108                     	;# 
   293  0109                     	;# 
   294  010C                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  0185                     	;# 
   300  0187                     	;# 
   301  0188                     	;# 
   302  0189                     	;# 
   303  018C                     	;# 
   304  018D                     	;# 
   305  0000                     	;# 
   306  0001                     	;# 
   307  0002                     	;# 
   308  0003                     	;# 
   309  0004                     	;# 
   310  0005                     	;# 
   311  0006                     	;# 
   312  0007                     	;# 
   313  0009                     	;# 
   314  000A                     	;# 
   315  000B                     	;# 
   316  000C                     	;# 
   317  000D                     	;# 
   318  000E                     	;# 
   319  000E                     	;# 
   320  000F                     	;# 
   321  0010                     	;# 
   322  0011                     	;# 
   323  0012                     	;# 
   324  0013                     	;# 
   325  0014                     	;# 
   326  0015                     	;# 
   327  0015                     	;# 
   328  0016                     	;# 
   329  0017                     	;# 
   330  0018                     	;# 
   331  0019                     	;# 
   332  001A                     	;# 
   333  001B                     	;# 
   334  001B                     	;# 
   335  001C                     	;# 
   336  001D                     	;# 
   337  001E                     	;# 
   338  001F                     	;# 
   339  0081                     	;# 
   340  0085                     	;# 
   341  0086                     	;# 
   342  0087                     	;# 
   343  0089                     	;# 
   344  008C                     	;# 
   345  008D                     	;# 
   346  008E                     	;# 
   347  008F                     	;# 
   348  0090                     	;# 
   349  0091                     	;# 
   350  0092                     	;# 
   351  0093                     	;# 
   352  0093                     	;# 
   353  0093                     	;# 
   354  0094                     	;# 
   355  0095                     	;# 
   356  0096                     	;# 
   357  0097                     	;# 
   358  0098                     	;# 
   359  0099                     	;# 
   360  009A                     	;# 
   361  009B                     	;# 
   362  009C                     	;# 
   363  009D                     	;# 
   364  009E                     	;# 
   365  009F                     	;# 
   366  0105                     	;# 
   367  0107                     	;# 
   368  0108                     	;# 
   369  0109                     	;# 
   370  010C                     	;# 
   371  010C                     	;# 
   372  010D                     	;# 
   373  010E                     	;# 
   374  010F                     	;# 
   375  0185                     	;# 
   376  0187                     	;# 
   377  0188                     	;# 
   378  0189                     	;# 
   379  018C                     	;# 
   380  018D                     	;# 
   381  0000                     	;# 
   382  0001                     	;# 
   383  0002                     	;# 
   384  0003                     	;# 
   385  0004                     	;# 
   386  0005                     	;# 
   387  0006                     	;# 
   388  0007                     	;# 
   389  0008                     	;# 
   390  0009                     	;# 
   391  000A                     	;# 
   392  000B                     	;# 
   393  000C                     	;# 
   394  000D                     	;# 
   395  000E                     	;# 
   396  000E                     	;# 
   397  000F                     	;# 
   398  0010                     	;# 
   399  0011                     	;# 
   400  0012                     	;# 
   401  0013                     	;# 
   402  0014                     	;# 
   403  0015                     	;# 
   404  0015                     	;# 
   405  0016                     	;# 
   406  0017                     	;# 
   407  0018                     	;# 
   408  0019                     	;# 
   409  001A                     	;# 
   410  001B                     	;# 
   411  001B                     	;# 
   412  001C                     	;# 
   413  001D                     	;# 
   414  001E                     	;# 
   415  001F                     	;# 
   416  0081                     	;# 
   417  0085                     	;# 
   418  0086                     	;# 
   419  0087                     	;# 
   420  0088                     	;# 
   421  0089                     	;# 
   422  008C                     	;# 
   423  008D                     	;# 
   424  008E                     	;# 
   425  008F                     	;# 
   426  0090                     	;# 
   427  0091                     	;# 
   428  0092                     	;# 
   429  0093                     	;# 
   430  0093                     	;# 
   431  0093                     	;# 
   432  0094                     	;# 
   433  0095                     	;# 
   434  0096                     	;# 
   435  0097                     	;# 
   436  0098                     	;# 
   437  0099                     	;# 
   438  009A                     	;# 
   439  009B                     	;# 
   440  009C                     	;# 
   441  009D                     	;# 
   442  009E                     	;# 
   443  009F                     	;# 
   444  0105                     	;# 
   445  0107                     	;# 
   446  0108                     	;# 
   447  0109                     	;# 
   448  010C                     	;# 
   449  010C                     	;# 
   450  010D                     	;# 
   451  010E                     	;# 
   452  010F                     	;# 
   453  0185                     	;# 
   454  0187                     	;# 
   455  0188                     	;# 
   456  0189                     	;# 
   457  018C                     	;# 
   458  018D                     	;# 
   459  0000                     	;# 
   460  0001                     	;# 
   461  0002                     	;# 
   462  0003                     	;# 
   463  0004                     	;# 
   464  0005                     	;# 
   465  0006                     	;# 
   466  0007                     	;# 
   467  0009                     	;# 
   468  000A                     	;# 
   469  000B                     	;# 
   470  000C                     	;# 
   471  000D                     	;# 
   472  000E                     	;# 
   473  000E                     	;# 
   474  000F                     	;# 
   475  0010                     	;# 
   476  0011                     	;# 
   477  0012                     	;# 
   478  0013                     	;# 
   479  0014                     	;# 
   480  0015                     	;# 
   481  0015                     	;# 
   482  0016                     	;# 
   483  0017                     	;# 
   484  0018                     	;# 
   485  0019                     	;# 
   486  001A                     	;# 
   487  001B                     	;# 
   488  001B                     	;# 
   489  001C                     	;# 
   490  001D                     	;# 
   491  001E                     	;# 
   492  001F                     	;# 
   493  0081                     	;# 
   494  0085                     	;# 
   495  0086                     	;# 
   496  0087                     	;# 
   497  0089                     	;# 
   498  008C                     	;# 
   499  008D                     	;# 
   500  008E                     	;# 
   501  008F                     	;# 
   502  0090                     	;# 
   503  0091                     	;# 
   504  0092                     	;# 
   505  0093                     	;# 
   506  0093                     	;# 
   507  0093                     	;# 
   508  0094                     	;# 
   509  0095                     	;# 
   510  0096                     	;# 
   511  0097                     	;# 
   512  0098                     	;# 
   513  0099                     	;# 
   514  009A                     	;# 
   515  009B                     	;# 
   516  009C                     	;# 
   517  009D                     	;# 
   518  009E                     	;# 
   519  009F                     	;# 
   520  0105                     	;# 
   521  0107                     	;# 
   522  0108                     	;# 
   523  0109                     	;# 
   524  010C                     	;# 
   525  010C                     	;# 
   526  010D                     	;# 
   527  010E                     	;# 
   528  010F                     	;# 
   529  0185                     	;# 
   530  0187                     	;# 
   531  0188                     	;# 
   532  0189                     	;# 
   533  018C                     	;# 
   534  018D                     	;# 
   535  0000                     	;# 
   536  0001                     	;# 
   537  0002                     	;# 
   538  0003                     	;# 
   539  0004                     	;# 
   540  0005                     	;# 
   541  0006                     	;# 
   542  0007                     	;# 
   543  0008                     	;# 
   544  0009                     	;# 
   545  000A                     	;# 
   546  000B                     	;# 
   547  000C                     	;# 
   548  000D                     	;# 
   549  000E                     	;# 
   550  000E                     	;# 
   551  000F                     	;# 
   552  0010                     	;# 
   553  0011                     	;# 
   554  0012                     	;# 
   555  0013                     	;# 
   556  0014                     	;# 
   557  0015                     	;# 
   558  0015                     	;# 
   559  0016                     	;# 
   560  0017                     	;# 
   561  0018                     	;# 
   562  0019                     	;# 
   563  001A                     	;# 
   564  001B                     	;# 
   565  001B                     	;# 
   566  001C                     	;# 
   567  001D                     	;# 
   568  001E                     	;# 
   569  001F                     	;# 
   570  0081                     	;# 
   571  0085                     	;# 
   572  0086                     	;# 
   573  0087                     	;# 
   574  0088                     	;# 
   575  0089                     	;# 
   576  008C                     	;# 
   577  008D                     	;# 
   578  008E                     	;# 
   579  008F                     	;# 
   580  0090                     	;# 
   581  0091                     	;# 
   582  0092                     	;# 
   583  0093                     	;# 
   584  0093                     	;# 
   585  0093                     	;# 
   586  0094                     	;# 
   587  0095                     	;# 
   588  0096                     	;# 
   589  0097                     	;# 
   590  0098                     	;# 
   591  0099                     	;# 
   592  009A                     	;# 
   593  009B                     	;# 
   594  009C                     	;# 
   595  009D                     	;# 
   596  009E                     	;# 
   597  009F                     	;# 
   598  0105                     	;# 
   599  0107                     	;# 
   600  0108                     	;# 
   601  0109                     	;# 
   602  010C                     	;# 
   603  010C                     	;# 
   604  010D                     	;# 
   605  010E                     	;# 
   606  010F                     	;# 
   607  0185                     	;# 
   608  0187                     	;# 
   609  0188                     	;# 
   610  0189                     	;# 
   611  018C                     	;# 
   612  018D                     	;# 
   613  0000                     	;# 
   614  0001                     	;# 
   615  0002                     	;# 
   616  0003                     	;# 
   617  0004                     	;# 
   618  0005                     	;# 
   619  0006                     	;# 
   620  0007                     	;# 
   621  0009                     	;# 
   622  000A                     	;# 
   623  000B                     	;# 
   624  000C                     	;# 
   625  000D                     	;# 
   626  000E                     	;# 
   627  000E                     	;# 
   628  000F                     	;# 
   629  0010                     	;# 
   630  0011                     	;# 
   631  0012                     	;# 
   632  0013                     	;# 
   633  0014                     	;# 
   634  0015                     	;# 
   635  0015                     	;# 
   636  0016                     	;# 
   637  0017                     	;# 
   638  0018                     	;# 
   639  0019                     	;# 
   640  001A                     	;# 
   641  001B                     	;# 
   642  001B                     	;# 
   643  001C                     	;# 
   644  001D                     	;# 
   645  001E                     	;# 
   646  001F                     	;# 
   647  0081                     	;# 
   648  0085                     	;# 
   649  0086                     	;# 
   650  0087                     	;# 
   651  0089                     	;# 
   652  008C                     	;# 
   653  008D                     	;# 
   654  008E                     	;# 
   655  008F                     	;# 
   656  0090                     	;# 
   657  0091                     	;# 
   658  0092                     	;# 
   659  0093                     	;# 
   660  0093                     	;# 
   661  0093                     	;# 
   662  0094                     	;# 
   663  0095                     	;# 
   664  0096                     	;# 
   665  0097                     	;# 
   666  0098                     	;# 
   667  0099                     	;# 
   668  009A                     	;# 
   669  009B                     	;# 
   670  009C                     	;# 
   671  009D                     	;# 
   672  009E                     	;# 
   673  009F                     	;# 
   674  0105                     	;# 
   675  0107                     	;# 
   676  0108                     	;# 
   677  0109                     	;# 
   678  010C                     	;# 
   679  010C                     	;# 
   680  010D                     	;# 
   681  010E                     	;# 
   682  010F                     	;# 
   683  0185                     	;# 
   684  0187                     	;# 
   685  0188                     	;# 
   686  0189                     	;# 
   687  018C                     	;# 
   688  018D                     	;# 
   689  0000                     	;# 
   690  0001                     	;# 
   691  0002                     	;# 
   692  0003                     	;# 
   693  0004                     	;# 
   694  0005                     	;# 
   695  0006                     	;# 
   696  0007                     	;# 
   697  0008                     	;# 
   698  0009                     	;# 
   699  000A                     	;# 
   700  000B                     	;# 
   701  000C                     	;# 
   702  000D                     	;# 
   703  000E                     	;# 
   704  000E                     	;# 
   705  000F                     	;# 
   706  0010                     	;# 
   707  0011                     	;# 
   708  0012                     	;# 
   709  0013                     	;# 
   710  0014                     	;# 
   711  0015                     	;# 
   712  0015                     	;# 
   713  0016                     	;# 
   714  0017                     	;# 
   715  0018                     	;# 
   716  0019                     	;# 
   717  001A                     	;# 
   718  001B                     	;# 
   719  001B                     	;# 
   720  001C                     	;# 
   721  001D                     	;# 
   722  001E                     	;# 
   723  001F                     	;# 
   724  0081                     	;# 
   725  0085                     	;# 
   726  0086                     	;# 
   727  0087                     	;# 
   728  0088                     	;# 
   729  0089                     	;# 
   730  008C                     	;# 
   731  008D                     	;# 
   732  008E                     	;# 
   733  008F                     	;# 
   734  0090                     	;# 
   735  0091                     	;# 
   736  0092                     	;# 
   737  0093                     	;# 
   738  0093                     	;# 
   739  0093                     	;# 
   740  0094                     	;# 
   741  0095                     	;# 
   742  0096                     	;# 
   743  0097                     	;# 
   744  0098                     	;# 
   745  0099                     	;# 
   746  009A                     	;# 
   747  009B                     	;# 
   748  009C                     	;# 
   749  009D                     	;# 
   750  009E                     	;# 
   751  009F                     	;# 
   752  0105                     	;# 
   753  0107                     	;# 
   754  0108                     	;# 
   755  0109                     	;# 
   756  010C                     	;# 
   757  010C                     	;# 
   758  010D                     	;# 
   759  010E                     	;# 
   760  010F                     	;# 
   761  0185                     	;# 
   762  0187                     	;# 
   763  0188                     	;# 
   764  0189                     	;# 
   765  018C                     	;# 
   766  018D                     	;# 
   767  0000                     	;# 
   768  0001                     	;# 
   769  0002                     	;# 
   770  0003                     	;# 
   771  0004                     	;# 
   772  0005                     	;# 
   773  0006                     	;# 
   774  0007                     	;# 
   775  0009                     	;# 
   776  000A                     	;# 
   777  000B                     	;# 
   778  000C                     	;# 
   779  000D                     	;# 
   780  000E                     	;# 
   781  000E                     	;# 
   782  000F                     	;# 
   783  0010                     	;# 
   784  0011                     	;# 
   785  0012                     	;# 
   786  0013                     	;# 
   787  0014                     	;# 
   788  0015                     	;# 
   789  0015                     	;# 
   790  0016                     	;# 
   791  0017                     	;# 
   792  0018                     	;# 
   793  0019                     	;# 
   794  001A                     	;# 
   795  001B                     	;# 
   796  001B                     	;# 
   797  001C                     	;# 
   798  001D                     	;# 
   799  001E                     	;# 
   800  001F                     	;# 
   801  0081                     	;# 
   802  0085                     	;# 
   803  0086                     	;# 
   804  0087                     	;# 
   805  0089                     	;# 
   806  008C                     	;# 
   807  008D                     	;# 
   808  008E                     	;# 
   809  008F                     	;# 
   810  0090                     	;# 
   811  0091                     	;# 
   812  0092                     	;# 
   813  0093                     	;# 
   814  0093                     	;# 
   815  0093                     	;# 
   816  0094                     	;# 
   817  0095                     	;# 
   818  0096                     	;# 
   819  0097                     	;# 
   820  0098                     	;# 
   821  0099                     	;# 
   822  009A                     	;# 
   823  009B                     	;# 
   824  009C                     	;# 
   825  009D                     	;# 
   826  009E                     	;# 
   827  009F                     	;# 
   828  0105                     	;# 
   829  0107                     	;# 
   830  0108                     	;# 
   831  0109                     	;# 
   832  010C                     	;# 
   833  010C                     	;# 
   834  010D                     	;# 
   835  010E                     	;# 
   836  010F                     	;# 
   837  0185                     	;# 
   838  0187                     	;# 
   839  0188                     	;# 
   840  0189                     	;# 
   841  018C                     	;# 
   842  018D                     	;# 
   843  0000                     	;# 
   844  0001                     	;# 
   845  0002                     	;# 
   846  0003                     	;# 
   847  0004                     	;# 
   848  0005                     	;# 
   849  0006                     	;# 
   850  0007                     	;# 
   851  0009                     	;# 
   852  000A                     	;# 
   853  000B                     	;# 
   854  000C                     	;# 
   855  000D                     	;# 
   856  000E                     	;# 
   857  000E                     	;# 
   858  000F                     	;# 
   859  0010                     	;# 
   860  0011                     	;# 
   861  0012                     	;# 
   862  0013                     	;# 
   863  0014                     	;# 
   864  0015                     	;# 
   865  0015                     	;# 
   866  0016                     	;# 
   867  0017                     	;# 
   868  0018                     	;# 
   869  0019                     	;# 
   870  001A                     	;# 
   871  001B                     	;# 
   872  001B                     	;# 
   873  001C                     	;# 
   874  001D                     	;# 
   875  001E                     	;# 
   876  001F                     	;# 
   877  0081                     	;# 
   878  0085                     	;# 
   879  0086                     	;# 
   880  0087                     	;# 
   881  0089                     	;# 
   882  008C                     	;# 
   883  008D                     	;# 
   884  008E                     	;# 
   885  008F                     	;# 
   886  0090                     	;# 
   887  0091                     	;# 
   888  0092                     	;# 
   889  0093                     	;# 
   890  0093                     	;# 
   891  0093                     	;# 
   892  0094                     	;# 
   893  0095                     	;# 
   894  0096                     	;# 
   895  0097                     	;# 
   896  0098                     	;# 
   897  0099                     	;# 
   898  009A                     	;# 
   899  009B                     	;# 
   900  009C                     	;# 
   901  009D                     	;# 
   902  009E                     	;# 
   903  009F                     	;# 
   904  0105                     	;# 
   905  0107                     	;# 
   906  0108                     	;# 
   907  0109                     	;# 
   908  010C                     	;# 
   909  010C                     	;# 
   910  010D                     	;# 
   911  010E                     	;# 
   912  010F                     	;# 
   913  0185                     	;# 
   914  0187                     	;# 
   915  0188                     	;# 
   916  0189                     	;# 
   917  018C                     	;# 
   918  018D                     	;# 
   919                           
   920                           	psect	idataBANK0
   921  071F                     __pidataBANK0:	
   922                           
   923                           ;initializer for _FMTX_Nref
   924  071F  3400               	retlw	0
   925  0720  340A               	retlw	10
   926                           
   927                           	psect	idataBANK1
   928  0623                     __pidataBANK1:	
   929                           
   930                           ;initializer for _FMRX_Nprg
   931  0623  3402               	retlw	2
   932  0624  3400               	retlw	0
   933  0625  3404               	retlw	4
   934  0626  3400               	retlw	0
   935  0627  3408               	retlw	8
   936  0628  3400               	retlw	0
   937  0629  3408               	retlw	8
   938  062A  3400               	retlw	0
   939  062B  3407               	retlw	7
   940  062C  3400               	retlw	0
   941                           
   942                           ;initializer for _CWTX_Nprg
   943  062D  3400               	retlw	0
   944  062E  3400               	retlw	0
   945  062F  3401               	retlw	1
   946  0630  3400               	retlw	0
   947  0631  3407               	retlw	7
   948  0632  3400               	retlw	0
   949  0633  3404               	retlw	4
   950  0634  3400               	retlw	0
   951  0635  3407               	retlw	7
   952  0636  3400               	retlw	0
   953                           
   954                           ;initializer for _FMTX_Nprg
   955  0637  3408               	retlw	8
   956  0638  3400               	retlw	0
   957  0639  3407               	retlw	7
   958  063A  3400               	retlw	0
   959  063B  3403               	retlw	3
   960  063C  3400               	retlw	0
   961  063D  3400               	retlw	0
   962  063E  3400               	retlw	0
   963  063F  3400               	retlw	0
   964  0640  3400               	retlw	0
   965                           
   966                           ;initializer for _FMRX_Nref
   967  0641  3400               	retlw	0
   968  0642  340A               	retlw	10
   969                           
   970                           ;initializer for _CWTX_Nref
   971  0643  34A0               	retlw	160
   972  0644  3400               	retlw	0
   973  000E                     _TMR1	set	14
   974  0010                     _T1CONbits	set	16
   975  000B                     _INTCONbits	set	11
   976  0013                     _SSPBUF	set	19
   977  0014                     _SSPCON	set	20
   978  0003                     _STATUS	set	3
   979  0009                     _PORTE	set	9
   980  0007                     _PORTC	set	7
   981  0006                     _PORTB	set	6
   982  0005                     _PORTA	set	5
   983  000C                     _PIR1bits	set	12
   984  0019                     _TXREG	set	25
   985  001A                     _RCREG	set	26
   986  003A                     _RC2	set	58
   987  003D                     _RC5	set	61
   988  0033                     _RB3	set	51
   989  0038                     _RC0	set	56
   990  0031                     _RB1	set	49
   991  0064                     _TXIF	set	100
   992  00C1                     _OERR	set	193
   993  00C2                     _FERR	set	194
   994  00C6                     _RX9	set	198
   995  0065                     _RCIF	set	101
   996  00C5                     _SREN	set	197
   997  00C4                     _CREN	set	196
   998  00C7                     _SPEN	set	199
   999  005E                     _PEIE	set	94
  1000  005F                     _GIE	set	95
  1001  008C                     _PIE1bits	set	140
  1002  0081                     _OPTION_REGbits	set	129
  1003  0094                     _SSPSTAT	set	148
  1004  0093                     _SSPADD	set	147
  1005  0091                     _SSPCON2	set	145
  1006  0089                     _TRISE	set	137
  1007  0087                     _TRISC	set	135
  1008  0086                     _TRISB	set	134
  1009  0085                     _TRISA	set	133
  1010  0099                     _SPBRG	set	153
  1011  048C                     _ACKEN	set	1164
  1012  048D                     _ACKDT	set	1165
  1013  048B                     _RCEN	set	1163
  1014  048A                     _PEN	set	1162
  1015  0489                     _RSEN	set	1161
  1016  0488                     _SEN	set	1160
  1017  04C5                     _TXEN	set	1221
  1018  04C6                     _TX9	set	1222
  1019  0465                     _RCIE	set	1125
  1020  0464                     _TXIE	set	1124
  1021  04C4                     _SYNC	set	1220
  1022  04C2                     _BRGH	set	1218
  1023  0189                     _ANSELH	set	393
  1024  0188                     _ANSEL	set	392
  1025                           
  1026                           	psect	strings
  1027  06AB                     __pstrings:	
  1028  06AB                     stringtab:	
  1029  06AB                     __stringtab:	
  1030  06AB                     stringcode:	
  1031                           ;	String table - string pointers are 1 byte each
  1032                           
  1033  06AB                     stringdir:	
  1034  06AB  3006               	movlw	high stringdir
  1035  06AC  008A               	movwf	10
  1036  06AD  0804               	movf	4,w
  1037  06AE  0A84               	incf	4,f
  1038  06AF  0782               	addwf	2,f
  1039  06B0                     __stringbase:	
  1040  06B0  3400               	retlw	0
  1041  06B1                     __end_of__stringtab:	
  1042  06B1                     STR_1:	
  1043  06B1  344A               	retlw	74	;'J'
  1044  06B2  3451               	retlw	81	;'Q'
  1045  06B3  3431               	retlw	49	;'1'
  1046  06B4  345A               	retlw	90	;'Z'
  1047  06B5  3448               	retlw	72	;'H'
  1048  06B6  3458               	retlw	88	;'X'
  1049  06B7  3400               	retlw	0
  1050  06B8                     STR_2:	
  1051  06B8  344A               	retlw	74	;'J'
  1052  06B9  3451               	retlw	81	;'Q'
  1053  06BA  3431               	retlw	49	;'1'
  1054  06BB  3459               	retlw	89	;'Y'
  1055  06BC  3443               	retlw	67	;'C'
  1056  06BD  345A               	retlw	90	;'Z'
  1057  06BE  3400               	retlw	0
  1058                           
  1059                           ; #config settings
  1060  0000                     
  1061                           	psect	cinit
  1062  0015                     start_initialization:	
  1063  0015                     __initialization:	
  1064                           
  1065                           ; Initialize objects allocated to BANK1
  1066  0015  1383               	bcf	3,7	;select IRP bank0
  1067  0016  30C2               	movlw	low (__pdataBANK1+34)
  1068  0017  00FD               	movwf	btemp+-1
  1069  0018  3006               	movlw	high __pidataBANK1
  1070  0019  00FE               	movwf	btemp
  1071  001A  3023               	movlw	low __pidataBANK1
  1072  001B  00FF               	movwf	btemp+1
  1073  001C  30A0               	movlw	low __pdataBANK1
  1074  001D  0084               	movwf	4
  1075  001E  120A  118A  26D5  120A  118A  	fcall	init_ram0
  1076                           
  1077                           ; Initialize objects allocated to BANK0
  1078  0023  120A  118A  271F  120A  118A  	fcall	__pidataBANK0	;fetch initializer
  1079  0028  00ED               	movwf	__pdataBANK0& (0+127)
  1080  0029  120A  118A  2720  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
  1081  002E  00EE               	movwf	(__pdataBANK0+1)& (0+127)
  1082                           
  1083                           ; Clear objects allocated to BANK3
  1084  002F  1783               	bsf	3,7	;select IRP bank2
  1085  0030  3090               	movlw	low __pbssBANK3
  1086  0031  0084               	movwf	4
  1087  0032  30C2               	movlw	low (__pbssBANK3+50)
  1088  0033  120A  118A  26FA  120A  118A  	fcall	clear_ram0
  1089                           
  1090                           ; Clear objects allocated to BANK1
  1091  0038  1383               	bcf	3,7	;select IRP bank0
  1092  0039  30DB               	movlw	low __pbssBANK1
  1093  003A  0084               	movwf	4
  1094  003B  30EB               	movlw	low (__pbssBANK1+16)
  1095  003C  120A  118A  26FA  120A  118A  	fcall	clear_ram0
  1096                           
  1097                           ; Clear objects allocated to BANK0
  1098  0041  3061               	movlw	low __pbssBANK0
  1099  0042  0084               	movwf	4
  1100  0043  306D               	movlw	low (__pbssBANK0+12)
  1101  0044  120A  118A  26FA   	fcall	clear_ram0
  1102  0047                     end_of_initialization:	
  1103                           ;End of C runtime variable initialization code
  1104                           
  1105  0047                     __end_of__initialization:	
  1106  0047  0183               	clrf	3
  1107  0048  120A  118A  2CA5   	ljmp	_main	;jump to C main() function
  1108                           
  1109                           	psect	bssBANK0
  1110  0061                     __pbssBANK0:	
  1111  0061                     _ebitstatus:	
  1112  0061                     	ds	2
  1113  0063                     _estuff:	
  1114  0063                     	ds	2
  1115  0065                     _efcsflag:	
  1116  0065                     	ds	2
  1117  0067                     _eflag:	
  1118  0067                     	ds	2
  1119  0069                     InterReceiver@intr_counter:	
  1120  0069                     	ds	2
  1121  006B                     _efcshi:	
  1122  006B                     	ds	1
  1123  006C                     _efcslo:	
  1124  006C                     	ds	1
  1125                           
  1126                           	psect	dataBANK0
  1127  006D                     __pdataBANK0:	
  1128  006D                     _FMTX_Nref:	
  1129  006D                     	ds	2
  1130                           
  1131                           	psect	bssBANK1
  1132  00DB                     __pbssBANK1:	
  1133  00DB                     _EEPROMData:	
  1134  00DB                     	ds	16
  1135                           
  1136                           	psect	dataBANK1
  1137  00A0                     __pdataBANK1:	
  1138  00A0                     _FMRX_Nprg:	
  1139  00A0                     	ds	10
  1140  00AA                     _CWTX_Nprg:	
  1141  00AA                     	ds	10
  1142  00B4                     _FMTX_Nprg:	
  1143  00B4                     	ds	10
  1144  00BE                     _FMRX_Nref:	
  1145  00BE                     	ds	2
  1146  00C0                     _CWTX_Nref:	
  1147  00C0                     	ds	2
  1148                           
  1149                           	psect	bssBANK3
  1150  0190                     __pbssBANK3:	
  1151  0190                     _ePacket:	
  1152  0190                     	ds	50
  1153                           
  1154                           	psect	inittext
  1155  06D1                     init_fetch0:	
  1156                           ;	Called with low address in FSR and high address in W
  1157                           
  1158  06D1  087E               	movf	126,w
  1159  06D2  008A               	movwf	10
  1160  06D3  087F               	movf	127,w
  1161  06D4  0082               	movwf	2
  1162  06D5                     init_ram0:	
  1163                           ;Called with:
  1164                           ;	high address of idata address in btemp 
  1165                           ;	low address of idata address in btemp+1 
  1166                           ;	low address of data in FSR
  1167                           ;	high address + 1 of data in btemp-1
  1168                           
  1169  06D5  26D1  120A  118A   	fcall	init_fetch0
  1170  06D8  0080               	movwf	0
  1171  06D9  0A84               	incf	4,f
  1172  06DA  0804               	movf	4,w
  1173  06DB  067D               	xorwf	125,w
  1174  06DC  1903               	btfsc	3,2
  1175  06DD  3400               	retlw	0
  1176  06DE  0AFF               	incf	127,f
  1177  06DF  1903               	btfsc	3,2
  1178  06E0  0AFE               	incf	126,f
  1179  06E1  2ED5               	goto	init_ram0
  1180                           
  1181                           	psect	clrtext
  1182  06FA                     clear_ram0:	
  1183                           ;	Called with FSR containing the base address, and
  1184                           ;	W with the last address+1
  1185                           
  1186  06FA  0064               	clrwdt	;clear the watchdog before getting into this loop
  1187  06FB                     clrloop0:	
  1188  06FB  0180               	clrf	0	;clear RAM location pointed to by FSR
  1189  06FC  0A84               	incf	4,f	;increment pointer
  1190  06FD  0604               	xorwf	4,w	;XOR with final address
  1191  06FE  1903               	btfsc	3,2	;have we reached the end yet?
  1192  06FF  3400               	retlw	0	;all done for this memory range, return
  1193  0700  0604               	xorwf	4,w	;XOR again to restore value
  1194  0701  2EFB               	goto	clrloop0	;do the next byte
  1195                           
  1196                           	psect	cstackBANK1
  1197  00C2                     __pcstackBANK1:	
  1198  00C2                     ??_Init_WDT:	
  1199  00C2                     ??_Init_SERIAL:	
  1200                           ; 1 bytes @ 0x0
  1201                           
  1202  00C2                     ??_Init_MPU:	
  1203                           ; 1 bytes @ 0x0
  1204                           
  1205  00C2                     ?___lldiv:	
  1206                           ; 1 bytes @ 0x0
  1207                           
  1208  00C2                     ___lldiv@divisor:	
  1209                           ; 4 bytes @ 0x0
  1210                           
  1211                           
  1212                           ; 4 bytes @ 0x0
  1213  00C2                     	ds	4
  1214  00C6                     ___lldiv@dividend:	
  1215                           
  1216                           ; 4 bytes @ 0x4
  1217  00C6                     	ds	4
  1218  00CA                     ??___lldiv:	
  1219                           
  1220                           ; 1 bytes @ 0x8
  1221  00CA                     	ds	1
  1222  00CB                     ___lldiv@quotient:	
  1223                           
  1224                           ; 4 bytes @ 0x9
  1225  00CB                     	ds	4
  1226  00CF                     ___lldiv@counter:	
  1227                           
  1228                           ; 1 bytes @ 0xD
  1229  00CF                     	ds	1
  1230  00D0                     ?_Init_I2C_M:	
  1231  00D0                     Init_I2C_M@c:	
  1232                           ; 1 bytes @ 0xE
  1233                           
  1234                           
  1235                           ; 4 bytes @ 0xE
  1236  00D0                     	ds	4
  1237  00D4                     ??_Init_I2C_M:	
  1238                           
  1239                           ; 1 bytes @ 0x12
  1240  00D4                     	ds	4
  1241  00D8                     ??_main:	
  1242                           
  1243                           ; 1 bytes @ 0x16
  1244  00D8                     	ds	3
  1245                           
  1246                           	psect	cstackCOMMON
  1247  0070                     __pcstackCOMMON:	
  1248  0070                     ?_SendByte:	
  1249  0070                     ?_fcsbit:	
  1250                           ; 1 bytes @ 0x0
  1251                           
  1252  0070                     ??_fcsbit:	
  1253                           ; 1 bytes @ 0x0
  1254                           
  1255  0070                     ?_flipout:	
  1256                           ; 1 bytes @ 0x0
  1257                           
  1258  0070                     ??_flipout:	
  1259                           ; 1 bytes @ 0x0
  1260                           
  1261  0070                     ?_Init_WDT:	
  1262                           ; 1 bytes @ 0x0
  1263                           
  1264  0070                     ?_Init_SERIAL:	
  1265                           ; 1 bytes @ 0x0
  1266                           
  1267  0070                     ?_getch:	
  1268                           ; 1 bytes @ 0x0
  1269                           
  1270  0070                     ??_getch:	
  1271                           ; 1 bytes @ 0x0
  1272                           
  1273  0070                     ?_InterReceiver:	
  1274                           ; 1 bytes @ 0x0
  1275                           
  1276  0070                     ?_Init_MPU:	
  1277                           ; 1 bytes @ 0x0
  1278                           
  1279  0070                     ?_main:	
  1280                           ; 1 bytes @ 0x0
  1281                           
  1282  0070                     ?_I2C_Master_Wait:	
  1283                           ; 1 bytes @ 0x0
  1284                           
  1285  0070                     ??_I2C_Master_Wait:	
  1286                           ; 1 bytes @ 0x0
  1287                           
  1288  0070                     ?_I2C_Master_Start:	
  1289                           ; 1 bytes @ 0x0
  1290                           
  1291  0070                     ??_I2C_Master_Start:	
  1292                           ; 1 bytes @ 0x0
  1293                           
  1294  0070                     ?_I2C_Master_RepeatedStart:	
  1295                           ; 1 bytes @ 0x0
  1296                           
  1297  0070                     ??_I2C_Master_RepeatedStart:	
  1298                           ; 1 bytes @ 0x0
  1299                           
  1300  0070                     ?_I2C_Master_Stop:	
  1301                           ; 1 bytes @ 0x0
  1302                           
  1303  0070                     ??_I2C_Master_Stop:	
  1304                           ; 1 bytes @ 0x0
  1305                           
  1306  0070                     ?_I2C_Master_Write:	
  1307                           ; 1 bytes @ 0x0
  1308                           
  1309  0070                     ?_I2C_Master_Read:	
  1310                           ; 1 bytes @ 0x0
  1311                           
  1312  0070                     ??_I2C_Master_Read:	
  1313                           ; 1 bytes @ 0x0
  1314                           
  1315  0070                     ?_Packetmaker:	
  1316                           ; 1 bytes @ 0x0
  1317                           
  1318  0070                     Packetmaker@eDataField:	
  1319                           ; 2 bytes @ 0x0
  1320                           
  1321  0070                     I2C_Master_Write@d:	
  1322                           ; 2 bytes @ 0x0
  1323                           
  1324                           
  1325                           ; 2 bytes @ 0x0
  1326  0070                     	ds	1
  1327  0071                     I2C_Master_Read@a:	
  1328                           
  1329                           ; 1 bytes @ 0x1
  1330  0071                     	ds	1
  1331  0072                     ??_Packetmaker:	
  1332  0072                     ??_I2C_Master_Write:	
  1333                           ; 1 bytes @ 0x2
  1334                           
  1335  0072                     fcsbit@tbyte:	
  1336                           ; 1 bytes @ 0x2
  1337                           
  1338  0072                     I2C_Master_Read@temp:	
  1339                           ; 1 bytes @ 0x2
  1340                           
  1341                           
  1342                           ; 1 bytes @ 0x2
  1343  0072                     	ds	1
  1344  0073                     ?_EEPROM_Read:	
  1345  0073                     ??_SendByte:	
  1346                           ; 1 bytes @ 0x3
  1347                           
  1348  0073                     EEPROM_Read@high_address:	
  1349                           ; 1 bytes @ 0x3
  1350                           
  1351                           
  1352                           ; 1 bytes @ 0x3
  1353  0073                     	ds	1
  1354  0074                     EEPROM_Read@low_address:	
  1355                           
  1356                           ; 1 bytes @ 0x4
  1357  0074                     	ds	1
  1358  0075                     Packetmaker@i_167:	
  1359  0075                     SendByte@i:	
  1360                           ; 2 bytes @ 0x5
  1361                           
  1362  0075                     EEPROM_Read@ReadData:	
  1363                           ; 2 bytes @ 0x5
  1364                           
  1365                           
  1366                           ; 2 bytes @ 0x5
  1367  0075                     	ds	2
  1368  0077                     SendByte@byte:	
  1369  0077                     Packetmaker@Datanum:	
  1370                           ; 1 bytes @ 0x7
  1371                           
  1372  0077                     EEPROM_Read@EEPROMDataLength:	
  1373                           ; 2 bytes @ 0x7
  1374                           
  1375                           
  1376                           ; 2 bytes @ 0x7
  1377  0077                     	ds	1
  1378  0078                     SendByte@bt:	
  1379                           
  1380                           ; 1 bytes @ 0x8
  1381  0078                     	ds	1
  1382  0079                     ??_EEPROM_Read:	
  1383  0079                     Packetmaker@i:	
  1384                           ; 1 bytes @ 0x9
  1385                           
  1386                           
  1387                           ; 2 bytes @ 0x9
  1388  0079                     	ds	2
  1389  007B                     Packetmaker@i_164:	
  1390                           
  1391                           ; 2 bytes @ 0xB
  1392  007B                     	ds	3
  1393                           
  1394                           	psect	cstackBANK0
  1395  0020                     __pcstackBANK0:	
  1396  0020                     ?_SendPacket:	
  1397  0020                     EEPROM_Read@EEPROM_address:	
  1398                           ; 1 bytes @ 0x0
  1399                           
  1400  0020                     SendPacket@eDataField:	
  1401                           ; 1 bytes @ 0x0
  1402                           
  1403                           
  1404                           ; 2 bytes @ 0x0
  1405  0020                     	ds	1
  1406  0021                     EEPROM_Read@ReadAddress:	
  1407                           
  1408                           ; 1 bytes @ 0x1
  1409  0021                     	ds	1
  1410  0022                     ??_SendPacket:	
  1411  0022                     EEPROM_Read@i:	
  1412                           ; 1 bytes @ 0x2
  1413                           
  1414                           
  1415                           ; 2 bytes @ 0x2
  1416  0022                     	ds	2
  1417  0024                     EEPROM_Read@Address:	
  1418                           
  1419                           ; 1 bytes @ 0x4
  1420  0024                     	ds	1
  1421  0025                     SendPacket@Packetnum:	
  1422                           
  1423                           ; 2 bytes @ 0x5
  1424  0025                     	ds	2
  1425  0027                     SendPacket@i:	
  1426                           
  1427                           ; 2 bytes @ 0x7
  1428  0027                     	ds	2
  1429  0029                     SendPacket@i_173:	
  1430                           
  1431                           ; 2 bytes @ 0x9
  1432  0029                     	ds	2
  1433  002B                     SendPacket@i_174:	
  1434                           
  1435                           ; 2 bytes @ 0xB
  1436  002B                     	ds	2
  1437  002D                     ??_InterReceiver:	
  1438                           
  1439                           ; 1 bytes @ 0xD
  1440  002D                     	ds	7
  1441  0034                     InterReceiver@EEPROMCmdData:	
  1442  0034                     InterReceiver@EEPROMCmdData_109:	
  1443                           ; 0 bytes @ 0x14
  1444                           
  1445  0034                     InterReceiver@RXDATA:	
  1446                           ; 0 bytes @ 0x14
  1447                           
  1448                           
  1449                           ; 32 bytes @ 0x14
  1450  0034                     	ds	32
  1451  0054                     InterReceiver@EEPROMCmdDataLength:	
  1452                           
  1453                           ; 2 bytes @ 0x34
  1454  0054                     	ds	2
  1455  0056                     InterReceiver@EEPROMCmdDataLength_110:	
  1456                           
  1457                           ; 2 bytes @ 0x36
  1458  0056                     	ds	2
  1459  0058                     InterReceiver@EEPROMTestData:	
  1460                           
  1461                           ; 5 bytes @ 0x38
  1462  0058                     	ds	5
  1463  005D                     InterReceiver@i:	
  1464                           
  1465                           ; 2 bytes @ 0x3D
  1466  005D                     	ds	2
  1467  005F                     InterReceiver@i_111:	
  1468                           
  1469                           ; 2 bytes @ 0x3F
  1470  005F                     	ds	2
  1471                           
  1472                           	psect	maintext
  1473  04A5                     __pmaintext:	
  1474 ;;
  1475 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1476 ;;
  1477 ;; *************** function _main *****************
  1478 ;; Defined at:
  1479 ;;		line 36 in file "main.c"
  1480 ;; Parameters:    Size  Location     Type
  1481 ;;		None
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;  EEPROMData     32    0        unsigned char [32]
  1484 ;;  EEPROMDataLe    2    0        unsigned int 
  1485 ;;  EEPROMData      2    0        PTR unsigned char 
  1486 ;;  dData           0    0        unsigned char [0]
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  1    wreg      void 
  1489 ;; Registers used:
  1490 ;;		wreg, status,2, status,0, pclath, cstack
  1491 ;; Tracked objects:
  1492 ;;		On entry : B00/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1496 ;;      Params:         0       0       0       0       0
  1497 ;;      Locals:         0       0       0       0       0
  1498 ;;      Temps:          0       0       3       0       0
  1499 ;;      Totals:         0       0       3       0       0
  1500 ;;Total ram usage:        3 bytes
  1501 ;; Hardware stack levels required when called:    6
  1502 ;; This function calls:
  1503 ;;		_Init_I2C_M
  1504 ;;		_Init_MPU
  1505 ;;		_Init_SERIAL
  1506 ;;		_Init_WDT
  1507 ;; This function is called by:
  1508 ;;		Startup code after reset
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512                           
  1513                           ;psect for function _main
  1514  04A5                     _main:	
  1515                           
  1516                           ;main.c: 37: _delay((unsigned long)((1000)*(10000000/4000.0)));
  1517                           
  1518                           ;incstack = 0
  1519                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1520  04A5  300D               	movlw	13
  1521  04A6  1683               	bsf	3,5	;RP0=1, select bank1
  1522  04A7  1303               	bcf	3,6	;RP1=0, select bank1
  1523  04A8  00DA               	movwf	(??_main^(0+128)+2)
  1524  04A9  30AF               	movlw	175
  1525  04AA  00D9               	movwf	(??_main^(0+128)+1)
  1526  04AB  30B5               	movlw	181
  1527  04AC  00D8               	movwf	??_main^(0+128)
  1528  04AD                     u1117:	
  1529  04AD  0BD8               	decfsz	??_main^(0+128),f
  1530  04AE  2CAD               	goto	u1117
  1531  04AF  0BD9               	decfsz	(??_main^(0+128)+1),f
  1532  04B0  2CAD               	goto	u1117
  1533  04B1  0BDA               	decfsz	(??_main^(0+128)+2),f
  1534  04B2  2CAD               	goto	u1117
  1535  04B3  2CB4               	nop2
  1536                           
  1537                           ;main.c: 41: Init_SERIAL();
  1538  04B4  120A  118A  2645  120A  118A  	fcall	_Init_SERIAL
  1539                           
  1540                           ;main.c: 42: Init_MPU();
  1541  04B9  120A  118A  2660  120A  118A  	fcall	_Init_MPU
  1542                           
  1543                           ;main.c: 45: Init_I2C_M(400000);
  1544  04BE  3000               	movlw	0
  1545  04BF  1683               	bsf	3,5	;RP0=1, select bank1
  1546  04C0  1303               	bcf	3,6	;RP1=0, select bank1
  1547  04C1  00D3               	movwf	(Init_I2C_M@c+3)^(0+128)
  1548  04C2  3006               	movlw	6
  1549  04C3  00D2               	movwf	(Init_I2C_M@c+2)^(0+128)
  1550  04C4  301A               	movlw	26
  1551  04C5  00D1               	movwf	(Init_I2C_M@c+1)^(0+128)
  1552  04C6  3080               	movlw	128
  1553  04C7  00D0               	movwf	Init_I2C_M@c^(0+128)
  1554  04C8  120A  118A  25CB  120A  118A  	fcall	_Init_I2C_M
  1555                           
  1556                           ;main.c: 46: Init_WDT();
  1557  04CD  120A  118A  2694  120A  118A  	fcall	_Init_WDT
  1558  04D2  2CFF               	goto	l245
  1559  04D3                     l1836:	
  1560                           
  1561                           ;main.c: 108: RC0 = 1;
  1562  04D3  1407               	bsf	7,0	;volatile
  1563                           
  1564                           ;main.c: 109: RB3 = 0;
  1565  04D4  1186               	bcf	6,3	;volatile
  1566                           
  1567                           ;main.c: 110: UBYTE EEPROMData[32];
  1568                           ;main.c: 111: UINT EEPROMDataLength;
  1569                           ;main.c: 113: _delay((unsigned long)((200)*(10000000/4000.0)));
  1570  04D5  3003               	movlw	3
  1571  04D6  1683               	bsf	3,5	;RP0=1, select bank1
  1572  04D7  1303               	bcf	3,6	;RP1=0, select bank1
  1573  04D8  00DA               	movwf	(??_main^(0+128)+2)
  1574  04D9  308A               	movlw	138
  1575  04DA  00D9               	movwf	(??_main^(0+128)+1)
  1576  04DB  3055               	movlw	85
  1577  04DC  00D8               	movwf	??_main^(0+128)
  1578  04DD                     u1137:	
  1579  04DD  0BD8               	decfsz	??_main^(0+128),f
  1580  04DE  2CDD               	goto	u1137
  1581  04DF  0BD9               	decfsz	(??_main^(0+128)+1),f
  1582  04E0  2CDD               	goto	u1137
  1583  04E1  0BDA               	decfsz	(??_main^(0+128)+2),f
  1584  04E2  2CDD               	goto	u1137
  1585                           
  1586                           ;main.c: 115: _delay((unsigned long)((200)*(10000000/4000.0)));
  1587  04E3  3003               	movlw	3
  1588  04E4  1683               	bsf	3,5	;RP0=1, select bank1
  1589  04E5  1303               	bcf	3,6	;RP1=0, select bank1
  1590  04E6  00DA               	movwf	(??_main^(0+128)+2)
  1591  04E7  308A               	movlw	138
  1592  04E8  00D9               	movwf	(??_main^(0+128)+1)
  1593  04E9  3055               	movlw	85
  1594  04EA  00D8               	movwf	??_main^(0+128)
  1595  04EB                     u1147:	
  1596  04EB  0BD8               	decfsz	??_main^(0+128),f
  1597  04EC  2CEB               	goto	u1147
  1598  04ED  0BD9               	decfsz	(??_main^(0+128)+1),f
  1599  04EE  2CEB               	goto	u1147
  1600  04EF  0BDA               	decfsz	(??_main^(0+128)+2),f
  1601  04F0  2CEB               	goto	u1147
  1602                           
  1603                           ;main.c: 131: _delay((unsigned long)((200)*(10000000/4000.0)));
  1604  04F1  3003               	movlw	3
  1605  04F2  1683               	bsf	3,5	;RP0=1, select bank1
  1606  04F3  1303               	bcf	3,6	;RP1=0, select bank1
  1607  04F4  00DA               	movwf	(??_main^(0+128)+2)
  1608  04F5  308A               	movlw	138
  1609  04F6  00D9               	movwf	(??_main^(0+128)+1)
  1610  04F7  3055               	movlw	85
  1611  04F8  00D8               	movwf	??_main^(0+128)
  1612  04F9                     u1157:	
  1613  04F9  0BD8               	decfsz	??_main^(0+128),f
  1614  04FA  2CF9               	goto	u1157
  1615  04FB  0BD9               	decfsz	(??_main^(0+128)+1),f
  1616  04FC  2CF9               	goto	u1157
  1617  04FD  0BDA               	decfsz	(??_main^(0+128)+2),f
  1618  04FE  2CF9               	goto	u1157
  1619  04FF                     l245:	
  1620                           ;main.c: 58: while(1){
  1621                           
  1622                           ;main.c: 156: }else{
  1623                           
  1624                           
  1625                           ;main.c: 74: UBYTE dData[];
  1626                           ;main.c: 84: _delay((unsigned long)((200)*(10000000/4000.0)));
  1627  04FF  3003               	movlw	3
  1628  0500  1683               	bsf	3,5	;RP0=1, select bank1
  1629  0501  1303               	bcf	3,6	;RP1=0, select bank1
  1630  0502  00DA               	movwf	(??_main^(0+128)+2)
  1631  0503  308A               	movlw	138
  1632  0504  00D9               	movwf	(??_main^(0+128)+1)
  1633  0505  3055               	movlw	85
  1634  0506  00D8               	movwf	??_main^(0+128)
  1635  0507                     u1127:	
  1636  0507  0BD8               	decfsz	??_main^(0+128),f
  1637  0508  2D07               	goto	u1127
  1638  0509  0BD9               	decfsz	(??_main^(0+128)+1),f
  1639  050A  2D07               	goto	u1127
  1640  050B  0BDA               	decfsz	(??_main^(0+128)+2),f
  1641  050C  2D07               	goto	u1127
  1642                           
  1643                           ;main.c: 106: UBYTE *EEPROMData;
  1644                           ;main.c: 107: if (RC2==1){
  1645  050D  1283               	bcf	3,5	;RP0=0, select bank0
  1646  050E  1303               	bcf	3,6	;RP1=0, select bank0
  1647  050F  1907               	btfsc	7,2	;volatile
  1648  0510  2CD3               	goto	l1836
  1649                           
  1650                           ;main.c: 158: RC0 = 0;
  1651  0511  1007               	bcf	7,0	;volatile
  1652  0512  2CFF               	goto	l245
  1653  0513                     __end_of_main:	
  1654                           
  1655                           	psect	text1
  1656  0694                     __ptext1:	
  1657 ;; *************** function _Init_WDT *****************
  1658 ;; Defined at:
  1659 ;;		line 5 in file "WDT.c"
  1660 ;; Parameters:    Size  Location     Type
  1661 ;;		None
  1662 ;; Auto vars:     Size  Location     Type
  1663 ;;		None
  1664 ;; Return value:  Size  Location     Type
  1665 ;;                  1    wreg      void 
  1666 ;; Registers used:
  1667 ;;		wreg, status,2, status,0
  1668 ;; Tracked objects:
  1669 ;;		On entry : 0/0
  1670 ;;		On exit  : 0/0
  1671 ;;		Unchanged: 0/0
  1672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1673 ;;      Params:         0       0       0       0       0
  1674 ;;      Locals:         0       0       0       0       0
  1675 ;;      Temps:          0       0       0       0       0
  1676 ;;      Totals:         0       0       0       0       0
  1677 ;;Total ram usage:        0 bytes
  1678 ;; Hardware stack levels used:    1
  1679 ;; Hardware stack levels required when called:    4
  1680 ;; This function calls:
  1681 ;;		Nothing
  1682 ;; This function is called by:
  1683 ;;		_main
  1684 ;; This function uses a non-reentrant model
  1685 ;;
  1686                           
  1687                           
  1688                           ;psect for function _Init_WDT
  1689  0694                     _Init_WDT:	
  1690                           
  1691                           ;WDT.c: 6: INTCONbits.GIE = 1;
  1692                           
  1693                           ;incstack = 0
  1694                           ; Regs used in _Init_WDT: [wreg+status,2+status,0]
  1695  0694  178B               	bsf	11,7	;volatile
  1696                           
  1697                           ;WDT.c: 7: INTCONbits.PEIE = 1;
  1698  0695  170B               	bsf	11,6	;volatile
  1699                           
  1700                           ;WDT.c: 9: OPTION_REGbits.PSA = 1;
  1701  0696  1683               	bsf	3,5	;RP0=1, select bank1
  1702  0697  1303               	bcf	3,6	;RP1=0, select bank1
  1703  0698  1581               	bsf	1,3	;volatile
  1704                           
  1705                           ;WDT.c: 10: OPTION_REGbits.PS = 7;
  1706  0699  3007               	movlw	7
  1707  069A  0481               	iorwf	1,f	;volatile
  1708                           
  1709                           ;WDT.c: 14: PIR1bits.TMR1IF = 0;
  1710  069B  1283               	bcf	3,5	;RP0=0, select bank0
  1711  069C  1303               	bcf	3,6	;RP1=0, select bank0
  1712  069D  100C               	bcf	12,0	;volatile
  1713                           
  1714                           ;WDT.c: 15: PIE1bits.TMR1IE = 1;
  1715  069E  1683               	bsf	3,5	;RP0=1, select bank1
  1716  069F  1303               	bcf	3,6	;RP1=0, select bank1
  1717  06A0  140C               	bsf	12,0	;volatile
  1718                           
  1719                           ;WDT.c: 18: T1CONbits.T1CKPS = 3;
  1720  06A1  3030               	movlw	48
  1721  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  1722  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  1723  06A4  0490               	iorwf	16,f	;volatile
  1724                           
  1725                           ;WDT.c: 19: TMR1 = (0xffff - 62500);
  1726  06A5  300B               	movlw	11
  1727  06A6  008F               	movwf	15	;volatile
  1728  06A7  30DB               	movlw	219
  1729  06A8  008E               	movwf	14	;volatile
  1730                           
  1731                           ;WDT.c: 21: T1CONbits.TMR1ON = 1;
  1732  06A9  1410               	bsf	16,0	;volatile
  1733  06AA  0008               	return
  1734  06AB                     __end_of_Init_WDT:	
  1735                           
  1736                           	psect	text2
  1737  0645                     __ptext2:	
  1738 ;; *************** function _Init_SERIAL *****************
  1739 ;; Defined at:
  1740 ;;		line 10 in file "UART.c"
  1741 ;; Parameters:    Size  Location     Type
  1742 ;;		None
  1743 ;; Auto vars:     Size  Location     Type
  1744 ;;		None
  1745 ;; Return value:  Size  Location     Type
  1746 ;;                  1    wreg      void 
  1747 ;; Registers used:
  1748 ;;		wreg
  1749 ;; Tracked objects:
  1750 ;;		On entry : 0/0
  1751 ;;		On exit  : 0/0
  1752 ;;		Unchanged: 0/0
  1753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1754 ;;      Params:         0       0       0       0       0
  1755 ;;      Locals:         0       0       0       0       0
  1756 ;;      Temps:          0       0       0       0       0
  1757 ;;      Totals:         0       0       0       0       0
  1758 ;;Total ram usage:        0 bytes
  1759 ;; Hardware stack levels used:    1
  1760 ;; Hardware stack levels required when called:    4
  1761 ;; This function calls:
  1762 ;;		Nothing
  1763 ;; This function is called by:
  1764 ;;		_main
  1765 ;; This function uses a non-reentrant model
  1766 ;;
  1767                           
  1768                           
  1769                           ;psect for function _Init_SERIAL
  1770  0645                     _Init_SERIAL:	
  1771                           
  1772                           ;UART.c: 11: SPBRG = 10;
  1773                           
  1774                           ;incstack = 0
  1775                           ; Regs used in _Init_SERIAL: [wreg]
  1776  0645  300A               	movlw	10
  1777  0646  1683               	bsf	3,5	;RP0=1, select bank1
  1778  0647  1303               	bcf	3,6	;RP1=0, select bank1
  1779  0648  0099               	movwf	25	;volatile
  1780                           
  1781                           ;UART.c: 12: GIE = 1;
  1782  0649  178B               	bsf	11,7	;volatile
  1783                           
  1784                           ;UART.c: 13: PEIE = 1;
  1785  064A  170B               	bsf	11,6	;volatile
  1786                           
  1787                           ;UART.c: 14: BRGH = 0;
  1788  064B  1118               	bcf	24,2	;volatile
  1789                           
  1790                           ;UART.c: 15: SYNC = 0;
  1791  064C  1218               	bcf	24,4	;volatile
  1792                           
  1793                           ;UART.c: 16: SPEN = 1;
  1794  064D  1283               	bcf	3,5	;RP0=0, select bank0
  1795  064E  1303               	bcf	3,6	;RP1=0, select bank0
  1796  064F  1798               	bsf	24,7	;volatile
  1797                           
  1798                           ;UART.c: 17: CREN = 1;
  1799  0650  1618               	bsf	24,4	;volatile
  1800                           
  1801                           ;UART.c: 18: SREN = 0;
  1802  0651  1298               	bcf	24,5	;volatile
  1803                           
  1804                           ;UART.c: 19: RCIF = 0;
  1805  0652  128C               	bcf	12,5	;volatile
  1806                           
  1807                           ;UART.c: 20: TXIE = 0;
  1808  0653  1683               	bsf	3,5	;RP0=1, select bank1
  1809  0654  1303               	bcf	3,6	;RP1=0, select bank1
  1810  0655  120C               	bcf	12,4	;volatile
  1811                           
  1812                           ;UART.c: 21: RCIE = 1;
  1813  0656  168C               	bsf	12,5	;volatile
  1814                           
  1815                           ;UART.c: 22: TX9 = 0;
  1816  0657  1318               	bcf	24,6	;volatile
  1817                           
  1818                           ;UART.c: 23: RX9 = 0;
  1819  0658  1283               	bcf	3,5	;RP0=0, select bank0
  1820  0659  1303               	bcf	3,6	;RP1=0, select bank0
  1821  065A  1318               	bcf	24,6	;volatile
  1822                           
  1823                           ;UART.c: 24: TXEN = 0;
  1824  065B  1683               	bsf	3,5	;RP0=1, select bank1
  1825  065C  1303               	bcf	3,6	;RP1=0, select bank1
  1826  065D  1298               	bcf	24,5	;volatile
  1827                           
  1828                           ;UART.c: 25: TXEN = 1;
  1829  065E  1698               	bsf	24,5	;volatile
  1830  065F  0008               	return
  1831  0660                     __end_of_Init_SERIAL:	
  1832                           
  1833                           	psect	text3
  1834  0660                     __ptext3:	
  1835 ;; *************** function _Init_MPU *****************
  1836 ;; Defined at:
  1837 ;;		line 8 in file "Init_MPU.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;		None
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;		None
  1842 ;; Return value:  Size  Location     Type
  1843 ;;                  1    wreg      void 
  1844 ;; Registers used:
  1845 ;;		wreg, status,2
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1851 ;;      Params:         0       0       0       0       0
  1852 ;;      Locals:         0       0       0       0       0
  1853 ;;      Temps:          0       0       0       0       0
  1854 ;;      Totals:         0       0       0       0       0
  1855 ;;Total ram usage:        0 bytes
  1856 ;; Hardware stack levels used:    1
  1857 ;; Hardware stack levels required when called:    4
  1858 ;; This function calls:
  1859 ;;		Nothing
  1860 ;; This function is called by:
  1861 ;;		_main
  1862 ;; This function uses a non-reentrant model
  1863 ;;
  1864                           
  1865                           
  1866                           ;psect for function _Init_MPU
  1867  0660                     _Init_MPU:	
  1868                           
  1869                           ;Init_MPU.c: 11: PORTA = 0x00;
  1870                           
  1871                           ;incstack = 0
  1872                           ; Regs used in _Init_MPU: [wreg+status,2]
  1873  0660  1283               	bcf	3,5	;RP0=0, select bank0
  1874  0661  1303               	bcf	3,6	;RP1=0, select bank0
  1875  0662  0185               	clrf	5	;volatile
  1876                           
  1877                           ;Init_MPU.c: 12: PORTB = 0x00;
  1878  0663  0186               	clrf	6	;volatile
  1879                           
  1880                           ;Init_MPU.c: 13: PORTC = 0x00;
  1881  0664  0187               	clrf	7	;volatile
  1882                           
  1883                           ;Init_MPU.c: 15: PORTE = 0x00;
  1884  0665  0189               	clrf	9	;volatile
  1885                           
  1886                           ;Init_MPU.c: 18: ANSEL = 0x00;
  1887  0666  1683               	bsf	3,5	;RP0=1, select bank3
  1888  0667  1703               	bsf	3,6	;RP1=1, select bank3
  1889  0668  0188               	clrf	8	;volatile
  1890                           
  1891                           ;Init_MPU.c: 19: ANSELH = 0x00;
  1892  0669  0189               	clrf	9	;volatile
  1893                           
  1894                           ;Init_MPU.c: 23: TRISA = 0b10000000;
  1895  066A  3080               	movlw	128
  1896  066B  1683               	bsf	3,5	;RP0=1, select bank1
  1897  066C  1303               	bcf	3,6	;RP1=0, select bank1
  1898  066D  0085               	movwf	5	;volatile
  1899                           
  1900                           ;Init_MPU.c: 24: TRISB = 0b00010000;
  1901  066E  3010               	movlw	16
  1902  066F  0086               	movwf	6	;volatile
  1903                           
  1904                           ;Init_MPU.c: 25: TRISC = 0b01011100;
  1905  0670  305C               	movlw	92
  1906  0671  0087               	movwf	7	;volatile
  1907                           
  1908                           ;Init_MPU.c: 27: TRISE = 0b00000000;
  1909  0672  0189               	clrf	9	;volatile
  1910                           
  1911                           ;Init_MPU.c: 30: PORTA = 0x00;
  1912  0673  1283               	bcf	3,5	;RP0=0, select bank0
  1913  0674  1303               	bcf	3,6	;RP1=0, select bank0
  1914  0675  0185               	clrf	5	;volatile
  1915                           
  1916                           ;Init_MPU.c: 31: PORTB = 0x00;
  1917  0676  0186               	clrf	6	;volatile
  1918                           
  1919                           ;Init_MPU.c: 32: PORTC = 0x00;
  1920  0677  0187               	clrf	7	;volatile
  1921                           
  1922                           ;Init_MPU.c: 34: PORTE = 0x00;
  1923  0678  0189               	clrf	9	;volatile
  1924  0679  0008               	return
  1925  067A                     __end_of_Init_MPU:	
  1926                           
  1927                           	psect	text4
  1928  05CB                     __ptext4:	
  1929 ;; *************** function _Init_I2C_M *****************
  1930 ;; Defined at:
  1931 ;;		line 11 in file "I2C.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;  c               4   14[BANK1 ] const unsigned long 
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;		None
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  1    wreg      void 
  1938 ;; Registers used:
  1939 ;;		wreg, status,2, status,0, pclath, cstack
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1945 ;;      Params:         0       0       4       0       0
  1946 ;;      Locals:         0       0       0       0       0
  1947 ;;      Temps:          0       0       4       0       0
  1948 ;;      Totals:         0       0       8       0       0
  1949 ;;Total ram usage:        8 bytes
  1950 ;; Hardware stack levels used:    1
  1951 ;; Hardware stack levels required when called:    5
  1952 ;; This function calls:
  1953 ;;		___lldiv
  1954 ;; This function is called by:
  1955 ;;		_main
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959                           
  1960                           ;psect for function _Init_I2C_M
  1961  05CB                     _Init_I2C_M:	
  1962                           
  1963                           ;I2C.c: 12: SSPCON = 0b00101000;
  1964                           
  1965                           ;incstack = 0
  1966                           ; Regs used in _Init_I2C_M: [wreg+status,2+status,0+pclath+cstack]
  1967  05CB  3028               	movlw	40
  1968  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  1969  05CD  1303               	bcf	3,6	;RP1=0, select bank0
  1970  05CE  0094               	movwf	20	;volatile
  1971                           
  1972                           ;I2C.c: 13: SSPCON2 = 0;
  1973  05CF  1683               	bsf	3,5	;RP0=1, select bank1
  1974  05D0  1303               	bcf	3,6	;RP1=0, select bank1
  1975  05D1  0191               	clrf	17	;volatile
  1976                           
  1977                           ;I2C.c: 14: SSPADD = (10000000/(4*c))-1;
  1978  05D2  0850               	movf	Init_I2C_M@c^(0+128),w
  1979  05D3  00D4               	movwf	??_Init_I2C_M^(0+128)
  1980  05D4  0851               	movf	(Init_I2C_M@c+1)^(0+128),w
  1981  05D5  00D5               	movwf	(??_Init_I2C_M^(0+128)+1)
  1982  05D6  0852               	movf	(Init_I2C_M@c+2)^(0+128),w
  1983  05D7  00D6               	movwf	(??_Init_I2C_M^(0+128)+2)
  1984  05D8  0853               	movf	(Init_I2C_M@c+3)^(0+128),w
  1985  05D9  00D7               	movwf	(??_Init_I2C_M^(0+128)+3)
  1986  05DA  3002               	movlw	2
  1987  05DB                     u945:	
  1988  05DB  1003               	clrc
  1989  05DC  0DD4               	rlf	??_Init_I2C_M^(0+128),f
  1990  05DD  0DD5               	rlf	(??_Init_I2C_M^(0+128)+1),f
  1991  05DE  0DD6               	rlf	(??_Init_I2C_M^(0+128)+2),f
  1992  05DF  0DD7               	rlf	(??_Init_I2C_M^(0+128)+3),f
  1993  05E0  3EFF               	addlw	-1
  1994  05E1  1D03               	skipz
  1995  05E2  2DDB               	goto	u945
  1996  05E3  0857               	movf	(??_Init_I2C_M+3)^(0+128),w
  1997  05E4  00C5               	movwf	(___lldiv@divisor+3)^(0+128)
  1998  05E5  0856               	movf	(??_Init_I2C_M+2)^(0+128),w
  1999  05E6  00C4               	movwf	(___lldiv@divisor+2)^(0+128)
  2000  05E7  0855               	movf	(??_Init_I2C_M+1)^(0+128),w
  2001  05E8  00C3               	movwf	(___lldiv@divisor+1)^(0+128)
  2002  05E9  0854               	movf	??_Init_I2C_M^(0+128),w
  2003  05EA  00C2               	movwf	___lldiv@divisor^(0+128)
  2004  05EB  3000               	movlw	0
  2005  05EC  00C9               	movwf	(___lldiv@dividend+3)^(0+128)
  2006  05ED  3098               	movlw	152
  2007  05EE  00C8               	movwf	(___lldiv@dividend+2)^(0+128)
  2008  05EF  3096               	movlw	150
  2009  05F0  00C7               	movwf	(___lldiv@dividend+1)^(0+128)
  2010  05F1  3080               	movlw	128
  2011  05F2  00C6               	movwf	___lldiv@dividend^(0+128)
  2012  05F3  120A  118A  2513   	fcall	___lldiv
  2013  05F6  1683               	bsf	3,5	;RP0=1, select bank1
  2014  05F7  1303               	bcf	3,6	;RP1=0, select bank1
  2015  05F8  0842               	movf	?___lldiv^(0+128),w
  2016  05F9  3EFF               	addlw	255
  2017  05FA  0093               	movwf	19	;volatile
  2018                           
  2019                           ;I2C.c: 15: SSPSTAT = 0;
  2020  05FB  0194               	clrf	20	;volatile
  2021  05FC  0008               	return
  2022  05FD                     __end_of_Init_I2C_M:	
  2023                           
  2024                           	psect	text5
  2025  0513                     __ptext5:	
  2026 ;; *************** function ___lldiv *****************
  2027 ;; Defined at:
  2028 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  2029 ;; Parameters:    Size  Location     Type
  2030 ;;  divisor         4    0[BANK1 ] unsigned long 
  2031 ;;  dividend        4    4[BANK1 ] unsigned long 
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;  quotient        4    9[BANK1 ] unsigned long 
  2034 ;;  counter         1   13[BANK1 ] unsigned char 
  2035 ;; Return value:  Size  Location     Type
  2036 ;;                  4    0[BANK1 ] unsigned long 
  2037 ;; Registers used:
  2038 ;;		wreg, status,2, status,0
  2039 ;; Tracked objects:
  2040 ;;		On entry : 0/0
  2041 ;;		On exit  : 0/0
  2042 ;;		Unchanged: 0/0
  2043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2044 ;;      Params:         0       0       8       0       0
  2045 ;;      Locals:         0       0       5       0       0
  2046 ;;      Temps:          0       0       1       0       0
  2047 ;;      Totals:         0       0      14       0       0
  2048 ;;Total ram usage:       14 bytes
  2049 ;; Hardware stack levels used:    1
  2050 ;; Hardware stack levels required when called:    4
  2051 ;; This function calls:
  2052 ;;		Nothing
  2053 ;; This function is called by:
  2054 ;;		_Init_I2C_M
  2055 ;; This function uses a non-reentrant model
  2056 ;;
  2057                           
  2058                           
  2059                           ;psect for function ___lldiv
  2060  0513                     ___lldiv:	
  2061                           
  2062                           ;incstack = 0
  2063                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2064  0513  3000               	movlw	0
  2065  0514  1683               	bsf	3,5	;RP0=1, select bank1
  2066  0515  1303               	bcf	3,6	;RP1=0, select bank1
  2067  0516  00CE               	movwf	(___lldiv@quotient+3)^(0+128)
  2068  0517  3000               	movlw	0
  2069  0518  00CD               	movwf	(___lldiv@quotient+2)^(0+128)
  2070  0519  3000               	movlw	0
  2071  051A  00CC               	movwf	(___lldiv@quotient+1)^(0+128)
  2072  051B  3000               	movlw	0
  2073  051C  00CB               	movwf	___lldiv@quotient^(0+128)
  2074  051D  0845               	movf	(___lldiv@divisor+3)^(0+128),w
  2075  051E  0444               	iorwf	(___lldiv@divisor+2)^(0+128),w
  2076  051F  0443               	iorwf	(___lldiv@divisor+1)^(0+128),w
  2077  0520  0442               	iorwf	___lldiv@divisor^(0+128),w
  2078  0521  1903               	skipnz
  2079  0522  2D6A               	goto	l1520
  2080  0523  01CF               	clrf	___lldiv@counter^(0+128)
  2081  0524  0ACF               	incf	___lldiv@counter^(0+128),f
  2082  0525                     l1506:	
  2083  0525  1BC5               	btfsc	(___lldiv@divisor+3)^(0+128),7
  2084  0526  2D35               	goto	l1508
  2085  0527  3001               	movlw	1
  2086  0528  00CA               	movwf	??___lldiv^(0+128)
  2087  0529                     u785:	
  2088  0529  1003               	clrc
  2089  052A  0DC2               	rlf	___lldiv@divisor^(0+128),f
  2090  052B  0DC3               	rlf	(___lldiv@divisor+1)^(0+128),f
  2091  052C  0DC4               	rlf	(___lldiv@divisor+2)^(0+128),f
  2092  052D  0DC5               	rlf	(___lldiv@divisor+3)^(0+128),f
  2093  052E  0BCA               	decfsz	??___lldiv^(0+128),f
  2094  052F  2D29               	goto	u785
  2095  0530  3001               	movlw	1
  2096  0531  00CA               	movwf	??___lldiv^(0+128)
  2097  0532  084A               	movf	??___lldiv^(0+128),w
  2098  0533  07CF               	addwf	___lldiv@counter^(0+128),f
  2099  0534  2D25               	goto	l1506
  2100  0535                     l1508:	
  2101  0535  3001               	movlw	1
  2102  0536  00CA               	movwf	??___lldiv^(0+128)
  2103  0537                     u805:	
  2104  0537  1003               	clrc
  2105  0538  0DCB               	rlf	___lldiv@quotient^(0+128),f
  2106  0539  0DCC               	rlf	(___lldiv@quotient+1)^(0+128),f
  2107  053A  0DCD               	rlf	(___lldiv@quotient+2)^(0+128),f
  2108  053B  0DCE               	rlf	(___lldiv@quotient+3)^(0+128),f
  2109  053C  0BCA               	decfsz	??___lldiv^(0+128),f
  2110  053D  2D37               	goto	u805
  2111  053E  0845               	movf	(___lldiv@divisor+3)^(0+128),w
  2112  053F  0249               	subwf	(___lldiv@dividend+3)^(0+128),w
  2113  0540  1D03               	skipz
  2114  0541  2D4C               	goto	u815
  2115  0542  0844               	movf	(___lldiv@divisor+2)^(0+128),w
  2116  0543  0248               	subwf	(___lldiv@dividend+2)^(0+128),w
  2117  0544  1D03               	skipz
  2118  0545  2D4C               	goto	u815
  2119  0546  0843               	movf	(___lldiv@divisor+1)^(0+128),w
  2120  0547  0247               	subwf	(___lldiv@dividend+1)^(0+128),w
  2121  0548  1D03               	skipz
  2122  0549  2D4C               	goto	u815
  2123  054A  0842               	movf	___lldiv@divisor^(0+128),w
  2124  054B  0246               	subwf	___lldiv@dividend^(0+128),w
  2125  054C                     u815:	
  2126  054C  1C03               	skipc
  2127  054D  2D5D               	goto	l1516
  2128  054E  0842               	movf	___lldiv@divisor^(0+128),w
  2129  054F  02C6               	subwf	___lldiv@dividend^(0+128),f
  2130  0550  0843               	movf	(___lldiv@divisor+1)^(0+128),w
  2131  0551  1C03               	skipc
  2132  0552  0F43               	incfsz	(___lldiv@divisor+1)^(0+128),w
  2133  0553  02C7               	subwf	(___lldiv@dividend+1)^(0+128),f
  2134  0554  0844               	movf	(___lldiv@divisor+2)^(0+128),w
  2135  0555  1C03               	skipc
  2136  0556  0F44               	incfsz	(___lldiv@divisor+2)^(0+128),w
  2137  0557  02C8               	subwf	(___lldiv@dividend+2)^(0+128),f
  2138  0558  0845               	movf	(___lldiv@divisor+3)^(0+128),w
  2139  0559  1C03               	skipc
  2140  055A  0F45               	incfsz	(___lldiv@divisor+3)^(0+128),w
  2141  055B  02C9               	subwf	(___lldiv@dividend+3)^(0+128),f
  2142  055C  144B               	bsf	___lldiv@quotient^(0+128),0
  2143  055D                     l1516:	
  2144  055D  3001               	movlw	1
  2145  055E                     u825:	
  2146  055E  1003               	clrc
  2147  055F  0CC5               	rrf	(___lldiv@divisor+3)^(0+128),f
  2148  0560  0CC4               	rrf	(___lldiv@divisor+2)^(0+128),f
  2149  0561  0CC3               	rrf	(___lldiv@divisor+1)^(0+128),f
  2150  0562  0CC2               	rrf	___lldiv@divisor^(0+128),f
  2151  0563  3EFF               	addlw	-1
  2152  0564  1D03               	skipz
  2153  0565  2D5E               	goto	u825
  2154  0566  3001               	movlw	1
  2155  0567  02CF               	subwf	___lldiv@counter^(0+128),f
  2156  0568  1D03               	btfss	3,2
  2157  0569  2D35               	goto	l1508
  2158  056A                     l1520:	
  2159  056A  084E               	movf	(___lldiv@quotient+3)^(0+128),w
  2160  056B  00C5               	movwf	(?___lldiv+3)^(0+128)
  2161  056C  084D               	movf	(___lldiv@quotient+2)^(0+128),w
  2162  056D  00C4               	movwf	(?___lldiv+2)^(0+128)
  2163  056E  084C               	movf	(___lldiv@quotient+1)^(0+128),w
  2164  056F  00C3               	movwf	(?___lldiv+1)^(0+128)
  2165  0570  084B               	movf	___lldiv@quotient^(0+128),w
  2166  0571  00C2               	movwf	?___lldiv^(0+128)
  2167  0572  0008               	return
  2168  0573                     __end_of___lldiv:	
  2169                           
  2170                           	psect	text6
  2171  004B                     __ptext6:	
  2172 ;; *************** function _InterReceiver *****************
  2173 ;; Defined at:
  2174 ;;		line 90 in file "UART.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;		None
  2177 ;; Auto vars:     Size  Location     Type
  2178 ;;  i               2   63[BANK0 ] int 
  2179 ;;  i               2   61[BANK0 ] int 
  2180 ;;  EEPROMCmdDat    2   54[BANK0 ] unsigned int 
  2181 ;;  EEPROMCmdDat    0   20[BANK0 ] unsigned char [0]
  2182 ;;  EEPROMTestDa    5   56[BANK0 ] unsigned char [5]
  2183 ;;  EEPROMCmdDat    2   52[BANK0 ] unsigned int 
  2184 ;;  EEPROMCmdDat    0   20[BANK0 ] unsigned char [0]
  2185 ;;  RXDATA         32   20[BANK0 ] unsigned char [32]
  2186 ;; Return value:  Size  Location     Type
  2187 ;;                  1    wreg      void 
  2188 ;; Registers used:
  2189 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2195 ;;      Params:         0       0       0       0       0
  2196 ;;      Locals:         0      45       0       0       0
  2197 ;;      Temps:          0       7       0       0       0
  2198 ;;      Totals:         0      52       0       0       0
  2199 ;;Total ram usage:       52 bytes
  2200 ;; Hardware stack levels used:    1
  2201 ;; Hardware stack levels required when called:    3
  2202 ;; This function calls:
  2203 ;;		_EEPROM_Read
  2204 ;;		_SendPacket
  2205 ;;		_getch
  2206 ;; This function is called by:
  2207 ;;		Interrupt level 1
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           
  2212                           ;psect for function _InterReceiver
  2213  004B                     _InterReceiver:	
  2214                           
  2215                           ;UART.c: 91: volatile static int intr_counter;
  2216                           ;UART.c: 92: if (RCIF == 1) {
  2217  004B  1E8C               	btfss	12,5	;volatile
  2218  004C  2A38               	goto	i1l95
  2219                           
  2220                           ;UART.c: 93: UBYTE RXDATA[32];
  2221                           ;UART.c: 96: RXDATA[0] = getch();
  2222  004D  120A  118A  26E2  120A  118A  	fcall	_getch
  2223  0052  1283               	bcf	3,5	;RP0=0, select bank0
  2224  0053  1303               	bcf	3,6	;RP1=0, select bank0
  2225  0054  00AD               	movwf	??_InterReceiver
  2226  0055  082D               	movf	??_InterReceiver,w
  2227  0056  00B4               	movwf	InterReceiver@RXDATA
  2228                           
  2229                           ;UART.c: 98: if (RXDATA[0] == 0x74){
  2230  0057  3074               	movlw	116
  2231  0058  0634               	xorwf	InterReceiver@RXDATA,w
  2232  0059  1D03               	btfss	3,2
  2233  005A  2909               	goto	i1l1746
  2234                           
  2235                           ;UART.c: 99: RB1 = 1;
  2236  005B  1486               	bsf	6,1	;volatile
  2237                           
  2238                           ;UART.c: 100: RXDATA[1] = getch();
  2239  005C  120A  118A  26E2  120A  118A  	fcall	_getch
  2240  0061  1283               	bcf	3,5	;RP0=0, select bank0
  2241  0062  1303               	bcf	3,6	;RP1=0, select bank0
  2242  0063  00AD               	movwf	??_InterReceiver
  2243  0064  082D               	movf	??_InterReceiver,w
  2244  0065  00B5               	movwf	InterReceiver@RXDATA+1
  2245                           
  2246                           ;UART.c: 101: RXDATA[2] = getch();
  2247  0066  120A  118A  26E2  120A  118A  	fcall	_getch
  2248  006B  1283               	bcf	3,5	;RP0=0, select bank0
  2249  006C  1303               	bcf	3,6	;RP1=0, select bank0
  2250  006D  00AD               	movwf	??_InterReceiver
  2251  006E  082D               	movf	??_InterReceiver,w
  2252  006F  00B6               	movwf	InterReceiver@RXDATA+2
  2253                           
  2254                           ;UART.c: 102: RCIF = 0 ;
  2255  0070  128C               	bcf	12,5	;volatile
  2256                           
  2257                           ;UART.c: 104: _delay((unsigned long)((200)*(10000000/4000.0)));
  2258  0071  3003               	movlw	3
  2259  0072  1283               	bcf	3,5	;RP0=0, select bank0
  2260  0073  1303               	bcf	3,6	;RP1=0, select bank0
  2261  0074  00AF               	movwf	??_InterReceiver+2
  2262  0075  308A               	movlw	138
  2263  0076  00AE               	movwf	??_InterReceiver+1
  2264  0077  3055               	movlw	85
  2265  0078  00AD               	movwf	??_InterReceiver
  2266  0079                     u116_27:	
  2267  0079  0BAD               	decfsz	??_InterReceiver,f
  2268  007A  2879               	goto	u116_27
  2269  007B  0BAE               	decfsz	??_InterReceiver+1,f
  2270  007C  2879               	goto	u116_27
  2271  007D  0BAF               	decfsz	??_InterReceiver+2,f
  2272  007E  2879               	goto	u116_27
  2273                           
  2274                           ;UART.c: 105: UBYTE EEPROMCmdData[];
  2275                           ;UART.c: 106: UINT EEPROMCmdDataLength;
  2276                           ;UART.c: 107: EEPROMCmdDataLength = 32;
  2277  007F  3020               	movlw	32
  2278  0080  1283               	bcf	3,5	;RP0=0, select bank0
  2279  0081  1303               	bcf	3,6	;RP1=0, select bank0
  2280  0082  00D4               	movwf	InterReceiver@EEPROMCmdDataLength
  2281  0083  3000               	movlw	0
  2282  0084  00D5               	movwf	InterReceiver@EEPROMCmdDataLength+1
  2283                           
  2284                           ;UART.c: 108: EEPROM_Read(0x50,RXDATA[1],RXDATA[2], EEPROMCmdData,EEPROMCmdDataLength);
  2285  0085  0835               	movf	InterReceiver@RXDATA+1,w
  2286  0086  00AD               	movwf	??_InterReceiver
  2287  0087  082D               	movf	??_InterReceiver,w
  2288  0088  00F3               	movwf	EEPROM_Read@high_address
  2289  0089  0836               	movf	InterReceiver@RXDATA+2,w
  2290  008A  00AE               	movwf	??_InterReceiver+1
  2291  008B  082E               	movf	??_InterReceiver+1,w
  2292  008C  00F4               	movwf	EEPROM_Read@low_address
  2293  008D  3034               	movlw	low InterReceiver@EEPROMCmdData
  2294  008E  00F5               	movwf	EEPROM_Read@ReadData
  2295  008F  3000               	movlw	high InterReceiver@EEPROMCmdData
  2296  0090  00F6               	movwf	EEPROM_Read@ReadData+1
  2297  0091  0854               	movf	InterReceiver@EEPROMCmdDataLength,w
  2298  0092  00F7               	movwf	EEPROM_Read@EEPROMDataLength
  2299  0093  0855               	movf	InterReceiver@EEPROMCmdDataLength+1,w
  2300  0094  00F8               	movwf	EEPROM_Read@EEPROMDataLength+1
  2301  0095  3050               	movlw	80
  2302  0096  120A  118A  2262  120A  118A  	fcall	_EEPROM_Read
  2303                           
  2304                           ;UART.c: 109: _delay((unsigned long)((200)*(10000000/4000.0)));
  2305  009B  3003               	movlw	3
  2306  009C  1283               	bcf	3,5	;RP0=0, select bank0
  2307  009D  1303               	bcf	3,6	;RP1=0, select bank0
  2308  009E  00AF               	movwf	??_InterReceiver+2
  2309  009F  308A               	movlw	138
  2310  00A0  00AE               	movwf	??_InterReceiver+1
  2311  00A1  3055               	movlw	85
  2312  00A2  00AD               	movwf	??_InterReceiver
  2313  00A3                     u117_27:	
  2314  00A3  0BAD               	decfsz	??_InterReceiver,f
  2315  00A4  28A3               	goto	u117_27
  2316  00A5  0BAE               	decfsz	??_InterReceiver+1,f
  2317  00A6  28A3               	goto	u117_27
  2318  00A7  0BAF               	decfsz	??_InterReceiver+2,f
  2319  00A8  28A3               	goto	u117_27
  2320                           
  2321                           ;UART.c: 110: RC0 = 1;
  2322  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  2323  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  2324  00AB  1407               	bsf	7,0	;volatile
  2325                           
  2326                           ;UART.c: 111: RB3 = 0;
  2327  00AC  1186               	bcf	6,3	;volatile
  2328                           
  2329                           ;UART.c: 112: UBYTE EEPROMTestData[5];
  2330                           ;UART.c: 113: EEPROMTestData[0] = 'u';
  2331  00AD  3075               	movlw	117
  2332  00AE  00AD               	movwf	??_InterReceiver
  2333  00AF  082D               	movf	??_InterReceiver,w
  2334  00B0  00D8               	movwf	InterReceiver@EEPROMTestData
  2335                           
  2336                           ;UART.c: 114: EEPROMTestData[1] = 'n';
  2337  00B1  306E               	movlw	110
  2338  00B2  00AD               	movwf	??_InterReceiver
  2339  00B3  082D               	movf	??_InterReceiver,w
  2340  00B4  00D9               	movwf	InterReceiver@EEPROMTestData+1
  2341                           
  2342                           ;UART.c: 115: EEPROMTestData[2] = 'k';
  2343  00B5  306B               	movlw	107
  2344  00B6  00AD               	movwf	??_InterReceiver
  2345  00B7  082D               	movf	??_InterReceiver,w
  2346  00B8  00DA               	movwf	InterReceiver@EEPROMTestData+2
  2347                           
  2348                           ;UART.c: 116: EEPROMTestData[3] = 'o';
  2349  00B9  306F               	movlw	111
  2350  00BA  00AD               	movwf	??_InterReceiver
  2351  00BB  082D               	movf	??_InterReceiver,w
  2352  00BC  00DB               	movwf	InterReceiver@EEPROMTestData+3
  2353                           
  2354                           ;UART.c: 117: EEPROMTestData[4] = 0x0d;
  2355  00BD  300D               	movlw	13
  2356  00BE  00AD               	movwf	??_InterReceiver
  2357  00BF  082D               	movf	??_InterReceiver,w
  2358  00C0  00DC               	movwf	InterReceiver@EEPROMTestData+4
  2359                           
  2360                           ;UART.c: 118: for(int i = 0; i<5;i++){
  2361  00C1  01DD               	clrf	InterReceiver@i
  2362  00C2  01DE               	clrf	InterReceiver@i+1
  2363  00C3                     L2:	
  2364  00C3  085E               	movf	InterReceiver@i+1,w
  2365  00C4  3A80               	xorlw	128
  2366  00C5  00FF               	movwf	127
  2367  00C6  3080               	movlw	128
  2368  00C7  027F               	subwf	127,w
  2369  00C8  1D03               	skipz
  2370  00C9  28CC               	goto	u97_25
  2371  00CA  3005               	movlw	5
  2372  00CB  025D               	subwf	InterReceiver@i,w
  2373  00CC                     u97_25:	
  2374  00CC  1803               	btfsc	3,0
  2375  00CD  2998               	goto	i1l102
  2376                           
  2377                           ;UART.c: 119: SendPacket(EEPROMCmdData);
  2378  00CE  3034               	movlw	low InterReceiver@EEPROMCmdData
  2379  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  2380  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  2381  00D1  00A0               	movwf	SendPacket@eDataField
  2382  00D2  3000               	movlw	high InterReceiver@EEPROMCmdData
  2383  00D3  00A1               	movwf	SendPacket@eDataField+1
  2384  00D4  120A  118A  233F  120A  118A  	fcall	_SendPacket
  2385                           
  2386                           ;UART.c: 120: _delay((unsigned long)((300)*(10000000/4000.0)));
  2387  00D9  3004               	movlw	4
  2388  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  2389  00DB  1303               	bcf	3,6	;RP1=0, select bank0
  2390  00DC  00AF               	movwf	??_InterReceiver+2
  2391  00DD  30CF               	movlw	207
  2392  00DE  00AE               	movwf	??_InterReceiver+1
  2393  00DF  3001               	movlw	1
  2394  00E0  00AD               	movwf	??_InterReceiver
  2395  00E1                     u118_27:	
  2396  00E1  0BAD               	decfsz	??_InterReceiver,f
  2397  00E2  28E1               	goto	u118_27
  2398  00E3  0BAE               	decfsz	??_InterReceiver+1,f
  2399  00E4  28E1               	goto	u118_27
  2400  00E5  0BAF               	decfsz	??_InterReceiver+2,f
  2401  00E6  28E1               	goto	u118_27
  2402                           
  2403                           ;UART.c: 121: SendPacket(EEPROMTestData);
  2404  00E7  3058               	movlw	(low (InterReceiver@EEPROMTestData| 0))& (0+255)
  2405  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  2406  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  2407  00EA  00A0               	movwf	SendPacket@eDataField
  2408  00EB  3000               	movlw	0
  2409  00EC  00A1               	movwf	SendPacket@eDataField+1
  2410  00ED  120A  118A  233F  120A  118A  	fcall	_SendPacket
  2411                           
  2412                           ;UART.c: 122: _delay((unsigned long)((300)*(10000000/4000.0)));
  2413  00F2  3004               	movlw	4
  2414  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  2415  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  2416  00F5  00AF               	movwf	??_InterReceiver+2
  2417  00F6  30CF               	movlw	207
  2418  00F7  00AE               	movwf	??_InterReceiver+1
  2419  00F8  3001               	movlw	1
  2420  00F9  00AD               	movwf	??_InterReceiver
  2421  00FA                     u119_27:	
  2422  00FA  0BAD               	decfsz	??_InterReceiver,f
  2423  00FB  28FA               	goto	u119_27
  2424  00FC  0BAE               	decfsz	??_InterReceiver+1,f
  2425  00FD  28FA               	goto	u119_27
  2426  00FE  0BAF               	decfsz	??_InterReceiver+2,f
  2427  00FF  28FA               	goto	u119_27
  2428  0100  3001               	movlw	1
  2429  0101  1283               	bcf	3,5	;RP0=0, select bank0
  2430  0102  1303               	bcf	3,6	;RP1=0, select bank0
  2431  0103  07DD               	addwf	InterReceiver@i,f
  2432  0104  1803               	skipnc
  2433  0105  0ADE               	incf	InterReceiver@i+1,f
  2434  0106  3000               	movlw	0
  2435  0107  07DE               	addwf	InterReceiver@i+1,f
  2436  0108  28C3               	goto	L2
  2437  0109                     i1l1746:	
  2438                           ;UART.c: 126: }else if (RXDATA[0] == 0xCC){
  2439                           
  2440                           ;UART.c: 125: RB1 = 0;
  2441                           
  2442                           ;UART.c: 123: }
  2443                           ;UART.c: 124: RC0 = 0;
  2444                           
  2445  0109  30CC               	movlw	204
  2446  010A  0634               	xorwf	InterReceiver@RXDATA,w
  2447  010B  1D03               	btfss	3,2
  2448  010C  299C               	goto	i1l1780
  2449                           
  2450                           ;UART.c: 127: RB1 = 1;
  2451  010D  1486               	bsf	6,1	;volatile
  2452                           
  2453                           ;UART.c: 128: RXDATA[1] = getch();
  2454  010E  120A  118A  26E2  120A  118A  	fcall	_getch
  2455  0113  1283               	bcf	3,5	;RP0=0, select bank0
  2456  0114  1303               	bcf	3,6	;RP1=0, select bank0
  2457  0115  00AD               	movwf	??_InterReceiver
  2458  0116  082D               	movf	??_InterReceiver,w
  2459  0117  00B5               	movwf	InterReceiver@RXDATA+1
  2460                           
  2461                           ;UART.c: 129: RXDATA[2] = getch();
  2462  0118  120A  118A  26E2  120A  118A  	fcall	_getch
  2463  011D  1283               	bcf	3,5	;RP0=0, select bank0
  2464  011E  1303               	bcf	3,6	;RP1=0, select bank0
  2465  011F  00AD               	movwf	??_InterReceiver
  2466  0120  082D               	movf	??_InterReceiver,w
  2467  0121  00B6               	movwf	InterReceiver@RXDATA+2
  2468                           
  2469                           ;UART.c: 130: RCIF = 0 ;
  2470  0122  128C               	bcf	12,5	;volatile
  2471                           
  2472                           ;UART.c: 132: _delay((unsigned long)((200)*(10000000/4000.0)));
  2473  0123  3003               	movlw	3
  2474  0124  1283               	bcf	3,5	;RP0=0, select bank0
  2475  0125  1303               	bcf	3,6	;RP1=0, select bank0
  2476  0126  00AF               	movwf	??_InterReceiver+2
  2477  0127  308A               	movlw	138
  2478  0128  00AE               	movwf	??_InterReceiver+1
  2479  0129  3055               	movlw	85
  2480  012A  00AD               	movwf	??_InterReceiver
  2481  012B                     u120_27:	
  2482  012B  0BAD               	decfsz	??_InterReceiver,f
  2483  012C  292B               	goto	u120_27
  2484  012D  0BAE               	decfsz	??_InterReceiver+1,f
  2485  012E  292B               	goto	u120_27
  2486  012F  0BAF               	decfsz	??_InterReceiver+2,f
  2487  0130  292B               	goto	u120_27
  2488                           
  2489                           ;UART.c: 133: UBYTE EEPROMCmdData[];
  2490                           ;UART.c: 134: UINT EEPROMCmdDataLength;
  2491                           ;UART.c: 135: EEPROMCmdDataLength = 1;
  2492  0131  3001               	movlw	1
  2493  0132  1283               	bcf	3,5	;RP0=0, select bank0
  2494  0133  1303               	bcf	3,6	;RP1=0, select bank0
  2495  0134  00D6               	movwf	InterReceiver@EEPROMCmdDataLength_110
  2496  0135  3000               	movlw	0
  2497  0136  00D7               	movwf	InterReceiver@EEPROMCmdDataLength_110+1
  2498                           
  2499                           ;UART.c: 136: EEPROM_Read(0x50,RXDATA[1],RXDATA[2], EEPROMCmdData,EEPROMCmdDataLength);
  2500  0137  0835               	movf	InterReceiver@RXDATA+1,w
  2501  0138  00AD               	movwf	??_InterReceiver
  2502  0139  082D               	movf	??_InterReceiver,w
  2503  013A  00F3               	movwf	EEPROM_Read@high_address
  2504  013B  0836               	movf	InterReceiver@RXDATA+2,w
  2505  013C  00AE               	movwf	??_InterReceiver+1
  2506  013D  082E               	movf	??_InterReceiver+1,w
  2507  013E  00F4               	movwf	EEPROM_Read@low_address
  2508  013F  3034               	movlw	low InterReceiver@EEPROMCmdData_109
  2509  0140  00F5               	movwf	EEPROM_Read@ReadData
  2510  0141  3000               	movlw	high InterReceiver@EEPROMCmdData_109
  2511  0142  00F6               	movwf	EEPROM_Read@ReadData+1
  2512  0143  0856               	movf	InterReceiver@EEPROMCmdDataLength_110,w
  2513  0144  00F7               	movwf	EEPROM_Read@EEPROMDataLength
  2514  0145  0857               	movf	InterReceiver@EEPROMCmdDataLength_110+1,w
  2515  0146  00F8               	movwf	EEPROM_Read@EEPROMDataLength+1
  2516  0147  3050               	movlw	80
  2517  0148  120A  118A  2262  120A  118A  	fcall	_EEPROM_Read
  2518                           
  2519                           ;UART.c: 137: _delay((unsigned long)((200)*(10000000/4000.0)));
  2520  014D  3003               	movlw	3
  2521  014E  1283               	bcf	3,5	;RP0=0, select bank0
  2522  014F  1303               	bcf	3,6	;RP1=0, select bank0
  2523  0150  00AF               	movwf	??_InterReceiver+2
  2524  0151  308A               	movlw	138
  2525  0152  00AE               	movwf	??_InterReceiver+1
  2526  0153  3055               	movlw	85
  2527  0154  00AD               	movwf	??_InterReceiver
  2528  0155                     u121_27:	
  2529  0155  0BAD               	decfsz	??_InterReceiver,f
  2530  0156  2955               	goto	u121_27
  2531  0157  0BAE               	decfsz	??_InterReceiver+1,f
  2532  0158  2955               	goto	u121_27
  2533  0159  0BAF               	decfsz	??_InterReceiver+2,f
  2534  015A  2955               	goto	u121_27
  2535                           
  2536                           ;UART.c: 138: RC0 = 1;
  2537  015B  1283               	bcf	3,5	;RP0=0, select bank0
  2538  015C  1303               	bcf	3,6	;RP1=0, select bank0
  2539  015D  1407               	bsf	7,0	;volatile
  2540                           
  2541                           ;UART.c: 139: RB3 = 0;
  2542  015E  1186               	bcf	6,3	;volatile
  2543                           
  2544                           ;UART.c: 140: for(int i = 0; i<5;i++){
  2545  015F  01DF               	clrf	InterReceiver@i_111
  2546  0160  01E0               	clrf	InterReceiver@i_111+1
  2547  0161  0860               	movf	InterReceiver@i_111+1,w
  2548  0162  3A80               	xorlw	128
  2549  0163  00FF               	movwf	127
  2550  0164  3080               	movlw	128
  2551  0165  027F               	subwf	127,w
  2552  0166  1D03               	skipz
  2553  0167  296A               	goto	u100_25
  2554  0168  3005               	movlw	5
  2555  0169  025F               	subwf	InterReceiver@i_111,w
  2556  016A                     u100_25:	
  2557  016A  1803               	btfsc	3,0
  2558  016B  2998               	goto	i1l102
  2559  016C                     i1l1772:	
  2560                           
  2561                           ;UART.c: 141: SendPacket(EEPROMCmdData);
  2562  016C  3034               	movlw	low InterReceiver@EEPROMCmdData_109
  2563  016D  1283               	bcf	3,5	;RP0=0, select bank0
  2564  016E  1303               	bcf	3,6	;RP1=0, select bank0
  2565  016F  00A0               	movwf	SendPacket@eDataField
  2566  0170  3000               	movlw	high InterReceiver@EEPROMCmdData_109
  2567  0171  00A1               	movwf	SendPacket@eDataField+1
  2568  0172  120A  118A  233F  120A  118A  	fcall	_SendPacket
  2569                           
  2570                           ;UART.c: 142: _delay((unsigned long)((300)*(10000000/4000.0)));
  2571  0177  3004               	movlw	4
  2572  0178  1283               	bcf	3,5	;RP0=0, select bank0
  2573  0179  1303               	bcf	3,6	;RP1=0, select bank0
  2574  017A  00AF               	movwf	??_InterReceiver+2
  2575  017B  30CF               	movlw	207
  2576  017C  00AE               	movwf	??_InterReceiver+1
  2577  017D  3001               	movlw	1
  2578  017E  00AD               	movwf	??_InterReceiver
  2579  017F                     u122_27:	
  2580  017F  0BAD               	decfsz	??_InterReceiver,f
  2581  0180  297F               	goto	u122_27
  2582  0181  0BAE               	decfsz	??_InterReceiver+1,f
  2583  0182  297F               	goto	u122_27
  2584  0183  0BAF               	decfsz	??_InterReceiver+2,f
  2585  0184  297F               	goto	u122_27
  2586  0185  3001               	movlw	1
  2587  0186  1283               	bcf	3,5	;RP0=0, select bank0
  2588  0187  1303               	bcf	3,6	;RP1=0, select bank0
  2589  0188  07DF               	addwf	InterReceiver@i_111,f
  2590  0189  1803               	skipnc
  2591  018A  0AE0               	incf	InterReceiver@i_111+1,f
  2592  018B  3000               	movlw	0
  2593  018C  07E0               	addwf	InterReceiver@i_111+1,f
  2594  018D  0860               	movf	InterReceiver@i_111+1,w
  2595  018E  3A80               	xorlw	128
  2596  018F  00FF               	movwf	127
  2597  0190  3080               	movlw	128
  2598  0191  027F               	subwf	127,w
  2599  0192  1D03               	skipz
  2600  0193  2996               	goto	u101_25
  2601  0194  3005               	movlw	5
  2602  0195  025F               	subwf	InterReceiver@i_111,w
  2603  0196                     u101_25:	
  2604  0196  1C03               	skipc
  2605  0197  296C               	goto	i1l1772
  2606  0198                     i1l102:	
  2607                           
  2608                           ;UART.c: 143: }
  2609                           ;UART.c: 144: RC0 = 0;
  2610  0198  1283               	bcf	3,5	;RP0=0, select bank0
  2611  0199  1303               	bcf	3,6	;RP1=0, select bank0
  2612  019A  1007               	bcf	7,0	;volatile
  2613  019B  2A34               	goto	L1
  2614  019C                     i1l1780:	
  2615                           ;UART.c: 146: }else if (RXDATA[0] == 0xDD){
  2616                           
  2617                           ;UART.c: 145: RB1 = 0;
  2618                           
  2619  019C  30DD               	movlw	221
  2620  019D  0634               	xorwf	InterReceiver@RXDATA,w
  2621  019E  1D03               	btfss	3,2
  2622  019F  2A36               	goto	i1l104
  2623                           
  2624                           ;UART.c: 147: RB1 = 1;
  2625  01A0  1486               	bsf	6,1	;volatile
  2626                           
  2627                           ;UART.c: 148: RXDATA[1] = getch();
  2628  01A1  120A  118A  26E2  120A  118A  	fcall	_getch
  2629  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  2630  01A7  1303               	bcf	3,6	;RP1=0, select bank0
  2631  01A8  00AD               	movwf	??_InterReceiver
  2632  01A9  082D               	movf	??_InterReceiver,w
  2633  01AA  00B5               	movwf	InterReceiver@RXDATA+1
  2634                           
  2635                           ;UART.c: 149: RCIF = 0 ;
  2636  01AB  128C               	bcf	12,5	;volatile
  2637                           
  2638                           ;UART.c: 151: _delay((unsigned long)((200)*(10000000/4000.0)));
  2639  01AC  3003               	movlw	3
  2640  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  2641  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  2642  01AF  00AF               	movwf	??_InterReceiver+2
  2643  01B0  308A               	movlw	138
  2644  01B1  00AE               	movwf	??_InterReceiver+1
  2645  01B2  3055               	movlw	85
  2646  01B3  00AD               	movwf	??_InterReceiver
  2647  01B4                     u123_27:	
  2648  01B4  0BAD               	decfsz	??_InterReceiver,f
  2649  01B5  29B4               	goto	u123_27
  2650  01B6  0BAE               	decfsz	??_InterReceiver+1,f
  2651  01B7  29B4               	goto	u123_27
  2652  01B8  0BAF               	decfsz	??_InterReceiver+2,f
  2653  01B9  29B4               	goto	u123_27
  2654                           
  2655                           ;UART.c: 152: if (RXDATA[1] == 0xDD){
  2656  01BA  30DD               	movlw	221
  2657  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  2658  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  2659  01BD  0635               	xorwf	InterReceiver@RXDATA+1,w
  2660  01BE  1D03               	btfss	3,2
  2661  01BF  2A32               	goto	i1l1810
  2662                           
  2663                           ;UART.c: 153: RB3 = 1;
  2664  01C0  1586               	bsf	6,3	;volatile
  2665                           
  2666                           ;UART.c: 154: _delay((unsigned long)((50)*(10000000/4000.0)));
  2667  01C1  30A3               	movlw	163
  2668  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  2669  01C3  1303               	bcf	3,6	;RP1=0, select bank0
  2670  01C4  00AE               	movwf	??_InterReceiver+1
  2671  01C5  3054               	movlw	84
  2672  01C6  00AD               	movwf	??_InterReceiver
  2673  01C7                     u124_27:	
  2674  01C7  0BAD               	decfsz	??_InterReceiver,f
  2675  01C8  29C7               	goto	u124_27
  2676  01C9  0BAE               	decfsz	??_InterReceiver+1,f
  2677  01CA  29C7               	goto	u124_27
  2678  01CB  0000               	nop
  2679                           
  2680                           ;UART.c: 155: RB3 = 0;
  2681  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  2682  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  2683  01CE  1186               	bcf	6,3	;volatile
  2684                           
  2685                           ;UART.c: 156: _delay((unsigned long)((50)*(10000000/4000.0)));
  2686  01CF  30A3               	movlw	163
  2687  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  2688  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  2689  01D2  00AE               	movwf	??_InterReceiver+1
  2690  01D3  3054               	movlw	84
  2691  01D4  00AD               	movwf	??_InterReceiver
  2692  01D5                     u125_27:	
  2693  01D5  0BAD               	decfsz	??_InterReceiver,f
  2694  01D6  29D5               	goto	u125_27
  2695  01D7  0BAE               	decfsz	??_InterReceiver+1,f
  2696  01D8  29D5               	goto	u125_27
  2697  01D9  0000               	nop
  2698                           
  2699                           ;UART.c: 158: RB3 = 1;
  2700  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  2701  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  2702  01DC  1586               	bsf	6,3	;volatile
  2703                           
  2704                           ;UART.c: 159: _delay((unsigned long)((50)*(10000000/4000.0)));
  2705  01DD  30A3               	movlw	163
  2706  01DE  1283               	bcf	3,5	;RP0=0, select bank0
  2707  01DF  1303               	bcf	3,6	;RP1=0, select bank0
  2708  01E0  00AE               	movwf	??_InterReceiver+1
  2709  01E1  3054               	movlw	84
  2710  01E2  00AD               	movwf	??_InterReceiver
  2711  01E3                     u126_27:	
  2712  01E3  0BAD               	decfsz	??_InterReceiver,f
  2713  01E4  29E3               	goto	u126_27
  2714  01E5  0BAE               	decfsz	??_InterReceiver+1,f
  2715  01E6  29E3               	goto	u126_27
  2716  01E7  0000               	nop
  2717                           
  2718                           ;UART.c: 160: RB3 = 0;
  2719  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  2720  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  2721  01EA  1186               	bcf	6,3	;volatile
  2722                           
  2723                           ;UART.c: 161: _delay((unsigned long)((50)*(10000000/4000.0)));
  2724  01EB  30A3               	movlw	163
  2725  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  2726  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  2727  01EE  00AE               	movwf	??_InterReceiver+1
  2728  01EF  3054               	movlw	84
  2729  01F0  00AD               	movwf	??_InterReceiver
  2730  01F1                     u127_27:	
  2731  01F1  0BAD               	decfsz	??_InterReceiver,f
  2732  01F2  29F1               	goto	u127_27
  2733  01F3  0BAE               	decfsz	??_InterReceiver+1,f
  2734  01F4  29F1               	goto	u127_27
  2735  01F5  0000               	nop
  2736                           
  2737                           ;UART.c: 163: RB3 = 1;
  2738  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  2739  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  2740  01F8  1586               	bsf	6,3	;volatile
  2741                           
  2742                           ;UART.c: 164: _delay((unsigned long)((50)*(10000000/4000.0)));
  2743  01F9  30A3               	movlw	163
  2744  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  2745  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  2746  01FC  00AE               	movwf	??_InterReceiver+1
  2747  01FD  3054               	movlw	84
  2748  01FE  00AD               	movwf	??_InterReceiver
  2749  01FF                     u128_27:	
  2750  01FF  0BAD               	decfsz	??_InterReceiver,f
  2751  0200  29FF               	goto	u128_27
  2752  0201  0BAE               	decfsz	??_InterReceiver+1,f
  2753  0202  29FF               	goto	u128_27
  2754  0203  0000               	nop
  2755                           
  2756                           ;UART.c: 165: RB3 = 0;
  2757  0204  1283               	bcf	3,5	;RP0=0, select bank0
  2758  0205  1303               	bcf	3,6	;RP1=0, select bank0
  2759  0206  1186               	bcf	6,3	;volatile
  2760                           
  2761                           ;UART.c: 166: _delay((unsigned long)((50)*(10000000/4000.0)));
  2762  0207  30A3               	movlw	163
  2763  0208  1283               	bcf	3,5	;RP0=0, select bank0
  2764  0209  1303               	bcf	3,6	;RP1=0, select bank0
  2765  020A  00AE               	movwf	??_InterReceiver+1
  2766  020B  3054               	movlw	84
  2767  020C  00AD               	movwf	??_InterReceiver
  2768  020D                     u129_27:	
  2769  020D  0BAD               	decfsz	??_InterReceiver,f
  2770  020E  2A0D               	goto	u129_27
  2771  020F  0BAE               	decfsz	??_InterReceiver+1,f
  2772  0210  2A0D               	goto	u129_27
  2773  0211  0000               	nop
  2774                           
  2775                           ;UART.c: 168: RB3 = 1;
  2776  0212  1283               	bcf	3,5	;RP0=0, select bank0
  2777  0213  1303               	bcf	3,6	;RP1=0, select bank0
  2778  0214  1586               	bsf	6,3	;volatile
  2779                           
  2780                           ;UART.c: 169: _delay((unsigned long)((150)*(10000000/4000.0)));
  2781  0215  3002               	movlw	2
  2782  0216  1283               	bcf	3,5	;RP0=0, select bank0
  2783  0217  1303               	bcf	3,6	;RP1=0, select bank0
  2784  0218  00AF               	movwf	??_InterReceiver+2
  2785  0219  30E7               	movlw	231
  2786  021A  00AE               	movwf	??_InterReceiver+1
  2787  021B  30FF               	movlw	255
  2788  021C  00AD               	movwf	??_InterReceiver
  2789  021D                     u130_27:	
  2790  021D  0BAD               	decfsz	??_InterReceiver,f
  2791  021E  2A1D               	goto	u130_27
  2792  021F  0BAE               	decfsz	??_InterReceiver+1,f
  2793  0220  2A1D               	goto	u130_27
  2794  0221  0BAF               	decfsz	??_InterReceiver+2,f
  2795  0222  2A1D               	goto	u130_27
  2796  0223  2A24               	nop2
  2797                           
  2798                           ;UART.c: 170: RB3 = 0;
  2799  0224  1283               	bcf	3,5	;RP0=0, select bank0
  2800  0225  1303               	bcf	3,6	;RP1=0, select bank0
  2801  0226  1186               	bcf	6,3	;volatile
  2802                           
  2803                           ;UART.c: 171: _delay((unsigned long)((50)*(10000000/4000.0)));
  2804  0227  30A3               	movlw	163
  2805  0228  1283               	bcf	3,5	;RP0=0, select bank0
  2806  0229  1303               	bcf	3,6	;RP1=0, select bank0
  2807  022A  00AE               	movwf	??_InterReceiver+1
  2808  022B  3054               	movlw	84
  2809  022C  00AD               	movwf	??_InterReceiver
  2810  022D                     u131_27:	
  2811  022D  0BAD               	decfsz	??_InterReceiver,f
  2812  022E  2A2D               	goto	u131_27
  2813  022F  0BAE               	decfsz	??_InterReceiver+1,f
  2814  0230  2A2D               	goto	u131_27
  2815  0231  0000               	nop
  2816  0232                     i1l1810:	
  2817                           
  2818                           ;UART.c: 172: }
  2819                           ;UART.c: 174: RB1 = 0;
  2820  0232  1283               	bcf	3,5	;RP0=0, select bank0
  2821  0233  1303               	bcf	3,6	;RP1=0, select bank0
  2822  0234                     L1:	
  2823  0234  1086               	bcf	6,1	;volatile
  2824                           
  2825                           ;UART.c: 175: }else{
  2826  0235  2A57               	goto	i1l110
  2827  0236                     i1l104:	
  2828                           
  2829                           ;UART.c: 176: RCIF = 0 ;
  2830  0236  128C               	bcf	12,5	;volatile
  2831                           
  2832                           ;UART.c: 178: }
  2833                           ;UART.c: 179: }else if(PIR1bits.TMR1IF == 1){
  2834  0237  2A57               	goto	i1l110
  2835  0238                     i1l95:	
  2836  0238  1C0C               	btfss	12,0	;volatile
  2837  0239  2A57               	goto	i1l110
  2838                           
  2839                           ;UART.c: 180: TMR1 = (0xffff - 62500);
  2840  023A  300B               	movlw	11
  2841  023B  008F               	movwf	15	;volatile
  2842  023C  30DB               	movlw	219
  2843  023D  008E               	movwf	14	;volatile
  2844                           
  2845                           ;UART.c: 182: intr_counter++;
  2846  023E  3001               	movlw	1
  2847  023F  07E9               	addwf	InterReceiver@intr_counter,f	;volatile
  2848  0240  1803               	skipnc
  2849  0241  0AEA               	incf	InterReceiver@intr_counter+1,f	;volatile
  2850  0242  3000               	movlw	0
  2851  0243  07EA               	addwf	InterReceiver@intr_counter+1,f	;volatile
  2852                           
  2853                           ;UART.c: 183: if (intr_counter >= 2) {
  2854  0244  086A               	movf	InterReceiver@intr_counter+1,w	;volatile
  2855  0245  3A80               	xorlw	128
  2856  0246  00FF               	movwf	127
  2857  0247  3080               	movlw	128
  2858  0248  027F               	subwf	127,w
  2859  0249  1D03               	skipz
  2860  024A  2A4D               	goto	u105_25
  2861  024B  3002               	movlw	2
  2862  024C  0269               	subwf	InterReceiver@intr_counter,w	;volatile
  2863  024D                     u105_25:	
  2864  024D  1C03               	skipc
  2865  024E  2A54               	goto	i1l1822
  2866  024F  0064               	clrwdt	;# 
  2867                           
  2868                           ;UART.c: 185: intr_counter = 0;
  2869  0250  1283               	bcf	3,5	;RP0=0, select bank0
  2870  0251  1303               	bcf	3,6	;RP1=0, select bank0
  2871  0252  01E9               	clrf	InterReceiver@intr_counter	;volatile
  2872  0253  01EA               	clrf	InterReceiver@intr_counter+1	;volatile
  2873  0254                     i1l1822:	
  2874                           
  2875                           ;UART.c: 186: }
  2876                           ;UART.c: 188: PIR1bits.TMR1IF = 0;
  2877  0254  1283               	bcf	3,5	;RP0=0, select bank0
  2878  0255  1303               	bcf	3,6	;RP1=0, select bank0
  2879  0256  100C               	bcf	12,0	;volatile
  2880  0257                     i1l110:	
  2881  0257  0833               	movf	??_InterReceiver+6,w
  2882  0258  00FF               	movwf	127
  2883  0259  0832               	movf	??_InterReceiver+5,w
  2884  025A  008A               	movwf	10
  2885  025B  0831               	movf	??_InterReceiver+4,w
  2886  025C  0084               	movwf	4
  2887  025D  0E30               	swapf	(??_InterReceiver+3)^0,w
  2888  025E  0083               	movwf	3
  2889  025F  0EFE               	swapf	126,f
  2890  0260  0E7E               	swapf	126,w
  2891  0261  0009               	retfie
  2892  0262                     __end_of_InterReceiver:	
  2893                           
  2894                           	psect	intentry
  2895  0004                     __pintentry:	
  2896                           ;incstack = 0
  2897                           ; Regs used in _InterReceiver: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2898                           
  2899  0004                     interrupt_function:	
  2900  007E                     saved_w	set	btemp
  2901  0004  00FE               	movwf	btemp
  2902  0005  0E03               	swapf	3,w
  2903  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2904  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2905  0008  00B0               	movwf	??_InterReceiver+3
  2906  0009  0804               	movf	4,w
  2907  000A  00B1               	movwf	??_InterReceiver+4
  2908  000B  080A               	movf	10,w
  2909  000C  00B2               	movwf	??_InterReceiver+5
  2910  000D  087F               	movf	btemp+1,w
  2911  000E  00B3               	movwf	??_InterReceiver+6
  2912  000F  120A  118A  284B   	ljmp	_InterReceiver
  2913                           
  2914                           	psect	text7
  2915  06E2                     __ptext7:	
  2916 ;; *************** function _getch *****************
  2917 ;; Defined at:
  2918 ;;		line 28 in file "UART.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;		None
  2921 ;; Auto vars:     Size  Location     Type
  2922 ;;		None
  2923 ;; Return value:  Size  Location     Type
  2924 ;;                  1    wreg      unsigned char 
  2925 ;; Registers used:
  2926 ;;		wreg
  2927 ;; Tracked objects:
  2928 ;;		On entry : 0/0
  2929 ;;		On exit  : 0/0
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2932 ;;      Params:         0       0       0       0       0
  2933 ;;      Locals:         0       0       0       0       0
  2934 ;;      Temps:          0       0       0       0       0
  2935 ;;      Totals:         0       0       0       0       0
  2936 ;;Total ram usage:        0 bytes
  2937 ;; Hardware stack levels used:    1
  2938 ;; This function calls:
  2939 ;;		Nothing
  2940 ;; This function is called by:
  2941 ;;		_InterReceiver
  2942 ;; This function uses a non-reentrant model
  2943 ;;
  2944                           
  2945                           
  2946                           ;psect for function _getch
  2947  06E2                     _getch:	
  2948                           
  2949                           ;UART.c: 30: if(FERR || OERR)
  2950                           
  2951                           ;incstack = 0
  2952                           ; Regs used in _getch: [wreg]
  2953  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  2954  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  2955  06E4  1918               	btfsc	24,2	;volatile
  2956  06E5  2EE8               	goto	i1l78
  2957  06E6  1C98               	btfss	24,1	;volatile
  2958  06E7  2EED               	goto	i1l79
  2959  06E8                     i1l78:	
  2960                           
  2961                           ;UART.c: 31: {
  2962                           ;UART.c: 37: CREN = 0;
  2963  06E8  1218               	bcf	24,4	;volatile
  2964                           
  2965                           ;UART.c: 38: __nop();
  2966  06E9  0000               	nop
  2967                           
  2968                           ;UART.c: 39: CREN = 1;
  2969  06EA  1283               	bcf	3,5	;RP0=0, select bank0
  2970  06EB  1303               	bcf	3,6	;RP1=0, select bank0
  2971  06EC  1618               	bsf	24,4	;volatile
  2972  06ED                     i1l79:	
  2973                           ;UART.c: 40: }
  2974                           ;UART.c: 41: while(!RCIF);
  2975                           
  2976  06ED  1E8C               	btfss	12,5	;volatile
  2977  06EE  2EED               	goto	i1l79
  2978                           
  2979                           ;UART.c: 45: return RCREG;
  2980  06EF  081A               	movf	26,w	;volatile
  2981  06F0  0008               	return
  2982  06F1                     __end_of_getch:	
  2983                           
  2984                           	psect	text8
  2985  033F                     __ptext8:	
  2986 ;; *************** function _SendPacket *****************
  2987 ;; Defined at:
  2988 ;;		line 59 in file "encode_AX25.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;  eDataField      2    0[BANK0 ] PTR unsigned char 
  2991 ;;		 -> InterReceiver@EEPROMCmdData_109(0), InterReceiver@EEPROMTestData(5), InterReceiver@EEPROMCmdData(0), 
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;  i               2   11[BANK0 ] unsigned int 
  2994 ;;  i               2    9[BANK0 ] unsigned int 
  2995 ;;  i               2    7[BANK0 ] unsigned int 
  2996 ;;  Packetnum       2    5[BANK0 ] unsigned int 
  2997 ;; Return value:  Size  Location     Type
  2998 ;;                  1    wreg      void 
  2999 ;; Registers used:
  3000 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3001 ;; Tracked objects:
  3002 ;;		On entry : 0/0
  3003 ;;		On exit  : 0/0
  3004 ;;		Unchanged: 0/0
  3005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3006 ;;      Params:         0       2       0       0       0
  3007 ;;      Locals:         0       8       0       0       0
  3008 ;;      Temps:          0       3       0       0       0
  3009 ;;      Totals:         0      13       0       0       0
  3010 ;;Total ram usage:       13 bytes
  3011 ;; Hardware stack levels used:    1
  3012 ;; Hardware stack levels required when called:    2
  3013 ;; This function calls:
  3014 ;;		_Packetmaker
  3015 ;;		_SendByte
  3016 ;; This function is called by:
  3017 ;;		_InterReceiver
  3018 ;; This function uses a non-reentrant model
  3019 ;;
  3020                           
  3021                           
  3022                           ;psect for function _SendPacket
  3023  033F                     _SendPacket:	
  3024                           
  3025                           ;encode_AX25.c: 62: _delay((unsigned long)((200)*(10000000/4000.0)));
  3026                           
  3027                           ;incstack = 0
  3028                           ; Regs used in _SendPacket: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3029  033F  3003               	movlw	3
  3030  0340  1283               	bcf	3,5	;RP0=0, select bank0
  3031  0341  1303               	bcf	3,6	;RP1=0, select bank0
  3032  0342  00A4               	movwf	??_SendPacket+2
  3033  0343  308A               	movlw	138
  3034  0344  00A3               	movwf	??_SendPacket+1
  3035  0345  3055               	movlw	85
  3036  0346  00A2               	movwf	??_SendPacket
  3037  0347                     u132_27:	
  3038  0347  0BA2               	decfsz	??_SendPacket,f
  3039  0348  2B47               	goto	u132_27
  3040  0349  0BA3               	decfsz	??_SendPacket+1,f
  3041  034A  2B47               	goto	u132_27
  3042  034B  0BA4               	decfsz	??_SendPacket+2,f
  3043  034C  2B47               	goto	u132_27
  3044                           
  3045                           ;encode_AX25.c: 63: UINT Packetnum;
  3046                           ;encode_AX25.c: 64: Packetnum = 0;
  3047  034D  1283               	bcf	3,5	;RP0=0, select bank0
  3048  034E  1303               	bcf	3,6	;RP1=0, select bank0
  3049  034F  01A5               	clrf	SendPacket@Packetnum
  3050  0350  01A6               	clrf	SendPacket@Packetnum+1
  3051                           
  3052                           ;encode_AX25.c: 65: Packetnum = Packetmaker(eDataField);
  3053  0351  0820               	movf	SendPacket@eDataField,w
  3054  0352  00F0               	movwf	Packetmaker@eDataField
  3055  0353  0821               	movf	SendPacket@eDataField+1,w
  3056  0354  00F1               	movwf	Packetmaker@eDataField+1
  3057  0355  120A  118A  23F7  120A  118A  	fcall	_Packetmaker
  3058  035A  0871               	movf	?_Packetmaker+1,w
  3059  035B  1283               	bcf	3,5	;RP0=0, select bank0
  3060  035C  1303               	bcf	3,6	;RP1=0, select bank0
  3061  035D  00A6               	movwf	SendPacket@Packetnum+1
  3062  035E  0870               	movf	?_Packetmaker,w
  3063  035F  00A5               	movwf	SendPacket@Packetnum
  3064                           
  3065                           ;encode_AX25.c: 66: ebitstatus = 1;
  3066  0360  3001               	movlw	1
  3067  0361  00E1               	movwf	_ebitstatus
  3068  0362  3000               	movlw	0
  3069  0363  00E2               	movwf	_ebitstatus+1
  3070                           
  3071                           ;encode_AX25.c: 67: efcslo = efcshi = 0xff;
  3072  0364  30FF               	movlw	255
  3073  0365  00EB               	movwf	_efcshi
  3074  0366  00A2               	movwf	??_SendPacket
  3075  0367  0822               	movf	??_SendPacket,w
  3076  0368  00EC               	movwf	_efcslo
  3077                           
  3078                           ;encode_AX25.c: 68: estuff = 0;
  3079  0369  01E3               	clrf	_estuff
  3080  036A  01E4               	clrf	_estuff+1
  3081                           
  3082                           ;encode_AX25.c: 70: eflag = 1;
  3083  036B  3001               	movlw	1
  3084  036C  00E7               	movwf	_eflag
  3085  036D  3000               	movlw	0
  3086  036E  00E8               	movwf	_eflag+1
  3087                           
  3088                           ;encode_AX25.c: 71: efcsflag = 0;
  3089  036F  01E5               	clrf	_efcsflag
  3090  0370  01E6               	clrf	_efcsflag+1
  3091                           
  3092                           ;encode_AX25.c: 72: for(UINT i=0;i<27;i++){
  3093  0371  01A7               	clrf	SendPacket@i
  3094  0372  01A8               	clrf	SendPacket@i+1
  3095  0373  3000               	movlw	0
  3096  0374  0228               	subwf	SendPacket@i+1,w
  3097  0375  301B               	movlw	27
  3098  0376  1903               	skipnz
  3099  0377  0227               	subwf	SendPacket@i,w
  3100  0378  1803               	btfsc	3,0
  3101  0379  2B8F               	goto	i1l1626
  3102  037A                     i1l1620:	
  3103                           
  3104                           ;encode_AX25.c: 73: SendByte(0x7e);
  3105  037A  307E               	movlw	126
  3106  037B  120A  118A  2573  120A  118A  	fcall	_SendByte
  3107  0380  3001               	movlw	1
  3108  0381  1283               	bcf	3,5	;RP0=0, select bank0
  3109  0382  1303               	bcf	3,6	;RP1=0, select bank0
  3110  0383  07A7               	addwf	SendPacket@i,f
  3111  0384  1803               	skipnc
  3112  0385  0AA8               	incf	SendPacket@i+1,f
  3113  0386  3000               	movlw	0
  3114  0387  07A8               	addwf	SendPacket@i+1,f
  3115  0388  3000               	movlw	0
  3116  0389  0228               	subwf	SendPacket@i+1,w
  3117  038A  301B               	movlw	27
  3118  038B  1903               	skipnz
  3119  038C  0227               	subwf	SendPacket@i,w
  3120  038D  1C03               	skipc
  3121  038E  2B7A               	goto	i1l1620
  3122  038F                     i1l1626:	
  3123                           
  3124                           ;encode_AX25.c: 74: }
  3125                           ;encode_AX25.c: 75: eflag = 0;
  3126  038F  01E7               	clrf	_eflag
  3127  0390  01E8               	clrf	_eflag+1
  3128                           
  3129                           ;encode_AX25.c: 77: for(UINT i=0;i<Packetnum;i++){
  3130  0391  01A9               	clrf	SendPacket@i_173
  3131  0392  01AA               	clrf	SendPacket@i_173+1
  3132  0393                     i1l1632:	
  3133  0393  0826               	movf	SendPacket@Packetnum+1,w
  3134  0394  022A               	subwf	SendPacket@i_173+1,w
  3135  0395  1D03               	skipz
  3136  0396  2B99               	goto	u91_25
  3137  0397  0825               	movf	SendPacket@Packetnum,w
  3138  0398  0229               	subwf	SendPacket@i_173,w
  3139  0399                     u91_25:	
  3140  0399  1803               	btfsc	3,0
  3141  039A  2BAE               	goto	i1l1634
  3142                           
  3143                           ;encode_AX25.c: 78: SendByte(ePacket[i]);
  3144  039B  0829               	movf	SendPacket@i_173,w
  3145  039C  3E90               	addlw	(low (_ePacket| (0+256)))& (0+255)
  3146  039D  0084               	movwf	4
  3147  039E  1783               	bsf	3,7	;select IRP bank3
  3148  039F  0800               	movf	0,w
  3149  03A0  120A  118A  2573  120A  118A  	fcall	_SendByte
  3150  03A5  3001               	movlw	1
  3151  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  3152  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  3153  03A8  07A9               	addwf	SendPacket@i_173,f
  3154  03A9  1803               	skipnc
  3155  03AA  0AAA               	incf	SendPacket@i_173+1,f
  3156  03AB  3000               	movlw	0
  3157  03AC  07AA               	addwf	SendPacket@i_173+1,f
  3158  03AD  2B93               	goto	i1l1632
  3159  03AE                     i1l1634:	
  3160                           
  3161                           ;encode_AX25.c: 79: }
  3162                           ;encode_AX25.c: 83: efcsflag = 1;
  3163  03AE  3001               	movlw	1
  3164  03AF  00E5               	movwf	_efcsflag
  3165  03B0  3000               	movlw	0
  3166  03B1  00E6               	movwf	_efcsflag+1
  3167                           
  3168                           ;encode_AX25.c: 84: efcslo = efcslo ^ 0xff;
  3169  03B2  09EC               	comf	_efcslo,f
  3170                           
  3171                           ;encode_AX25.c: 85: efcshi = efcshi ^ 0xff;
  3172  03B3  09EB               	comf	_efcshi,f
  3173                           
  3174                           ;encode_AX25.c: 86: SendByte(efcslo);
  3175  03B4  086C               	movf	_efcslo,w
  3176  03B5  120A  118A  2573  120A  118A  	fcall	_SendByte
  3177                           
  3178                           ;encode_AX25.c: 87: SendByte(efcshi);
  3179  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  3180  03BB  1303               	bcf	3,6	;RP1=0, select bank0
  3181  03BC  086B               	movf	_efcshi,w
  3182  03BD  120A  118A  2573  120A  118A  	fcall	_SendByte
  3183                           
  3184                           ;encode_AX25.c: 88: efcsflag = 0;
  3185  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  3186  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  3187  03C4  01E5               	clrf	_efcsflag
  3188  03C5  01E6               	clrf	_efcsflag+1
  3189                           
  3190                           ;encode_AX25.c: 91: eflag = 1;
  3191  03C6  3001               	movlw	1
  3192  03C7  00E7               	movwf	_eflag
  3193  03C8  3000               	movlw	0
  3194  03C9  00E8               	movwf	_eflag+1
  3195                           
  3196                           ;encode_AX25.c: 92: for(UINT i=0;i<6;i++){
  3197  03CA  01AB               	clrf	SendPacket@i_174
  3198  03CB  01AC               	clrf	SendPacket@i_174+1
  3199  03CC  3000               	movlw	0
  3200  03CD  022C               	subwf	SendPacket@i_174+1,w
  3201  03CE  3006               	movlw	6
  3202  03CF  1903               	skipnz
  3203  03D0  022B               	subwf	SendPacket@i_174,w
  3204  03D1  1803               	btfsc	3,0
  3205  03D2  2BE8               	goto	i1l1658
  3206  03D3                     i1l1652:	
  3207                           
  3208                           ;encode_AX25.c: 93: SendByte(0x7e);
  3209  03D3  307E               	movlw	126
  3210  03D4  120A  118A  2573  120A  118A  	fcall	_SendByte
  3211  03D9  3001               	movlw	1
  3212  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  3213  03DB  1303               	bcf	3,6	;RP1=0, select bank0
  3214  03DC  07AB               	addwf	SendPacket@i_174,f
  3215  03DD  1803               	skipnc
  3216  03DE  0AAC               	incf	SendPacket@i_174+1,f
  3217  03DF  3000               	movlw	0
  3218  03E0  07AC               	addwf	SendPacket@i_174+1,f
  3219  03E1  3000               	movlw	0
  3220  03E2  022C               	subwf	SendPacket@i_174+1,w
  3221  03E3  3006               	movlw	6
  3222  03E4  1903               	skipnz
  3223  03E5  022B               	subwf	SendPacket@i_174,w
  3224  03E6  1C03               	skipc
  3225  03E7  2BD3               	goto	i1l1652
  3226  03E8                     i1l1658:	
  3227                           
  3228                           ;encode_AX25.c: 94: }
  3229                           ;encode_AX25.c: 96: _delay((unsigned long)((200)*(10000000/4000.0)));
  3230  03E8  3003               	movlw	3
  3231  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  3232  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  3233  03EB  00A4               	movwf	??_SendPacket+2
  3234  03EC  308A               	movlw	138
  3235  03ED  00A3               	movwf	??_SendPacket+1
  3236  03EE  3055               	movlw	85
  3237  03EF  00A2               	movwf	??_SendPacket
  3238  03F0                     u133_27:	
  3239  03F0  0BA2               	decfsz	??_SendPacket,f
  3240  03F1  2BF0               	goto	u133_27
  3241  03F2  0BA3               	decfsz	??_SendPacket+1,f
  3242  03F3  2BF0               	goto	u133_27
  3243  03F4  0BA4               	decfsz	??_SendPacket+2,f
  3244  03F5  2BF0               	goto	u133_27
  3245  03F6  0008               	return
  3246  03F7                     __end_of_SendPacket:	
  3247                           
  3248                           	psect	text9
  3249  0573                     __ptext9:	
  3250 ;; *************** function _SendByte *****************
  3251 ;; Defined at:
  3252 ;;		line 101 in file "encode_AX25.c"
  3253 ;; Parameters:    Size  Location     Type
  3254 ;;  byte            1    wreg     unsigned char 
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;  byte            1    7[COMMON] unsigned char 
  3257 ;;  i               2    5[COMMON] unsigned int 
  3258 ;;  bt              1    8[COMMON] unsigned char 
  3259 ;; Return value:  Size  Location     Type
  3260 ;;                  1    wreg      void 
  3261 ;; Registers used:
  3262 ;;		wreg, status,2, status,0, pclath, cstack
  3263 ;; Tracked objects:
  3264 ;;		On entry : 0/0
  3265 ;;		On exit  : 0/0
  3266 ;;		Unchanged: 0/0
  3267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3268 ;;      Params:         0       0       0       0       0
  3269 ;;      Locals:         4       0       0       0       0
  3270 ;;      Temps:          2       0       0       0       0
  3271 ;;      Totals:         6       0       0       0       0
  3272 ;;Total ram usage:        6 bytes
  3273 ;; Hardware stack levels used:    1
  3274 ;; Hardware stack levels required when called:    1
  3275 ;; This function calls:
  3276 ;;		_fcsbit
  3277 ;;		_flipout
  3278 ;; This function is called by:
  3279 ;;		_SendPacket
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           
  3284                           ;psect for function _SendByte
  3285  0573                     _SendByte:	
  3286                           
  3287                           ;incstack = 0
  3288                           ; Regs used in _SendByte: [wreg+status,2+status,0+pclath+cstack]
  3289                           ;SendByte@byte stored from wreg
  3290  0573  00F7               	movwf	SendByte@byte
  3291                           
  3292                           ;encode_AX25.c: 102: UBYTE bt;
  3293                           ;encode_AX25.c: 103: for(UINT i=0;i<8;i++){
  3294  0574  01F5               	clrf	SendByte@i
  3295  0575  01F6               	clrf	SendByte@i+1
  3296  0576                     L4:	
  3297  0576  3000               	movlw	0
  3298  0577  0276               	subwf	SendByte@i+1,w
  3299  0578  3008               	movlw	8
  3300  0579  1903               	skipnz
  3301  057A  0275               	subwf	SendByte@i,w
  3302  057B  1803               	btfsc	3,0
  3303  057C  0008               	return
  3304                           
  3305                           ;encode_AX25.c: 104: bt = byte & 0x01;
  3306  057D  0877               	movf	SendByte@byte,w
  3307  057E  3901               	andlw	1
  3308  057F  00F3               	movwf	??_SendByte
  3309  0580  0873               	movf	??_SendByte,w
  3310  0581  00F8               	movwf	SendByte@bt
  3311                           
  3312                           ;encode_AX25.c: 106: if(efcsflag == 0 && eflag == 0){
  3313  0582  1283               	bcf	3,5	;RP0=0, select bank0
  3314  0583  1303               	bcf	3,6	;RP1=0, select bank0
  3315  0584  0865               	movf	_efcsflag,w
  3316  0585  0466               	iorwf	_efcsflag+1,w
  3317  0586  1D03               	btfss	3,2
  3318  0587  2D92               	goto	i1l1446
  3319  0588  0867               	movf	_eflag,w
  3320  0589  0468               	iorwf	_eflag+1,w
  3321  058A  1D03               	btfss	3,2
  3322  058B  2D92               	goto	i1l1446
  3323                           
  3324                           ;encode_AX25.c: 107: fcsbit(bt);
  3325  058C  0878               	movf	SendByte@bt,w
  3326  058D  120A  118A  267A  120A  118A  	fcall	_fcsbit
  3327  0592                     i1l1446:	
  3328                           
  3329                           ;encode_AX25.c: 108: }
  3330                           ;encode_AX25.c: 110: if(bt == 0x00){
  3331  0592  0878               	movf	SendByte@bt,w
  3332  0593  1903               	btfsc	3,2
  3333  0594  2DAF               	goto	L3
  3334                           
  3335                           ;encode_AX25.c: 113: estuff ++;
  3336                           
  3337                           ;encode_AX25.c: 112: }else{
  3338                           
  3339                           ;encode_AX25.c: 111: flipout();
  3340  0595  3001               	movlw	1
  3341  0596  1283               	bcf	3,5	;RP0=0, select bank0
  3342  0597  1303               	bcf	3,6	;RP1=0, select bank0
  3343  0598  07E3               	addwf	_estuff,f
  3344  0599  1803               	skipnc
  3345  059A  0AE4               	incf	_estuff+1,f
  3346  059B  3000               	movlw	0
  3347  059C  07E4               	addwf	_estuff+1,f
  3348                           
  3349                           ;encode_AX25.c: 115: if(eflag == 0 && estuff == 5){
  3350  059D  0867               	movf	_eflag,w
  3351  059E  0468               	iorwf	_eflag+1,w
  3352  059F  1D03               	btfss	3,2
  3353  05A0  2DB4               	goto	i1l1460
  3354  05A1  3005               	movlw	5
  3355  05A2  0663               	xorwf	_estuff,w
  3356  05A3  0464               	iorwf	_estuff+1,w
  3357  05A4  1D03               	btfss	3,2
  3358  05A5  2DB4               	goto	i1l1460
  3359                           
  3360                           ;encode_AX25.c: 116: _delay((unsigned long)((795)*(10000000/4000000.0)));
  3361  05A6  3003               	movlw	3
  3362  05A7  00F4               	movwf	??_SendByte+1
  3363  05A8  3093               	movlw	147
  3364  05A9  00F3               	movwf	??_SendByte
  3365  05AA                     u134_27:	
  3366  05AA  0BF3               	decfsz	??_SendByte,f
  3367  05AB  2DAA               	goto	u134_27
  3368  05AC  0BF4               	decfsz	??_SendByte+1,f
  3369  05AD  2DAA               	goto	u134_27
  3370  05AE  0000               	nop
  3371  05AF                     L3:	
  3372                           
  3373                           ;encode_AX25.c: 117: flipout();
  3374  05AF  120A  118A  26BF  120A  118A  	fcall	_flipout
  3375  05B4                     i1l1460:	
  3376                           
  3377                           ;encode_AX25.c: 118: }
  3378                           ;encode_AX25.c: 119: }
  3379                           ;encode_AX25.c: 120: _delay((unsigned long)((795)*(10000000/4000000.0)));
  3380  05B4  3003               	movlw	3
  3381  05B5  00F4               	movwf	??_SendByte+1
  3382  05B6  3093               	movlw	147
  3383  05B7  00F3               	movwf	??_SendByte
  3384  05B8                     u135_27:	
  3385  05B8  0BF3               	decfsz	??_SendByte,f
  3386  05B9  2DB8               	goto	u135_27
  3387  05BA  0BF4               	decfsz	??_SendByte+1,f
  3388  05BB  2DB8               	goto	u135_27
  3389  05BC  0000               	nop
  3390                           
  3391                           ;encode_AX25.c: 121: byte = byte >> 1;
  3392  05BD  0877               	movf	SendByte@byte,w
  3393  05BE  00F3               	movwf	??_SendByte
  3394  05BF  1003               	clrc
  3395  05C0  0C73               	rrf	??_SendByte,w
  3396  05C1  00F4               	movwf	??_SendByte+1
  3397  05C2  0874               	movf	??_SendByte+1,w
  3398  05C3  00F7               	movwf	SendByte@byte
  3399  05C4  3001               	movlw	1
  3400  05C5  07F5               	addwf	SendByte@i,f
  3401  05C6  1803               	skipnc
  3402  05C7  0AF6               	incf	SendByte@i+1,f
  3403  05C8  3000               	movlw	0
  3404  05C9  07F6               	addwf	SendByte@i+1,f
  3405  05CA  2D76               	goto	L4
  3406  05CB                     __end_of_SendByte:	
  3407                           
  3408                           	psect	text10
  3409  06BF                     __ptext10:	
  3410 ;; *************** function _flipout *****************
  3411 ;; Defined at:
  3412 ;;		line 125 in file "encode_AX25.c"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;		None
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;		None
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  1    wreg      void 
  3419 ;; Registers used:
  3420 ;;		wreg, status,2, status,0
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3426 ;;      Params:         0       0       0       0       0
  3427 ;;      Locals:         0       0       0       0       0
  3428 ;;      Temps:          0       0       0       0       0
  3429 ;;      Totals:         0       0       0       0       0
  3430 ;;Total ram usage:        0 bytes
  3431 ;; Hardware stack levels used:    1
  3432 ;; This function calls:
  3433 ;;		Nothing
  3434 ;; This function is called by:
  3435 ;;		_SendByte
  3436 ;; This function uses a non-reentrant model
  3437 ;;
  3438                           
  3439                           
  3440                           ;psect for function _flipout
  3441  06BF                     _flipout:	
  3442                           
  3443                           ;encode_AX25.c: 126: estuff = 0;
  3444                           
  3445                           ;incstack = 0
  3446                           ; Regs used in _flipout: [wreg+status,2+status,0]
  3447  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  3448  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  3449  06C1  01E3               	clrf	_estuff
  3450  06C2  01E4               	clrf	_estuff+1
  3451                           
  3452                           ;encode_AX25.c: 127: if(ebitstatus == 0){
  3453  06C3  0861               	movf	_ebitstatus,w
  3454  06C4  0462               	iorwf	_ebitstatus+1,w
  3455  06C5  1D03               	btfss	3,2
  3456  06C6  2ECD               	goto	i1l206
  3457                           
  3458                           ;encode_AX25.c: 128: RC5 = 1;
  3459  06C7  1687               	bsf	7,5	;volatile
  3460                           
  3461                           ;encode_AX25.c: 129: ebitstatus = 1;
  3462  06C8  3001               	movlw	1
  3463  06C9  00E1               	movwf	_ebitstatus
  3464  06CA  3000               	movlw	0
  3465  06CB  00E2               	movwf	_ebitstatus+1
  3466                           
  3467                           ;encode_AX25.c: 130: }else{
  3468  06CC  0008               	return
  3469  06CD                     i1l206:	
  3470                           
  3471                           ;encode_AX25.c: 131: RC5 = 0;
  3472  06CD  1287               	bcf	7,5	;volatile
  3473                           
  3474                           ;encode_AX25.c: 132: ebitstatus = 0;
  3475  06CE  01E1               	clrf	_ebitstatus
  3476  06CF  01E2               	clrf	_ebitstatus+1
  3477  06D0  0008               	return
  3478  06D1                     __end_of_flipout:	
  3479                           
  3480                           	psect	text11
  3481  067A                     __ptext11:	
  3482 ;; *************** function _fcsbit *****************
  3483 ;; Defined at:
  3484 ;;		line 138 in file "encode_AX25.c"
  3485 ;; Parameters:    Size  Location     Type
  3486 ;;  tbyte           1    wreg     unsigned char 
  3487 ;; Auto vars:     Size  Location     Type
  3488 ;;  tbyte           1    2[COMMON] unsigned char 
  3489 ;; Return value:  Size  Location     Type
  3490 ;;                  1    wreg      void 
  3491 ;; Registers used:
  3492 ;;		wreg, status,2, status,0
  3493 ;; Tracked objects:
  3494 ;;		On entry : 0/0
  3495 ;;		On exit  : 0/0
  3496 ;;		Unchanged: 0/0
  3497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3498 ;;      Params:         0       0       0       0       0
  3499 ;;      Locals:         1       0       0       0       0
  3500 ;;      Temps:          2       0       0       0       0
  3501 ;;      Totals:         3       0       0       0       0
  3502 ;;Total ram usage:        3 bytes
  3503 ;; Hardware stack levels used:    1
  3504 ;; This function calls:
  3505 ;;		Nothing
  3506 ;; This function is called by:
  3507 ;;		_SendByte
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           
  3512                           ;psect for function _fcsbit
  3513  067A                     _fcsbit:	
  3514                           
  3515                           ;incstack = 0
  3516                           ; Regs used in _fcsbit: [wreg+status,2+status,0]
  3517                           ;fcsbit@tbyte stored from wreg
  3518  067A  00F2               	movwf	fcsbit@tbyte
  3519  067B  1003               	bcf	3,0	;# 
  3520  067C  0CEB               	rrf	_efcshi,f	;# 
  3521  067D  0CEC               	rrf	_efcslo,f	;# 
  3522                           
  3523                           ;encode_AX25.c: 144: if(((STATUS & 0x01)^(tbyte)) == 0x01){
  3524  067E  3001               	movlw	1
  3525  067F  1283               	bcf	3,5	;RP0=0, select bank0
  3526  0680  1303               	bcf	3,6	;RP1=0, select bank0
  3527  0681  0503               	andwf	3,w	;volatile
  3528  0682  00F0               	movwf	??_fcsbit
  3529  0683  0872               	movf	fcsbit@tbyte,w
  3530  0684  0670               	xorwf	??_fcsbit,w
  3531  0685  00F1               	movwf	??_fcsbit+1
  3532  0686  0371               	decf	??_fcsbit+1,w
  3533  0687  1D03               	btfss	3,2
  3534  0688  0008               	return
  3535                           
  3536                           ;encode_AX25.c: 145: efcshi = efcshi ^ 0x84;
  3537  0689  086B               	movf	_efcshi,w
  3538  068A  3A84               	xorlw	132
  3539  068B  00F0               	movwf	??_fcsbit
  3540  068C  0870               	movf	??_fcsbit,w
  3541  068D  00EB               	movwf	_efcshi
  3542                           
  3543                           ;encode_AX25.c: 146: efcslo = efcslo ^ 0x08;
  3544  068E  086C               	movf	_efcslo,w
  3545  068F  3A08               	xorlw	8
  3546  0690  00F0               	movwf	??_fcsbit
  3547  0691  0870               	movf	??_fcsbit,w
  3548  0692  00EC               	movwf	_efcslo
  3549  0693  0008               	return
  3550  0694                     __end_of_fcsbit:	
  3551                           
  3552                           	psect	text12
  3553  03F7                     __ptext12:	
  3554 ;; *************** function _Packetmaker *****************
  3555 ;; Defined at:
  3556 ;;		line 40 in file "encode_AX25.c"
  3557 ;; Parameters:    Size  Location     Type
  3558 ;;  eDataField      2    0[COMMON] PTR unsigned char 
  3559 ;;		 -> InterReceiver@EEPROMCmdData_109(0), InterReceiver@EEPROMTestData(5), InterReceiver@EEPROMCmdData(0), 
  3560 ;; Auto vars:     Size  Location     Type
  3561 ;;  i               2    5[COMMON] unsigned int 
  3562 ;;  i               2   11[COMMON] unsigned int 
  3563 ;;  i               2    9[COMMON] unsigned int 
  3564 ;;  Datanum         2    7[COMMON] unsigned int 
  3565 ;; Return value:  Size  Location     Type
  3566 ;;                  2    0[COMMON] unsigned int 
  3567 ;; Registers used:
  3568 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3569 ;; Tracked objects:
  3570 ;;		On entry : 0/0
  3571 ;;		On exit  : 0/0
  3572 ;;		Unchanged: 0/0
  3573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3574 ;;      Params:         2       0       0       0       0
  3575 ;;      Locals:         8       0       0       0       0
  3576 ;;      Temps:          3       0       0       0       0
  3577 ;;      Totals:        13       0       0       0       0
  3578 ;;Total ram usage:       13 bytes
  3579 ;; Hardware stack levels used:    2
  3580 ;; This function calls:
  3581 ;;		Nothing
  3582 ;; This function is called by:
  3583 ;;		_SendPacket
  3584 ;; This function uses a non-reentrant model
  3585 ;;
  3586                           
  3587                           
  3588                           ;psect for function _Packetmaker
  3589  03F7                     _Packetmaker:	
  3590                           
  3591                           ;encode_AX25.c: 41: for(UINT i=0;i<6;i++){
  3592                           
  3593                           ;incstack = 0
  3594                           ; Regs used in _Packetmaker: [wreg-fsr0h+status,2+status,0+pclath]
  3595  03F7  01F9               	clrf	Packetmaker@i
  3596  03F8  01FA               	clrf	Packetmaker@i+1
  3597  03F9  3000               	movlw	0
  3598  03FA  027A               	subwf	Packetmaker@i+1,w
  3599  03FB  3006               	movlw	6
  3600  03FC  1903               	skipnz
  3601  03FD  0279               	subwf	Packetmaker@i,w
  3602  03FE  1803               	btfsc	3,0
  3603  03FF  2C1E               	goto	i1l1396
  3604  0400                     i1l1390:	
  3605                           
  3606                           ;encode_AX25.c: 42: ePacket[i] = "JQ1ZHX"[i] << 1;
  3607  0400  0879               	movf	Packetmaker@i,w
  3608  0401  3E01               	addlw	low ((STR_1-__stringbase)| (0+32768))
  3609  0402  0084               	movwf	4
  3610  0403  120A  118A  26AB  120A  118A  	fcall	stringdir
  3611  0408  00F2               	movwf	??_Packetmaker
  3612  0409  0772               	addwf	??_Packetmaker,w
  3613  040A  00F3               	movwf	??_Packetmaker+1
  3614  040B  0879               	movf	Packetmaker@i,w
  3615  040C  3E90               	addlw	(low (_ePacket| (0+256)))& (0+255)
  3616  040D  0084               	movwf	4
  3617  040E  0873               	movf	??_Packetmaker+1,w
  3618  040F  1783               	bsf	3,7	;select IRP bank3
  3619  0410  0080               	movwf	0
  3620  0411  3001               	movlw	1
  3621  0412  07F9               	addwf	Packetmaker@i,f
  3622  0413  1803               	skipnc
  3623  0414  0AFA               	incf	Packetmaker@i+1,f
  3624  0415  3000               	movlw	0
  3625  0416  07FA               	addwf	Packetmaker@i+1,f
  3626  0417  3000               	movlw	0
  3627  0418  027A               	subwf	Packetmaker@i+1,w
  3628  0419  3006               	movlw	6
  3629  041A  1903               	skipnz
  3630  041B  0279               	subwf	Packetmaker@i,w
  3631  041C  1C03               	skipc
  3632  041D  2C00               	goto	i1l1390
  3633  041E                     i1l1396:	
  3634                           
  3635                           ;encode_AX25.c: 43: }
  3636                           ;encode_AX25.c: 44: ePacket[6] = 0x60;
  3637  041E  3060               	movlw	96
  3638  041F  00F2               	movwf	??_Packetmaker
  3639  0420  0872               	movf	??_Packetmaker,w
  3640  0421  1683               	bsf	3,5	;RP0=1, select bank3
  3641  0422  1703               	bsf	3,6	;RP1=1, select bank3
  3642  0423  0096               	movwf	(_ePacket^(0+384)+6)
  3643                           
  3644                           ;encode_AX25.c: 45: for(UINT i=0;i<6;i++){
  3645  0424  01FB               	clrf	Packetmaker@i_164
  3646  0425  01FC               	clrf	Packetmaker@i_164+1
  3647  0426  3000               	movlw	0
  3648  0427  027C               	subwf	Packetmaker@i_164+1,w
  3649  0428  3006               	movlw	6
  3650  0429  1903               	skipnz
  3651  042A  027B               	subwf	Packetmaker@i_164,w
  3652  042B  1803               	btfsc	3,0
  3653  042C  2C4C               	goto	i1l1410
  3654  042D                     i1l1404:	
  3655                           
  3656                           ;encode_AX25.c: 46: ePacket[i+7] = "JQ1YCZ"[i] << 1;
  3657  042D  087B               	movf	Packetmaker@i_164,w
  3658  042E  3E08               	addlw	low ((STR_2-__stringbase)| (0+32768))
  3659  042F  0084               	movwf	4
  3660  0430  120A  118A  26AB  120A  118A  	fcall	stringdir
  3661  0435  00F2               	movwf	??_Packetmaker
  3662  0436  0772               	addwf	??_Packetmaker,w
  3663  0437  00F3               	movwf	??_Packetmaker+1
  3664  0438  087B               	movf	Packetmaker@i_164,w
  3665  0439  3E07               	addlw	7
  3666  043A  3E90               	addlw	(low (_ePacket| (0+256)))& (0+255)
  3667  043B  0084               	movwf	4
  3668  043C  0873               	movf	??_Packetmaker+1,w
  3669  043D  1783               	bsf	3,7	;select IRP bank3
  3670  043E  0080               	movwf	0
  3671  043F  3001               	movlw	1
  3672  0440  07FB               	addwf	Packetmaker@i_164,f
  3673  0441  1803               	skipnc
  3674  0442  0AFC               	incf	Packetmaker@i_164+1,f
  3675  0443  3000               	movlw	0
  3676  0444  07FC               	addwf	Packetmaker@i_164+1,f
  3677  0445  3000               	movlw	0
  3678  0446  027C               	subwf	Packetmaker@i_164+1,w
  3679  0447  3006               	movlw	6
  3680  0448  1903               	skipnz
  3681  0449  027B               	subwf	Packetmaker@i_164,w
  3682  044A  1C03               	skipc
  3683  044B  2C2D               	goto	i1l1404
  3684  044C                     i1l1410:	
  3685                           
  3686                           ;encode_AX25.c: 47: }
  3687                           ;encode_AX25.c: 48: ePacket[13] = 0xe1;
  3688  044C  30E1               	movlw	225
  3689  044D  00F2               	movwf	??_Packetmaker
  3690  044E  0872               	movf	??_Packetmaker,w
  3691  044F  1683               	bsf	3,5	;RP0=1, select bank3
  3692  0450  1703               	bsf	3,6	;RP1=1, select bank3
  3693  0451  009D               	movwf	(_ePacket^(0+384)+13)
  3694                           
  3695                           ;encode_AX25.c: 49: ePacket[14] = 0x03;
  3696  0452  3003               	movlw	3
  3697  0453  00F2               	movwf	??_Packetmaker
  3698  0454  0872               	movf	??_Packetmaker,w
  3699  0455  009E               	movwf	(_ePacket^(0+384)+14)
  3700                           
  3701                           ;encode_AX25.c: 50: ePacket[15] = 0xf0;
  3702  0456  30F0               	movlw	240
  3703  0457  00F2               	movwf	??_Packetmaker
  3704  0458  0872               	movf	??_Packetmaker,w
  3705  0459  009F               	movwf	(_ePacket^(0+384)+15)
  3706                           
  3707                           ;encode_AX25.c: 51: UINT Datanum = 0;
  3708  045A  01F7               	clrf	Packetmaker@Datanum
  3709  045B  01F8               	clrf	Packetmaker@Datanum+1
  3710                           
  3711                           ;encode_AX25.c: 52: for(Datanum=0;eDataField[Datanum] != '\0';Datanum++);
  3712  045C  01F7               	clrf	Packetmaker@Datanum
  3713  045D  01F8               	clrf	Packetmaker@Datanum+1
  3714  045E                     i1l1418:	
  3715  045E  0877               	movf	Packetmaker@Datanum,w
  3716  045F  0770               	addwf	Packetmaker@eDataField,w
  3717  0460  00F2               	movwf	??_Packetmaker
  3718  0461  0878               	movf	Packetmaker@Datanum+1,w
  3719  0462  1803               	skipnc
  3720  0463  0A78               	incf	Packetmaker@Datanum+1,w
  3721  0464  0771               	addwf	Packetmaker@eDataField+1,w
  3722  0465  00F3               	movwf	??_Packetmaker+1
  3723  0466  0872               	movf	??_Packetmaker,w
  3724  0467  0084               	movwf	4
  3725  0468  1783               	bsf	3,7
  3726  0469  1C73               	btfss	??_Packetmaker+1,0
  3727  046A  1383               	bcf	3,7
  3728  046B  0800               	movf	0,w
  3729  046C  1903               	btfsc	3,2
  3730  046D  2C75               	goto	i1l1420
  3731  046E  3001               	movlw	1
  3732  046F  07F7               	addwf	Packetmaker@Datanum,f
  3733  0470  1803               	skipnc
  3734  0471  0AF8               	incf	Packetmaker@Datanum+1,f
  3735  0472  3000               	movlw	0
  3736  0473  07F8               	addwf	Packetmaker@Datanum+1,f
  3737  0474  2C5E               	goto	i1l1418
  3738  0475                     i1l1420:	
  3739                           
  3740                           ;encode_AX25.c: 53: for(UINT i=0;i<Datanum;i++){
  3741  0475  01F5               	clrf	Packetmaker@i_167
  3742  0476  01F6               	clrf	Packetmaker@i_167+1
  3743  0477                     i1l1426:	
  3744  0477  0878               	movf	Packetmaker@Datanum+1,w
  3745  0478  0276               	subwf	Packetmaker@i_167+1,w
  3746  0479  1D03               	skipz
  3747  047A  2C7D               	goto	u67_25
  3748  047B  0877               	movf	Packetmaker@Datanum,w
  3749  047C  0275               	subwf	Packetmaker@i_167,w
  3750  047D                     u67_25:	
  3751  047D  1803               	btfsc	3,0
  3752  047E  2C9C               	goto	i1l1428
  3753                           
  3754                           ;encode_AX25.c: 54: ePacket[16+i] = eDataField[i];
  3755  047F  0875               	movf	Packetmaker@i_167,w
  3756  0480  0770               	addwf	Packetmaker@eDataField,w
  3757  0481  00F2               	movwf	??_Packetmaker
  3758  0482  0876               	movf	Packetmaker@i_167+1,w
  3759  0483  1803               	skipnc
  3760  0484  0A76               	incf	Packetmaker@i_167+1,w
  3761  0485  0771               	addwf	Packetmaker@eDataField+1,w
  3762  0486  00F3               	movwf	??_Packetmaker+1
  3763  0487  0872               	movf	??_Packetmaker,w
  3764  0488  0084               	movwf	4
  3765  0489  1783               	bsf	3,7
  3766  048A  1C73               	btfss	??_Packetmaker+1,0
  3767  048B  1383               	bcf	3,7
  3768  048C  0800               	movf	0,w
  3769  048D  00F4               	movwf	??_Packetmaker+2
  3770  048E  0875               	movf	Packetmaker@i_167,w
  3771  048F  3E10               	addlw	16
  3772  0490  3E90               	addlw	(low (_ePacket| (0+256)))& (0+255)
  3773  0491  0084               	movwf	4
  3774  0492  0874               	movf	??_Packetmaker+2,w
  3775  0493  1783               	bsf	3,7	;select IRP bank3
  3776  0494  0080               	movwf	0
  3777  0495  3001               	movlw	1
  3778  0496  07F5               	addwf	Packetmaker@i_167,f
  3779  0497  1803               	skipnc
  3780  0498  0AF6               	incf	Packetmaker@i_167+1,f
  3781  0499  3000               	movlw	0
  3782  049A  07F6               	addwf	Packetmaker@i_167+1,f
  3783  049B  2C77               	goto	i1l1426
  3784  049C                     i1l1428:	
  3785                           
  3786                           ;encode_AX25.c: 55: }
  3787                           ;encode_AX25.c: 56: return 16+Datanum;
  3788  049C  0877               	movf	Packetmaker@Datanum,w
  3789  049D  3E10               	addlw	16
  3790  049E  00F0               	movwf	?_Packetmaker
  3791  049F  0878               	movf	Packetmaker@Datanum+1,w
  3792  04A0  1803               	skipnc
  3793  04A1  3E01               	addlw	1
  3794  04A2  3E00               	addlw	0
  3795  04A3  00F1               	movwf	?_Packetmaker+1
  3796  04A4  0008               	return
  3797  04A5                     __end_of_Packetmaker:	
  3798                           
  3799                           	psect	text13
  3800  0262                     __ptext13:	
  3801 ;; *************** function _EEPROM_Read *****************
  3802 ;; Defined at:
  3803 ;;		line 116 in file "I2C.c"
  3804 ;; Parameters:    Size  Location     Type
  3805 ;;  EEPROM_addre    1    wreg     unsigned char 
  3806 ;;  high_address    1    3[COMMON] unsigned char 
  3807 ;;  low_address     1    4[COMMON] unsigned char 
  3808 ;;  ReadData        2    5[COMMON] PTR unsigned char 
  3809 ;;		 -> InterReceiver@EEPROMCmdData_109(0), InterReceiver@EEPROMCmdData(0), 
  3810 ;;  EEPROMDataLe    2    7[COMMON] PTR unsigned int 
  3811 ;;		 -> RAM(512), 
  3812 ;; Auto vars:     Size  Location     Type
  3813 ;;  EEPROM_addre    1    0[BANK0 ] unsigned char 
  3814 ;;  i               2    2[BANK0 ] unsigned int 
  3815 ;;  Address         1    4[BANK0 ] unsigned char 
  3816 ;;  ReadAddress     1    1[BANK0 ] unsigned char 
  3817 ;; Return value:  Size  Location     Type
  3818 ;;                  1    wreg      void 
  3819 ;; Registers used:
  3820 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3821 ;; Tracked objects:
  3822 ;;		On entry : 0/0
  3823 ;;		On exit  : 0/0
  3824 ;;		Unchanged: 0/0
  3825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3826 ;;      Params:         6       0       0       0       0
  3827 ;;      Locals:         0       5       0       0       0
  3828 ;;      Temps:          5       0       0       0       0
  3829 ;;      Totals:        11       5       0       0       0
  3830 ;;Total ram usage:       16 bytes
  3831 ;; Hardware stack levels used:    1
  3832 ;; Hardware stack levels required when called:    2
  3833 ;; This function calls:
  3834 ;;		_I2C_Master_Read
  3835 ;;		_I2C_Master_RepeatedStart
  3836 ;;		_I2C_Master_Start
  3837 ;;		_I2C_Master_Stop
  3838 ;;		_I2C_Master_Write
  3839 ;; This function is called by:
  3840 ;;		_InterReceiver
  3841 ;; This function uses a non-reentrant model
  3842 ;;
  3843                           
  3844                           
  3845                           ;psect for function _EEPROM_Read
  3846  0262                     _EEPROM_Read:	
  3847                           
  3848                           ;incstack = 0
  3849                           ; Regs used in _EEPROM_Read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3850                           ;EEPROM_Read@EEPROM_address stored from wreg
  3851  0262  1283               	bcf	3,5	;RP0=0, select bank0
  3852  0263  1303               	bcf	3,6	;RP1=0, select bank0
  3853  0264  00A0               	movwf	EEPROM_Read@EEPROM_address
  3854                           
  3855                           ;I2C.c: 117: UBYTE Address = EEPROM_address << 1;
  3856  0265  0820               	movf	EEPROM_Read@EEPROM_address,w
  3857  0266  00F9               	movwf	??_EEPROM_Read
  3858  0267  0779               	addwf	??_EEPROM_Read,w
  3859  0268  00FA               	movwf	??_EEPROM_Read+1
  3860  0269  087A               	movf	??_EEPROM_Read+1,w
  3861  026A  00A4               	movwf	EEPROM_Read@Address
  3862                           
  3863                           ;I2C.c: 118: UBYTE ReadAddress = Address | 0x01;
  3864  026B  0824               	movf	EEPROM_Read@Address,w
  3865  026C  3801               	iorlw	1
  3866  026D  00F9               	movwf	??_EEPROM_Read
  3867  026E  0879               	movf	??_EEPROM_Read,w
  3868  026F  00A1               	movwf	EEPROM_Read@ReadAddress
  3869                           
  3870                           ;I2C.c: 122: I2C_Master_Start();
  3871  0270  120A  118A  2711  120A  118A  	fcall	_I2C_Master_Start
  3872                           
  3873                           ;I2C.c: 123: I2C_Master_Write(Address);
  3874  0275  1283               	bcf	3,5	;RP0=0, select bank0
  3875  0276  1303               	bcf	3,6	;RP1=0, select bank0
  3876  0277  0824               	movf	EEPROM_Read@Address,w
  3877  0278  00F9               	movwf	??_EEPROM_Read
  3878  0279  01FA               	clrf	??_EEPROM_Read+1
  3879  027A  0879               	movf	??_EEPROM_Read,w
  3880  027B  00F0               	movwf	I2C_Master_Write@d
  3881  027C  087A               	movf	??_EEPROM_Read+1,w
  3882  027D  00F1               	movwf	I2C_Master_Write@d+1
  3883  027E  120A  118A  2702  120A  118A  	fcall	_I2C_Master_Write
  3884                           
  3885                           ;I2C.c: 124: I2C_Master_Write(high_address);
  3886  0283  0873               	movf	EEPROM_Read@high_address,w
  3887  0284  00F9               	movwf	??_EEPROM_Read
  3888  0285  01FA               	clrf	??_EEPROM_Read+1
  3889  0286  0879               	movf	??_EEPROM_Read,w
  3890  0287  00F0               	movwf	I2C_Master_Write@d
  3891  0288  087A               	movf	??_EEPROM_Read+1,w
  3892  0289  00F1               	movwf	I2C_Master_Write@d+1
  3893  028A  120A  118A  2702  120A  118A  	fcall	_I2C_Master_Write
  3894                           
  3895                           ;I2C.c: 125: I2C_Master_Write(low_address);
  3896  028F  0874               	movf	EEPROM_Read@low_address,w
  3897  0290  00F9               	movwf	??_EEPROM_Read
  3898  0291  01FA               	clrf	??_EEPROM_Read+1
  3899  0292  0879               	movf	??_EEPROM_Read,w
  3900  0293  00F0               	movwf	I2C_Master_Write@d
  3901  0294  087A               	movf	??_EEPROM_Read+1,w
  3902  0295  00F1               	movwf	I2C_Master_Write@d+1
  3903  0296  120A  118A  2702  120A  118A  	fcall	_I2C_Master_Write
  3904                           
  3905                           ;I2C.c: 126: I2C_Master_RepeatedStart();
  3906  029B  120A  118A  2718  120A  118A  	fcall	_I2C_Master_RepeatedStart
  3907                           
  3908                           ;I2C.c: 129: I2C_Master_Write(ReadAddress);
  3909  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  3910  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  3911  02A2  0821               	movf	EEPROM_Read@ReadAddress,w
  3912  02A3  00F9               	movwf	??_EEPROM_Read
  3913  02A4  01FA               	clrf	??_EEPROM_Read+1
  3914  02A5  0879               	movf	??_EEPROM_Read,w
  3915  02A6  00F0               	movwf	I2C_Master_Write@d
  3916  02A7  087A               	movf	??_EEPROM_Read+1,w
  3917  02A8  00F1               	movwf	I2C_Master_Write@d+1
  3918  02A9  120A  118A  2702  120A  118A  	fcall	_I2C_Master_Write
  3919                           
  3920                           ;I2C.c: 131: for (*EEPROMDataLength = 0; ReadData[*EEPROMDataLength]!= 0xFF; *EEPROMData
      +                          Length++);
  3921  02AE  0877               	movf	EEPROM_Read@EEPROMDataLength,w
  3922  02AF  0084               	movwf	4
  3923  02B0  1783               	bsf	3,7
  3924  02B1  1C78               	btfss	EEPROM_Read@EEPROMDataLength+1,0
  3925  02B2  1383               	bcf	3,7
  3926  02B3  0180               	clrf	0
  3927  02B4  0A84               	incf	4,f
  3928  02B5  0180               	clrf	0
  3929  02B6                     i1l1582:	
  3930  02B6  0877               	movf	EEPROM_Read@EEPROMDataLength,w
  3931  02B7  0084               	movwf	4
  3932  02B8  1783               	bsf	3,7
  3933  02B9  1C78               	btfss	EEPROM_Read@EEPROMDataLength+1,0
  3934  02BA  1383               	bcf	3,7
  3935  02BB  0800               	movf	0,w
  3936  02BC  00F9               	movwf	??_EEPROM_Read
  3937  02BD  0A84               	incf	4,f
  3938  02BE  0800               	movf	0,w
  3939  02BF  00FA               	movwf	??_EEPROM_Read+1
  3940  02C0  0879               	movf	??_EEPROM_Read,w
  3941  02C1  0775               	addwf	EEPROM_Read@ReadData,w
  3942  02C2  00FB               	movwf	??_EEPROM_Read+2
  3943  02C3  087A               	movf	??_EEPROM_Read+1,w
  3944  02C4  1803               	skipnc
  3945  02C5  0A7A               	incf	??_EEPROM_Read+1,w
  3946  02C6  0776               	addwf	EEPROM_Read@ReadData+1,w
  3947  02C7  00FC               	movwf	??_EEPROM_Read+3
  3948  02C8  087B               	movf	??_EEPROM_Read+2,w
  3949  02C9  0084               	movwf	4
  3950  02CA  1783               	bsf	3,7
  3951  02CB  1C7C               	btfss	??_EEPROM_Read+3,0
  3952  02CC  1383               	bcf	3,7
  3953  02CD  0A00               	incf	0,w
  3954  02CE  1903               	btfsc	3,2
  3955  02CF  2AD7               	goto	i1l1584
  3956  02D0  3002               	movlw	2
  3957  02D1  07F7               	addwf	EEPROM_Read@EEPROMDataLength,f
  3958  02D2  1803               	skipnc
  3959  02D3  0AF8               	incf	EEPROM_Read@EEPROMDataLength+1,f
  3960  02D4  3000               	movlw	0
  3961  02D5  07F8               	addwf	EEPROM_Read@EEPROMDataLength+1,f
  3962  02D6  2AB6               	goto	i1l1582
  3963  02D7                     i1l1584:	
  3964                           
  3965                           ;I2C.c: 134: for(UINT i = 0; i < *EEPROMDataLength; i++){
  3966  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  3967  02D8  1303               	bcf	3,6	;RP1=0, select bank0
  3968  02D9  01A2               	clrf	EEPROM_Read@i
  3969  02DA  01A3               	clrf	EEPROM_Read@i+1
  3970  02DB                     i1l1590:	
  3971  02DB  0877               	movf	EEPROM_Read@EEPROMDataLength,w
  3972  02DC  0084               	movwf	4
  3973  02DD  1783               	bsf	3,7
  3974  02DE  1C78               	btfss	EEPROM_Read@EEPROMDataLength+1,0
  3975  02DF  1383               	bcf	3,7
  3976  02E0  0800               	movf	0,w
  3977  02E1  00F9               	movwf	??_EEPROM_Read
  3978  02E2  0A84               	incf	4,f
  3979  02E3  0800               	movf	0,w
  3980  02E4  00FA               	movwf	??_EEPROM_Read+1
  3981  02E5  087A               	movf	??_EEPROM_Read+1,w
  3982  02E6  0223               	subwf	EEPROM_Read@i+1,w
  3983  02E7  1D03               	skipz
  3984  02E8  2AEB               	goto	u88_25
  3985  02E9  0879               	movf	??_EEPROM_Read,w
  3986  02EA  0222               	subwf	EEPROM_Read@i,w
  3987  02EB                     u88_25:	
  3988  02EB  1803               	btfsc	3,0
  3989  02EC  2B0C               	goto	i1l1592
  3990                           
  3991                           ;I2C.c: 138: ReadData[i] = I2C_Master_Read(1);
  3992  02ED  3001               	movlw	1
  3993  02EE  120A  118A  25FD  120A  118A  	fcall	_I2C_Master_Read
  3994  02F3  00F9               	movwf	??_EEPROM_Read
  3995  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  3996  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  3997  02F6  0822               	movf	EEPROM_Read@i,w
  3998  02F7  0775               	addwf	EEPROM_Read@ReadData,w
  3999  02F8  00FA               	movwf	??_EEPROM_Read+1
  4000  02F9  0823               	movf	EEPROM_Read@i+1,w
  4001  02FA  1803               	skipnc
  4002  02FB  0A23               	incf	EEPROM_Read@i+1,w
  4003  02FC  0776               	addwf	EEPROM_Read@ReadData+1,w
  4004  02FD  00FB               	movwf	??_EEPROM_Read+2
  4005  02FE  087A               	movf	??_EEPROM_Read+1,w
  4006  02FF  0084               	movwf	4
  4007  0300  1783               	bsf	3,7
  4008  0301  1C7B               	btfss	??_EEPROM_Read+2,0
  4009  0302  1383               	bcf	3,7
  4010  0303  0879               	movf	??_EEPROM_Read,w
  4011  0304  0080               	movwf	0
  4012  0305  3001               	movlw	1
  4013  0306  07A2               	addwf	EEPROM_Read@i,f
  4014  0307  1803               	skipnc
  4015  0308  0AA3               	incf	EEPROM_Read@i+1,f
  4016  0309  3000               	movlw	0
  4017  030A  07A3               	addwf	EEPROM_Read@i+1,f
  4018  030B  2ADB               	goto	i1l1590
  4019  030C                     i1l1592:	
  4020                           
  4021                           ;I2C.c: 140: }
  4022                           ;I2C.c: 141: ReadData[*EEPROMDataLength] = I2C_Master_Read(0);
  4023  030C  3000               	movlw	0
  4024  030D  120A  118A  25FD  120A  118A  	fcall	_I2C_Master_Read
  4025  0312  00F9               	movwf	??_EEPROM_Read
  4026  0313  0877               	movf	EEPROM_Read@EEPROMDataLength,w
  4027  0314  0084               	movwf	4
  4028  0315  1783               	bsf	3,7
  4029  0316  1C78               	btfss	EEPROM_Read@EEPROMDataLength+1,0
  4030  0317  1383               	bcf	3,7
  4031  0318  0800               	movf	0,w
  4032  0319  00FA               	movwf	??_EEPROM_Read+1
  4033  031A  0A84               	incf	4,f
  4034  031B  0800               	movf	0,w
  4035  031C  00FB               	movwf	??_EEPROM_Read+2
  4036  031D  087A               	movf	??_EEPROM_Read+1,w
  4037  031E  0775               	addwf	EEPROM_Read@ReadData,w
  4038  031F  00FC               	movwf	??_EEPROM_Read+3
  4039  0320  087B               	movf	??_EEPROM_Read+2,w
  4040  0321  1803               	skipnc
  4041  0322  0A7B               	incf	??_EEPROM_Read+2,w
  4042  0323  0776               	addwf	EEPROM_Read@ReadData+1,w
  4043  0324  00FD               	movwf	??_EEPROM_Read+4
  4044  0325  087C               	movf	??_EEPROM_Read+3,w
  4045  0326  0084               	movwf	4
  4046  0327  1783               	bsf	3,7
  4047  0328  1C7D               	btfss	??_EEPROM_Read+4,0
  4048  0329  1383               	bcf	3,7
  4049  032A  0879               	movf	??_EEPROM_Read,w
  4050  032B  0080               	movwf	0
  4051                           
  4052                           ;I2C.c: 143: I2C_Master_Stop();
  4053  032C  120A  118A  270A  120A  118A  	fcall	_I2C_Master_Stop
  4054                           
  4055                           ;I2C.c: 152: _delay((unsigned long)((200)*(10000000/4000.0)));
  4056  0331  3003               	movlw	3
  4057  0332  00FB               	movwf	??_EEPROM_Read+2
  4058  0333  308A               	movlw	138
  4059  0334  00FA               	movwf	??_EEPROM_Read+1
  4060  0335  3055               	movlw	85
  4061  0336  00F9               	movwf	??_EEPROM_Read
  4062  0337                     u136_27:	
  4063  0337  0BF9               	decfsz	??_EEPROM_Read,f
  4064  0338  2B37               	goto	u136_27
  4065  0339  0BFA               	decfsz	??_EEPROM_Read+1,f
  4066  033A  2B37               	goto	u136_27
  4067  033B  0BFB               	decfsz	??_EEPROM_Read+2,f
  4068  033C  2B37               	goto	u136_27
  4069  033D  2B3E               	nop2
  4070  033E  0008               	return
  4071  033F                     __end_of_EEPROM_Read:	
  4072                           
  4073                           	psect	text14
  4074  0702                     __ptext14:	
  4075 ;; *************** function _I2C_Master_Write *****************
  4076 ;; Defined at:
  4077 ;;		line 37 in file "I2C.c"
  4078 ;; Parameters:    Size  Location     Type
  4079 ;;  d               2    0[COMMON] unsigned int 
  4080 ;; Auto vars:     Size  Location     Type
  4081 ;;		None
  4082 ;; Return value:  Size  Location     Type
  4083 ;;                  1    wreg      void 
  4084 ;; Registers used:
  4085 ;;		wreg, status,2, status,0, pclath, cstack
  4086 ;; Tracked objects:
  4087 ;;		On entry : 0/0
  4088 ;;		On exit  : 0/0
  4089 ;;		Unchanged: 0/0
  4090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4091 ;;      Params:         2       0       0       0       0
  4092 ;;      Locals:         0       0       0       0       0
  4093 ;;      Temps:          0       0       0       0       0
  4094 ;;      Totals:         2       0       0       0       0
  4095 ;;Total ram usage:        2 bytes
  4096 ;; Hardware stack levels used:    1
  4097 ;; Hardware stack levels required when called:    1
  4098 ;; This function calls:
  4099 ;;		_I2C_Master_Wait
  4100 ;; This function is called by:
  4101 ;;		_EEPROM_Read
  4102 ;;		_EEPROM_Write
  4103 ;;		_EEPROM_Read2
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           
  4107                           
  4108                           ;psect for function _I2C_Master_Write
  4109  0702                     _I2C_Master_Write:	
  4110                           
  4111                           ;I2C.c: 38: I2C_Master_Wait();
  4112                           
  4113                           ;incstack = 0
  4114                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  4115  0702  120A  118A  26F1   	fcall	_I2C_Master_Wait
  4116                           
  4117                           ;I2C.c: 39: SSPBUF = d;
  4118  0705  0870               	movf	I2C_Master_Write@d,w
  4119  0706  1283               	bcf	3,5	;RP0=0, select bank0
  4120  0707  1303               	bcf	3,6	;RP1=0, select bank0
  4121  0708  0093               	movwf	19	;volatile
  4122  0709  0008               	return
  4123  070A                     __end_of_I2C_Master_Write:	
  4124                           
  4125                           	psect	text15
  4126  070A                     __ptext15:	
  4127 ;; *************** function _I2C_Master_Stop *****************
  4128 ;; Defined at:
  4129 ;;		line 32 in file "I2C.c"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;		None
  4132 ;; Auto vars:     Size  Location     Type
  4133 ;;		None
  4134 ;; Return value:  Size  Location     Type
  4135 ;;                  1    wreg      void 
  4136 ;; Registers used:
  4137 ;;		wreg, status,2, status,0, pclath, cstack
  4138 ;; Tracked objects:
  4139 ;;		On entry : 0/0
  4140 ;;		On exit  : 0/0
  4141 ;;		Unchanged: 0/0
  4142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4143 ;;      Params:         0       0       0       0       0
  4144 ;;      Locals:         0       0       0       0       0
  4145 ;;      Temps:          0       0       0       0       0
  4146 ;;      Totals:         0       0       0       0       0
  4147 ;;Total ram usage:        0 bytes
  4148 ;; Hardware stack levels used:    1
  4149 ;; Hardware stack levels required when called:    1
  4150 ;; This function calls:
  4151 ;;		_I2C_Master_Wait
  4152 ;; This function is called by:
  4153 ;;		_EEPROM_Read
  4154 ;;		_EEPROM_Write
  4155 ;;		_EEPROM_Read2
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159                           
  4160                           ;psect for function _I2C_Master_Stop
  4161  070A                     _I2C_Master_Stop:	
  4162                           
  4163                           ;I2C.c: 33: I2C_Master_Wait();
  4164                           
  4165                           ;incstack = 0
  4166                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  4167  070A  120A  118A  26F1   	fcall	_I2C_Master_Wait
  4168                           
  4169                           ;I2C.c: 34: PEN = 1;
  4170  070D  1683               	bsf	3,5	;RP0=1, select bank1
  4171  070E  1303               	bcf	3,6	;RP1=0, select bank1
  4172  070F  1511               	bsf	17,2	;volatile
  4173  0710  0008               	return
  4174  0711                     __end_of_I2C_Master_Stop:	
  4175                           
  4176                           	psect	text16
  4177  0711                     __ptext16:	
  4178 ;; *************** function _I2C_Master_Start *****************
  4179 ;; Defined at:
  4180 ;;		line 22 in file "I2C.c"
  4181 ;; Parameters:    Size  Location     Type
  4182 ;;		None
  4183 ;; Auto vars:     Size  Location     Type
  4184 ;;		None
  4185 ;; Return value:  Size  Location     Type
  4186 ;;                  1    wreg      void 
  4187 ;; Registers used:
  4188 ;;		wreg, status,2, status,0, pclath, cstack
  4189 ;; Tracked objects:
  4190 ;;		On entry : 0/0
  4191 ;;		On exit  : 0/0
  4192 ;;		Unchanged: 0/0
  4193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4194 ;;      Params:         0       0       0       0       0
  4195 ;;      Locals:         0       0       0       0       0
  4196 ;;      Temps:          0       0       0       0       0
  4197 ;;      Totals:         0       0       0       0       0
  4198 ;;Total ram usage:        0 bytes
  4199 ;; Hardware stack levels used:    1
  4200 ;; Hardware stack levels required when called:    1
  4201 ;; This function calls:
  4202 ;;		_I2C_Master_Wait
  4203 ;; This function is called by:
  4204 ;;		_EEPROM_Read
  4205 ;;		_EEPROM_Write
  4206 ;;		_EEPROM_Read2
  4207 ;; This function uses a non-reentrant model
  4208 ;;
  4209                           
  4210                           
  4211                           ;psect for function _I2C_Master_Start
  4212  0711                     _I2C_Master_Start:	
  4213                           
  4214                           ;I2C.c: 23: I2C_Master_Wait();
  4215                           
  4216                           ;incstack = 0
  4217                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  4218  0711  120A  118A  26F1   	fcall	_I2C_Master_Wait
  4219                           
  4220                           ;I2C.c: 24: SEN = 1;
  4221  0714  1683               	bsf	3,5	;RP0=1, select bank1
  4222  0715  1303               	bcf	3,6	;RP1=0, select bank1
  4223  0716  1411               	bsf	17,0	;volatile
  4224  0717  0008               	return
  4225  0718                     __end_of_I2C_Master_Start:	
  4226                           
  4227                           	psect	text17
  4228  0718                     __ptext17:	
  4229 ;; *************** function _I2C_Master_RepeatedStart *****************
  4230 ;; Defined at:
  4231 ;;		line 27 in file "I2C.c"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;		None
  4234 ;; Auto vars:     Size  Location     Type
  4235 ;;		None
  4236 ;; Return value:  Size  Location     Type
  4237 ;;                  1    wreg      void 
  4238 ;; Registers used:
  4239 ;;		wreg, status,2, status,0, pclath, cstack
  4240 ;; Tracked objects:
  4241 ;;		On entry : 0/0
  4242 ;;		On exit  : 0/0
  4243 ;;		Unchanged: 0/0
  4244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4245 ;;      Params:         0       0       0       0       0
  4246 ;;      Locals:         0       0       0       0       0
  4247 ;;      Temps:          0       0       0       0       0
  4248 ;;      Totals:         0       0       0       0       0
  4249 ;;Total ram usage:        0 bytes
  4250 ;; Hardware stack levels used:    1
  4251 ;; Hardware stack levels required when called:    1
  4252 ;; This function calls:
  4253 ;;		_I2C_Master_Wait
  4254 ;; This function is called by:
  4255 ;;		_EEPROM_Read
  4256 ;;		_EEPROM_Read2
  4257 ;; This function uses a non-reentrant model
  4258 ;;
  4259                           
  4260                           
  4261                           ;psect for function _I2C_Master_RepeatedStart
  4262  0718                     _I2C_Master_RepeatedStart:	
  4263                           
  4264                           ;I2C.c: 28: I2C_Master_Wait();
  4265                           
  4266                           ;incstack = 0
  4267                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  4268  0718  120A  118A  26F1   	fcall	_I2C_Master_Wait
  4269                           
  4270                           ;I2C.c: 29: RSEN = 1;
  4271  071B  1683               	bsf	3,5	;RP0=1, select bank1
  4272  071C  1303               	bcf	3,6	;RP1=0, select bank1
  4273  071D  1491               	bsf	17,1	;volatile
  4274  071E  0008               	return
  4275  071F                     __end_of_I2C_Master_RepeatedStart:	
  4276                           
  4277                           	psect	text18
  4278  05FD                     __ptext18:	
  4279 ;; *************** function _I2C_Master_Read *****************
  4280 ;; Defined at:
  4281 ;;		line 42 in file "I2C.c"
  4282 ;; Parameters:    Size  Location     Type
  4283 ;;  a               1    wreg     unsigned char 
  4284 ;; Auto vars:     Size  Location     Type
  4285 ;;  a               1    1[COMMON] unsigned char 
  4286 ;;  temp            1    2[COMMON] unsigned char 
  4287 ;; Return value:  Size  Location     Type
  4288 ;;                  1    wreg      unsigned char 
  4289 ;; Registers used:
  4290 ;;		wreg, status,2, status,0, pclath, cstack
  4291 ;; Tracked objects:
  4292 ;;		On entry : 0/0
  4293 ;;		On exit  : 0/0
  4294 ;;		Unchanged: 0/0
  4295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4296 ;;      Params:         0       0       0       0       0
  4297 ;;      Locals:         2       0       0       0       0
  4298 ;;      Temps:          1       0       0       0       0
  4299 ;;      Totals:         3       0       0       0       0
  4300 ;;Total ram usage:        3 bytes
  4301 ;; Hardware stack levels used:    1
  4302 ;; Hardware stack levels required when called:    1
  4303 ;; This function calls:
  4304 ;;		_I2C_Master_Wait
  4305 ;; This function is called by:
  4306 ;;		_EEPROM_Read
  4307 ;;		_EEPROM_Read2
  4308 ;; This function uses a non-reentrant model
  4309 ;;
  4310                           
  4311                           
  4312                           ;psect for function _I2C_Master_Read
  4313  05FD                     _I2C_Master_Read:	
  4314                           
  4315                           ;incstack = 0
  4316                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  4317                           ;I2C_Master_Read@a stored from wreg
  4318  05FD  00F1               	movwf	I2C_Master_Read@a
  4319                           
  4320                           ;I2C.c: 43: unsigned char temp;
  4321                           ;I2C.c: 45: I2C_Master_Wait();
  4322  05FE  120A  118A  26F1  120A  118A  	fcall	_I2C_Master_Wait
  4323                           
  4324                           ;I2C.c: 46: RCEN = 1;
  4325  0603  1683               	bsf	3,5	;RP0=1, select bank1
  4326  0604  1303               	bcf	3,6	;RP1=0, select bank1
  4327  0605  1591               	bsf	17,3	;volatile
  4328                           
  4329                           ;I2C.c: 47: I2C_Master_Wait();
  4330  0606  120A  118A  26F1  120A  118A  	fcall	_I2C_Master_Wait
  4331                           
  4332                           ;I2C.c: 48: temp = SSPBUF;
  4333  060B  1283               	bcf	3,5	;RP0=0, select bank0
  4334  060C  1303               	bcf	3,6	;RP1=0, select bank0
  4335  060D  0813               	movf	19,w	;volatile
  4336  060E  00F0               	movwf	??_I2C_Master_Read
  4337  060F  0870               	movf	??_I2C_Master_Read,w
  4338  0610  00F2               	movwf	I2C_Master_Read@temp
  4339                           
  4340                           ;I2C.c: 50: I2C_Master_Wait();
  4341  0611  120A  118A  26F1  120A  118A  	fcall	_I2C_Master_Wait
  4342                           
  4343                           ;I2C.c: 51: ACKDT = (a)?0:1;
  4344  0616  0871               	movf	I2C_Master_Read@a,w
  4345  0617  1D03               	btfss	3,2
  4346  0618  2E1D               	goto	u75_20
  4347  0619  1683               	bsf	3,5	;RP0=1, select bank1
  4348  061A  1303               	bcf	3,6	;RP1=0, select bank1
  4349  061B  1691               	bsf	17,5	;volatile
  4350  061C  2E20               	goto	i1l1494
  4351  061D                     u75_20:	
  4352  061D  1683               	bsf	3,5	;RP0=1, select bank1
  4353  061E  1303               	bcf	3,6	;RP1=0, select bank1
  4354  061F  1291               	bcf	17,5	;volatile
  4355  0620                     i1l1494:	
  4356                           
  4357                           ;I2C.c: 52: ACKEN = 1;
  4358  0620  1611               	bsf	17,4	;volatile
  4359                           
  4360                           ;I2C.c: 53: return temp;
  4361  0621  0872               	movf	I2C_Master_Read@temp,w
  4362  0622  0008               	return
  4363  0623                     __end_of_I2C_Master_Read:	
  4364                           
  4365                           	psect	text19
  4366  06F1                     __ptext19:	
  4367 ;; *************** function _I2C_Master_Wait *****************
  4368 ;; Defined at:
  4369 ;;		line 18 in file "I2C.c"
  4370 ;; Parameters:    Size  Location     Type
  4371 ;;		None
  4372 ;; Auto vars:     Size  Location     Type
  4373 ;;		None
  4374 ;; Return value:  Size  Location     Type
  4375 ;;                  1    wreg      void 
  4376 ;; Registers used:
  4377 ;;		wreg, status,2
  4378 ;; Tracked objects:
  4379 ;;		On entry : 0/0
  4380 ;;		On exit  : 0/0
  4381 ;;		Unchanged: 0/0
  4382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4383 ;;      Params:         0       0       0       0       0
  4384 ;;      Locals:         0       0       0       0       0
  4385 ;;      Temps:          0       0       0       0       0
  4386 ;;      Totals:         0       0       0       0       0
  4387 ;;Total ram usage:        0 bytes
  4388 ;; Hardware stack levels used:    1
  4389 ;; This function calls:
  4390 ;;		Nothing
  4391 ;; This function is called by:
  4392 ;;		_I2C_Master_Start
  4393 ;;		_I2C_Master_RepeatedStart
  4394 ;;		_I2C_Master_Stop
  4395 ;;		_I2C_Master_Write
  4396 ;;		_I2C_Master_Read
  4397 ;; This function uses a non-reentrant model
  4398 ;;
  4399                           
  4400                           
  4401                           ;psect for function _I2C_Master_Wait
  4402  06F1                     _I2C_Master_Wait:	
  4403  06F1                     i1l282:	
  4404                           ;I2C.c: 19: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4405                           
  4406                           ;incstack = 0
  4407                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4408                           
  4409  06F1  1683               	bsf	3,5	;RP0=1, select bank1
  4410  06F2  1303               	bcf	3,6	;RP1=0, select bank1
  4411  06F3  1914               	btfsc	20,2	;volatile
  4412  06F4  2EF1               	goto	i1l282
  4413  06F5  0811               	movf	17,w	;volatile
  4414  06F6  391F               	andlw	31
  4415  06F7  1903               	btfsc	3,2
  4416  06F8  0008               	return
  4417  06F9  2EF1               	goto	i1l282
  4418  06FA                     __end_of_I2C_Master_Wait:	
  4419  007E                     btemp	set	126	;btemp
  4420  007E                     wtemp0	set	126


Data Sizes:
    Strings     14
    Constant    0
    Data        36
    BSS         78
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     65      79
    BANK1            80     25      75
    BANK3            96      0      50
    BANK2            96      0       0

Pointer List with Targets:

    EEPROM_Read@ReadData	PTR unsigned char  size(2) Largest target is 0
		 -> InterReceiver@EEPROMCmdData_109(BANK0[0]), InterReceiver@EEPROMCmdData(BANK0[0]), 

    EEPROM_Read@EEPROMDataLength	PTR unsigned int  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    SendPacket@eDataField	PTR unsigned char  size(2) Largest target is 5
		 -> InterReceiver@EEPROMCmdData_109(BANK0[0]), InterReceiver@EEPROMTestData(BANK0[5]), InterReceiver@EEPROMCmdData(BANK0[0]), 

    Packetmaker@eDataField	PTR unsigned char  size(2) Largest target is 5
		 -> InterReceiver@EEPROMCmdData_109(BANK0[0]), InterReceiver@EEPROMTestData(BANK0[5]), InterReceiver@EEPROMCmdData(BANK0[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _InterReceiver in COMMON

    _InterReceiver->_EEPROM_Read
    _SendPacket->_Packetmaker
    _SendByte->_fcsbit
    _EEPROM_Read->_I2C_Master_Read

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterReceiver in BANK0

    _InterReceiver->_SendPacket

Critical Paths under _main in BANK1

    _main->_Init_I2C_M
    _Init_I2C_M->___lldiv

Critical Paths under _InterReceiver in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterReceiver in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterReceiver in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                39    39      0     343
                                             22 BANK1      3     3      0
                         _Init_I2C_M
                           _Init_MPU
                        _Init_SERIAL
                           _Init_WDT
 ---------------------------------------------------------------------------------
 (1) _Init_WDT                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_SERIAL                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_MPU                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_I2C_M                                           8     4      4     343
                                             14 BANK1      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     268
                                              0 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _InterReceiver                                       52    52      0    3093
                                             13 BANK0     52    52      0
                        _EEPROM_Read
                         _SendPacket
                              _getch
 ---------------------------------------------------------------------------------
 (4) _getch                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _SendPacket                                          13    11      2     915
                                              0 BANK0     13    11      2
                        _Packetmaker
                           _SendByte
 ---------------------------------------------------------------------------------
 (5) _SendByte                                             6     6      0     158
                                              3 COMMON     6     6      0
                             _fcsbit
                            _flipout
 ---------------------------------------------------------------------------------
 (6) _flipout                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _fcsbit                                               3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (6) _Packetmaker                                         13    11      2     414
                                              0 COMMON    13    11      2
 ---------------------------------------------------------------------------------
 (4) _EEPROM_Read                                         16    10      6    1515
                                              3 COMMON    11     5      6
                                              0 BANK0      5     5      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     2     0      2     711
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Read                                      3     3      0      45
                                              0 COMMON     3     3      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_I2C_M
     ___lldiv
   _Init_MPU
   _Init_SERIAL
   _Init_WDT

 _InterReceiver (ROOT)
   _EEPROM_Read
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _SendPacket
     _Packetmaker
     _SendByte
       _fcsbit
       _flipout
   _getch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      32       9       52.1%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     19      4B       7       93.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     41      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      DA      12        0.0%
ABS                  0      0      DA       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Feb 23 15:38:17 2018

                                   pc 0002                           __CFG_CP$OFF 0000  
                                  fsr 0004                                   l245 04FF  
                                 _GIE 005F                                   _RB1 0031  
                                 _RC0 0038                                   _RB3 0033  
                                 _RC2 003A                                   _RC5 003D  
                                 _PEN 048A                          __CFG_CPD$OFF 0000  
                                 _SEN 0488                                   u805 0537  
                                 u815 054C                                   u825 055E  
                                 u785 0529                                   u945 05DB  
                                 _RX9 00C6                                   _TX9 04C6  
                                 fsr0 0004                                   indf 0000  
                        __CFG_FOSC$HS 0000                          __CFG_LVP$OFF 0000  
                     SendPacket@i_173 0029                       SendPacket@i_174 002B  
                                l1520 056A                                  l1506 0525  
                                l1516 055D                                  l1508 0535  
                                l1836 04D3                                  STR_1 06B1  
                        __CFG_WDTE$ON 0000                                  STR_2 06B8  
                                _BRGH 04C2                                  _CREN 00C4  
                                _FERR 00C2                                  u1117 04AD  
                                u1127 0507                                  u1137 04DD  
                                u1147 04EB                                  u1157 04F9  
                                _PEIE 005E                                  _RCIE 0465  
                                _RCEN 048B                                  _RCIF 0065  
                                i1l78 06E8                                  i1l79 06ED  
                                i1l95 0238                                  _OERR 00C1  
                                _TMR1 000E                                  _SPEN 00C7  
                                _RSEN 0489                                  _SREN 00C5  
                                _TXIE 0464                                  _TXEN 04C5  
                                _TXIF 0064                                  _SYNC 04C4  
                        __CFG_WRT$OFF 0000      __end_of_I2C_Master_RepeatedStart 071F  
                                _main 04A5                         ??_Init_SERIAL 00C2  
                                btemp 007E                         ??_Packetmaker 0072  
                         Init_I2C_M@c 00D0                                  start 0012  
                       __CFG_IESO$OFF 0000                         __CFG_MCLRE$ON 0000  
    InterReceiver@EEPROMCmdDataLength 0054                      ?_I2C_Master_Read 0070  
                    ?_I2C_Master_Wait 0070            InterReceiver@EEPROMCmdData 0034  
                    ?_I2C_Master_Stop 0070                                 ?_main 0070  
                               _ACKEN 048C                                 _ACKDT 048D  
                               _ANSEL 0188                       __end_of___lldiv 0573  
                               i1l102 0198                                 i1l110 0257  
                               i1l104 0236                                 i1l206 06CD  
                               i1l282 06F1                                 _RCREG 001A  
                               _SPBRG 0099                                 _PORTA 0005  
                               _PORTB 0006                                 _PORTC 0007  
                               _PORTE 0009                                 _TRISA 0085  
                               _TRISB 0086                                 _TRISC 0087  
                               _TRISE 0089                                 u75_20 061D  
                               u67_25 047D                                 u91_25 0399  
                               u88_25 02EB                                 _TXREG 0019  
                               u97_25 00CC                         __CFG_PWRTE$ON 0000  
                      __CFG_FCMEN$OFF 0000                       __end_of_flipout 06D1  
                               _eflag 0067                                 _getch 06E2  
                      __CFG_BOREN$OFF 0000                                 pclath 000A  
                               status 0003                                 wtemp0 007E  
              __size_of_InterReceiver 0217                            _Init_I2C_M 05CB  
                          SendByte@bt 0078               EEPROM_Read@high_address 0073  
                __size_of_EEPROM_Read 00DD                       __initialization 0015  
                        __end_of_main 0513                   __end_of_Init_SERIAL 0660  
                    __end_of_Init_MPU 067A                   __end_of_Packetmaker 04A5  
                    __end_of_Init_WDT 06AB                                ??_main 00D8  
                    __end_of_SendByte 05CB                     ?_I2C_Master_Start 0070  
                   ?_I2C_Master_Write 0070                 Packetmaker@eDataField 0070  
                  ??_I2C_Master_Start 0070                            _SendPacket 033F  
                              ?_getch 0070                    ??_I2C_Master_Write 0072  
                              _ANSELH 0189                          Packetmaker@i 0079  
                              u100_25 016A                                u101_25 0196  
                              i1l1410 044C                                i1l1420 0475  
                              i1l1404 042D                                i1l1426 0477  
                              i1l1418 045E                                i1l1428 049C  
                              i1l1460 05B4                                i1l1620 037A  
                              i1l1390 0400                                i1l1446 0592  
                              u120_27 012B                                i1l1632 0393  
                              i1l1634 03AE                                i1l1626 038F  
                              i1l1810 0232                                i1l1396 041E  
                              i1l1652 03D3                                u105_25 024D  
                              i1l1494 0620                                i1l1590 02DB  
                              i1l1582 02B6                                i1l1822 0254  
                              u121_27 0155                                i1l1592 030C  
                              i1l1584 02D7                                i1l1658 03E8  
                              i1l1746 0109                                i1l1772 016C  
                              i1l1780 019C                                u130_27 021D  
                              u122_27 017F                                u131_27 022D  
                              u123_27 01B4                                u132_27 0347  
                              u124_27 01C7                                u116_27 0079  
                              u133_27 03F0                                u125_27 01D5  
                              u117_27 00A3                                u134_27 05AA  
                              u126_27 01E3                                u118_27 00E1  
                              u135_27 05B8                                u127_27 01F1  
                              u119_27 00FA                                u136_27 0337  
                              u128_27 01FF                                u129_27 020D  
                              _SSPADD 0093                                _STATUS 0003  
                              _SSPCON 0014                                _SSPBUF 0013  
            _I2C_Master_RepeatedStart 0718                             ??___lldiv 00CA  
                              _efcshi 006B                                _efcslo 006C  
                              _fcsbit 067A                                _estuff 0063  
                       _InterReceiver 004B                             ??_flipout 0070  
                              saved_w 007E                EEPROM_Read@low_address 0074  
InterReceiver@EEPROMCmdDataLength_110 0056               __end_of__initialization 0047  
                         SendPacket@i 0027                           ?_Init_I2C_M 00D0  
                         _Init_SERIAL 0645                    Packetmaker@Datanum 0077  
                         _Packetmaker 03F7                        __pcstackCOMMON 0070  
                        __pidataBANK0 071F                          __pidataBANK1 0623  
                       __end_of_getch 06F1                        ?_InterReceiver 0070  
                      _OPTION_REGbits 0081                           ?_SendPacket 0020  
                             ??_getch 0070                            __pbssBANK0 0061  
                          __pbssBANK1 00DB                            __pbssBANK3 0190  
                           ?_Init_MPU 0070                             ?_Init_WDT 0070  
                           ?_SendByte 0070                            __pmaintext 04A5  
                          _ebitstatus 0061                            __pintentry 0004  
                             ?_fcsbit 0070                  SendPacket@eDataField 0020  
                 __size_of_Init_I2C_M 0032                               _SSPCON2 0091  
                             _SSPSTAT 0094                            __stringtab 06AB  
                          ??_Init_MPU 00C2                            ??_Init_WDT 00C2  
                          ??_SendByte 0073                               _ePacket 0190  
                             ___lldiv 0513                   __size_of_SendPacket 00B8  
                     ??_InterReceiver 002D                       __size_of_fcsbit 001A  
                             __ptext1 0694                               __ptext2 0645  
                             __ptext3 0660                               __ptext4 05CB  
                             __ptext5 0513                               __ptext6 004B  
                             __ptext7 06E2                               __ptext8 033F  
                             __ptext9 0573                        InterReceiver@i 005D  
                             _flipout 06BF                             _T1CONbits 0010  
            __size_of_I2C_Master_Read 0026              __size_of_I2C_Master_Wait 0009  
            __size_of_I2C_Master_Stop 0007                               clrloop0 06FB  
                end_of_initialization 0047                             _FMRX_Nref 00BE  
                           _FMRX_Nprg 00A0            ??_I2C_Master_RepeatedStart 0070  
                           _FMTX_Nref 006D                             _FMTX_Nprg 00B4  
                       ??_EEPROM_Read 0079                             _CWTX_Nref 00C0  
                           _CWTX_Nprg 00AA             __size_of_I2C_Master_Start 0007  
           __size_of_I2C_Master_Write 0008                       ___lldiv@divisor 00C2  
                     ___lldiv@counter 00CF                      I2C_Master_Read@a 0071  
           InterReceiver@intr_counter 0069                   InterReceiver@RXDATA 0034  
                        SendByte@byte 0077                          ??_Init_I2C_M 00D4  
                        ?_Init_SERIAL 0070                          ?_Packetmaker 0070  
           EEPROM_Read@EEPROM_address 0020                   __end_of_EEPROM_Read 033F  
                      __end_of_fcsbit 0694                   start_initialization 0015  
                           SendByte@i 0075                    __end_of_Init_I2C_M 05FD  
                        ??_SendPacket 0022                     ??_I2C_Master_Read 0070  
                   ??_I2C_Master_Wait 0070                     ??_I2C_Master_Stop 0070  
                   __size_of_Init_MPU 001A                     __size_of_Init_WDT 0017  
              EEPROM_Read@ReadAddress 0021                     __size_of_SendByte 0058  
                          init_fetch0 06D1                              ??_fcsbit 0070  
                         __pdataBANK0 006D                           __pdataBANK1 00A0  
                  __end_of_SendPacket 03F7                             ___latbits 0002  
                       __pcstackBANK0 0020                         __pcstackBANK1 00C2  
                         _EEPROM_Read 0262                   SendPacket@Packetnum 0025  
                    _I2C_Master_Start 0711                      _I2C_Master_Write 0702  
                            ?___lldiv 00C2                             __pstrings 06AB  
                            ?_flipout 0070                        __size_of_getch 000F  
                   interrupt_function 0004                             clear_ram0 06FA  
                            _PIE1bits 008C                  __size_of_Init_SERIAL 001B  
                            _PIR1bits 000C                  __size_of_Packetmaker 00AE  
                  InterReceiver@i_111 005F                          EEPROM_Read@i 0022  
               __end_of_InterReceiver 0262                           __stringbase 06B0  
                 I2C_Master_Read@temp 0072                              _Init_MPU 0660  
                            _Init_WDT 0694                              _SendByte 0573  
         InterReceiver@EEPROMTestData 0058     __size_of_I2C_Master_RepeatedStart 0007  
           ?_I2C_Master_RepeatedStart 0070                      __size_of___lldiv 0060  
                    Packetmaker@i_164 007B                      Packetmaker@i_167 0075  
                  __end_of__stringtab 06B1                   EEPROM_Read@ReadData 0075  
                          _EEPROMData 00DB                       _I2C_Master_Read 05FD  
                    __size_of_flipout 0012                       _I2C_Master_Wait 06F1  
                     _I2C_Master_Stop 070A                              _efcsflag 0065  
                            __ptext10 06BF                              __ptext11 067A  
                            __ptext12 03F7                              __ptext13 0262  
                            __ptext14 0702                              __ptext15 070A  
                            __ptext16 0711                              __ptext17 0718  
                            __ptext18 05FD                              __ptext19 06F1  
                   __CFG_BOR4V$BOR40V 0000                         __size_of_main 006E  
         EEPROM_Read@EEPROMDataLength 0077              __end_of_I2C_Master_Start 0718  
            __end_of_I2C_Master_Write 070A                            _INTCONbits 000B  
                  EEPROM_Read@Address 0024                              init_ram0 06D5  
                            intlevel1 0000                          ?_EEPROM_Read 0073  
                    ___lldiv@dividend 00C6                             stringcode 06AB  
             __end_of_I2C_Master_Read 0623               __end_of_I2C_Master_Wait 06FA  
             __end_of_I2C_Master_Stop 0711                           fcsbit@tbyte 0072  
                    ___lldiv@quotient 00CB                     I2C_Master_Write@d 0070  
                            stringdir 06AB                              stringtab 06AB  
      InterReceiver@EEPROMCmdData_109 0034  
