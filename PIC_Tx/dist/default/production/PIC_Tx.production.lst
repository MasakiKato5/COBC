

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Feb 22 14:51:34 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 1.45
    41                           ; Generated 16/11/2017 GMT
    42                           ; 
    43                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F886 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  008F                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  0105                     	;# 
   136  0107                     	;# 
   137  0108                     	;# 
   138  0109                     	;# 
   139  010C                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0185                     	;# 
   145  0187                     	;# 
   146  0188                     	;# 
   147  0189                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0015                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001D                     	;# 
   182  001E                     	;# 
   183  001F                     	;# 
   184  0081                     	;# 
   185  0085                     	;# 
   186  0086                     	;# 
   187  0087                     	;# 
   188  0089                     	;# 
   189  008C                     	;# 
   190  008D                     	;# 
   191  008E                     	;# 
   192  008F                     	;# 
   193  0090                     	;# 
   194  0091                     	;# 
   195  0092                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0094                     	;# 
   200  0095                     	;# 
   201  0096                     	;# 
   202  0097                     	;# 
   203  0098                     	;# 
   204  0099                     	;# 
   205  009A                     	;# 
   206  009B                     	;# 
   207  009C                     	;# 
   208  009D                     	;# 
   209  009E                     	;# 
   210  009F                     	;# 
   211  0105                     	;# 
   212  0107                     	;# 
   213  0108                     	;# 
   214  0109                     	;# 
   215  010C                     	;# 
   216  010C                     	;# 
   217  010D                     	;# 
   218  010E                     	;# 
   219  010F                     	;# 
   220  0185                     	;# 
   221  0187                     	;# 
   222  0188                     	;# 
   223  0189                     	;# 
   224  018C                     	;# 
   225  018D                     	;# 
   226  0000                     	;# 
   227  0001                     	;# 
   228  0002                     	;# 
   229  0003                     	;# 
   230  0004                     	;# 
   231  0005                     	;# 
   232  0006                     	;# 
   233  0007                     	;# 
   234  0008                     	;# 
   235  0009                     	;# 
   236  000A                     	;# 
   237  000B                     	;# 
   238  000C                     	;# 
   239  000D                     	;# 
   240  000E                     	;# 
   241  000E                     	;# 
   242  000F                     	;# 
   243  0010                     	;# 
   244  0011                     	;# 
   245  0012                     	;# 
   246  0013                     	;# 
   247  0014                     	;# 
   248  0015                     	;# 
   249  0015                     	;# 
   250  0016                     	;# 
   251  0017                     	;# 
   252  0018                     	;# 
   253  0019                     	;# 
   254  001A                     	;# 
   255  001B                     	;# 
   256  001B                     	;# 
   257  001C                     	;# 
   258  001D                     	;# 
   259  001E                     	;# 
   260  001F                     	;# 
   261  0081                     	;# 
   262  0085                     	;# 
   263  0086                     	;# 
   264  0087                     	;# 
   265  0088                     	;# 
   266  0089                     	;# 
   267  008C                     	;# 
   268  008D                     	;# 
   269  008E                     	;# 
   270  008F                     	;# 
   271  0090                     	;# 
   272  0091                     	;# 
   273  0092                     	;# 
   274  0093                     	;# 
   275  0093                     	;# 
   276  0093                     	;# 
   277  0094                     	;# 
   278  0095                     	;# 
   279  0096                     	;# 
   280  0097                     	;# 
   281  0098                     	;# 
   282  0099                     	;# 
   283  009A                     	;# 
   284  009B                     	;# 
   285  009C                     	;# 
   286  009D                     	;# 
   287  009E                     	;# 
   288  009F                     	;# 
   289  0105                     	;# 
   290  0107                     	;# 
   291  0108                     	;# 
   292  0109                     	;# 
   293  010C                     	;# 
   294  010C                     	;# 
   295  010D                     	;# 
   296  010E                     	;# 
   297  010F                     	;# 
   298  0185                     	;# 
   299  0187                     	;# 
   300  0188                     	;# 
   301  0189                     	;# 
   302  018C                     	;# 
   303  018D                     	;# 
   304  0000                     	;# 
   305  0001                     	;# 
   306  0002                     	;# 
   307  0003                     	;# 
   308  0004                     	;# 
   309  0005                     	;# 
   310  0006                     	;# 
   311  0007                     	;# 
   312  0009                     	;# 
   313  000A                     	;# 
   314  000B                     	;# 
   315  000C                     	;# 
   316  000D                     	;# 
   317  000E                     	;# 
   318  000E                     	;# 
   319  000F                     	;# 
   320  0010                     	;# 
   321  0011                     	;# 
   322  0012                     	;# 
   323  0013                     	;# 
   324  0014                     	;# 
   325  0015                     	;# 
   326  0015                     	;# 
   327  0016                     	;# 
   328  0017                     	;# 
   329  0018                     	;# 
   330  0019                     	;# 
   331  001A                     	;# 
   332  001B                     	;# 
   333  001B                     	;# 
   334  001C                     	;# 
   335  001D                     	;# 
   336  001E                     	;# 
   337  001F                     	;# 
   338  0081                     	;# 
   339  0085                     	;# 
   340  0086                     	;# 
   341  0087                     	;# 
   342  0089                     	;# 
   343  008C                     	;# 
   344  008D                     	;# 
   345  008E                     	;# 
   346  008F                     	;# 
   347  0090                     	;# 
   348  0091                     	;# 
   349  0092                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0093                     	;# 
   353  0094                     	;# 
   354  0095                     	;# 
   355  0096                     	;# 
   356  0097                     	;# 
   357  0098                     	;# 
   358  0099                     	;# 
   359  009A                     	;# 
   360  009B                     	;# 
   361  009C                     	;# 
   362  009D                     	;# 
   363  009E                     	;# 
   364  009F                     	;# 
   365  0105                     	;# 
   366  0107                     	;# 
   367  0108                     	;# 
   368  0109                     	;# 
   369  010C                     	;# 
   370  010C                     	;# 
   371  010D                     	;# 
   372  010E                     	;# 
   373  010F                     	;# 
   374  0185                     	;# 
   375  0187                     	;# 
   376  0188                     	;# 
   377  0189                     	;# 
   378  018C                     	;# 
   379  018D                     	;# 
   380  0000                     	;# 
   381  0001                     	;# 
   382  0002                     	;# 
   383  0003                     	;# 
   384  0004                     	;# 
   385  0005                     	;# 
   386  0006                     	;# 
   387  0007                     	;# 
   388  0008                     	;# 
   389  0009                     	;# 
   390  000A                     	;# 
   391  000B                     	;# 
   392  000C                     	;# 
   393  000D                     	;# 
   394  000E                     	;# 
   395  000E                     	;# 
   396  000F                     	;# 
   397  0010                     	;# 
   398  0011                     	;# 
   399  0012                     	;# 
   400  0013                     	;# 
   401  0014                     	;# 
   402  0015                     	;# 
   403  0015                     	;# 
   404  0016                     	;# 
   405  0017                     	;# 
   406  0018                     	;# 
   407  0019                     	;# 
   408  001A                     	;# 
   409  001B                     	;# 
   410  001B                     	;# 
   411  001C                     	;# 
   412  001D                     	;# 
   413  001E                     	;# 
   414  001F                     	;# 
   415  0081                     	;# 
   416  0085                     	;# 
   417  0086                     	;# 
   418  0087                     	;# 
   419  0088                     	;# 
   420  0089                     	;# 
   421  008C                     	;# 
   422  008D                     	;# 
   423  008E                     	;# 
   424  008F                     	;# 
   425  0090                     	;# 
   426  0091                     	;# 
   427  0092                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0093                     	;# 
   431  0094                     	;# 
   432  0095                     	;# 
   433  0096                     	;# 
   434  0097                     	;# 
   435  0098                     	;# 
   436  0099                     	;# 
   437  009A                     	;# 
   438  009B                     	;# 
   439  009C                     	;# 
   440  009D                     	;# 
   441  009E                     	;# 
   442  009F                     	;# 
   443  0105                     	;# 
   444  0107                     	;# 
   445  0108                     	;# 
   446  0109                     	;# 
   447  010C                     	;# 
   448  010C                     	;# 
   449  010D                     	;# 
   450  010E                     	;# 
   451  010F                     	;# 
   452  0185                     	;# 
   453  0187                     	;# 
   454  0188                     	;# 
   455  0189                     	;# 
   456  018C                     	;# 
   457  018D                     	;# 
   458  0000                     	;# 
   459  0001                     	;# 
   460  0002                     	;# 
   461  0003                     	;# 
   462  0004                     	;# 
   463  0005                     	;# 
   464  0006                     	;# 
   465  0007                     	;# 
   466  0009                     	;# 
   467  000A                     	;# 
   468  000B                     	;# 
   469  000C                     	;# 
   470  000D                     	;# 
   471  000E                     	;# 
   472  000E                     	;# 
   473  000F                     	;# 
   474  0010                     	;# 
   475  0011                     	;# 
   476  0012                     	;# 
   477  0013                     	;# 
   478  0014                     	;# 
   479  0015                     	;# 
   480  0015                     	;# 
   481  0016                     	;# 
   482  0017                     	;# 
   483  0018                     	;# 
   484  0019                     	;# 
   485  001A                     	;# 
   486  001B                     	;# 
   487  001B                     	;# 
   488  001C                     	;# 
   489  001D                     	;# 
   490  001E                     	;# 
   491  001F                     	;# 
   492  0081                     	;# 
   493  0085                     	;# 
   494  0086                     	;# 
   495  0087                     	;# 
   496  0089                     	;# 
   497  008C                     	;# 
   498  008D                     	;# 
   499  008E                     	;# 
   500  008F                     	;# 
   501  0090                     	;# 
   502  0091                     	;# 
   503  0092                     	;# 
   504  0093                     	;# 
   505  0093                     	;# 
   506  0093                     	;# 
   507  0094                     	;# 
   508  0095                     	;# 
   509  0096                     	;# 
   510  0097                     	;# 
   511  0098                     	;# 
   512  0099                     	;# 
   513  009A                     	;# 
   514  009B                     	;# 
   515  009C                     	;# 
   516  009D                     	;# 
   517  009E                     	;# 
   518  009F                     	;# 
   519  0105                     	;# 
   520  0107                     	;# 
   521  0108                     	;# 
   522  0109                     	;# 
   523  010C                     	;# 
   524  010C                     	;# 
   525  010D                     	;# 
   526  010E                     	;# 
   527  010F                     	;# 
   528  0185                     	;# 
   529  0187                     	;# 
   530  0188                     	;# 
   531  0189                     	;# 
   532  018C                     	;# 
   533  018D                     	;# 
   534  0000                     	;# 
   535  0001                     	;# 
   536  0002                     	;# 
   537  0003                     	;# 
   538  0004                     	;# 
   539  0005                     	;# 
   540  0006                     	;# 
   541  0007                     	;# 
   542  0008                     	;# 
   543  0009                     	;# 
   544  000A                     	;# 
   545  000B                     	;# 
   546  000C                     	;# 
   547  000D                     	;# 
   548  000E                     	;# 
   549  000E                     	;# 
   550  000F                     	;# 
   551  0010                     	;# 
   552  0011                     	;# 
   553  0012                     	;# 
   554  0013                     	;# 
   555  0014                     	;# 
   556  0015                     	;# 
   557  0015                     	;# 
   558  0016                     	;# 
   559  0017                     	;# 
   560  0018                     	;# 
   561  0019                     	;# 
   562  001A                     	;# 
   563  001B                     	;# 
   564  001B                     	;# 
   565  001C                     	;# 
   566  001D                     	;# 
   567  001E                     	;# 
   568  001F                     	;# 
   569  0081                     	;# 
   570  0085                     	;# 
   571  0086                     	;# 
   572  0087                     	;# 
   573  0088                     	;# 
   574  0089                     	;# 
   575  008C                     	;# 
   576  008D                     	;# 
   577  008E                     	;# 
   578  008F                     	;# 
   579  0090                     	;# 
   580  0091                     	;# 
   581  0092                     	;# 
   582  0093                     	;# 
   583  0093                     	;# 
   584  0093                     	;# 
   585  0094                     	;# 
   586  0095                     	;# 
   587  0096                     	;# 
   588  0097                     	;# 
   589  0098                     	;# 
   590  0099                     	;# 
   591  009A                     	;# 
   592  009B                     	;# 
   593  009C                     	;# 
   594  009D                     	;# 
   595  009E                     	;# 
   596  009F                     	;# 
   597  0105                     	;# 
   598  0107                     	;# 
   599  0108                     	;# 
   600  0109                     	;# 
   601  010C                     	;# 
   602  010C                     	;# 
   603  010D                     	;# 
   604  010E                     	;# 
   605  010F                     	;# 
   606  0185                     	;# 
   607  0187                     	;# 
   608  0188                     	;# 
   609  0189                     	;# 
   610  018C                     	;# 
   611  018D                     	;# 
   612  0000                     	;# 
   613  0001                     	;# 
   614  0002                     	;# 
   615  0003                     	;# 
   616  0004                     	;# 
   617  0005                     	;# 
   618  0006                     	;# 
   619  0007                     	;# 
   620  0009                     	;# 
   621  000A                     	;# 
   622  000B                     	;# 
   623  000C                     	;# 
   624  000D                     	;# 
   625  000E                     	;# 
   626  000E                     	;# 
   627  000F                     	;# 
   628  0010                     	;# 
   629  0011                     	;# 
   630  0012                     	;# 
   631  0013                     	;# 
   632  0014                     	;# 
   633  0015                     	;# 
   634  0015                     	;# 
   635  0016                     	;# 
   636  0017                     	;# 
   637  0018                     	;# 
   638  0019                     	;# 
   639  001A                     	;# 
   640  001B                     	;# 
   641  001B                     	;# 
   642  001C                     	;# 
   643  001D                     	;# 
   644  001E                     	;# 
   645  001F                     	;# 
   646  0081                     	;# 
   647  0085                     	;# 
   648  0086                     	;# 
   649  0087                     	;# 
   650  0089                     	;# 
   651  008C                     	;# 
   652  008D                     	;# 
   653  008E                     	;# 
   654  008F                     	;# 
   655  0090                     	;# 
   656  0091                     	;# 
   657  0092                     	;# 
   658  0093                     	;# 
   659  0093                     	;# 
   660  0093                     	;# 
   661  0094                     	;# 
   662  0095                     	;# 
   663  0096                     	;# 
   664  0097                     	;# 
   665  0098                     	;# 
   666  0099                     	;# 
   667  009A                     	;# 
   668  009B                     	;# 
   669  009C                     	;# 
   670  009D                     	;# 
   671  009E                     	;# 
   672  009F                     	;# 
   673  0105                     	;# 
   674  0107                     	;# 
   675  0108                     	;# 
   676  0109                     	;# 
   677  010C                     	;# 
   678  010C                     	;# 
   679  010D                     	;# 
   680  010E                     	;# 
   681  010F                     	;# 
   682  0185                     	;# 
   683  0187                     	;# 
   684  0188                     	;# 
   685  0189                     	;# 
   686  018C                     	;# 
   687  018D                     	;# 
   688  0000                     	;# 
   689  0001                     	;# 
   690  0002                     	;# 
   691  0003                     	;# 
   692  0004                     	;# 
   693  0005                     	;# 
   694  0006                     	;# 
   695  0007                     	;# 
   696  0008                     	;# 
   697  0009                     	;# 
   698  000A                     	;# 
   699  000B                     	;# 
   700  000C                     	;# 
   701  000D                     	;# 
   702  000E                     	;# 
   703  000E                     	;# 
   704  000F                     	;# 
   705  0010                     	;# 
   706  0011                     	;# 
   707  0012                     	;# 
   708  0013                     	;# 
   709  0014                     	;# 
   710  0015                     	;# 
   711  0015                     	;# 
   712  0016                     	;# 
   713  0017                     	;# 
   714  0018                     	;# 
   715  0019                     	;# 
   716  001A                     	;# 
   717  001B                     	;# 
   718  001B                     	;# 
   719  001C                     	;# 
   720  001D                     	;# 
   721  001E                     	;# 
   722  001F                     	;# 
   723  0081                     	;# 
   724  0085                     	;# 
   725  0086                     	;# 
   726  0087                     	;# 
   727  0088                     	;# 
   728  0089                     	;# 
   729  008C                     	;# 
   730  008D                     	;# 
   731  008E                     	;# 
   732  008F                     	;# 
   733  0090                     	;# 
   734  0091                     	;# 
   735  0092                     	;# 
   736  0093                     	;# 
   737  0093                     	;# 
   738  0093                     	;# 
   739  0094                     	;# 
   740  0095                     	;# 
   741  0096                     	;# 
   742  0097                     	;# 
   743  0098                     	;# 
   744  0099                     	;# 
   745  009A                     	;# 
   746  009B                     	;# 
   747  009C                     	;# 
   748  009D                     	;# 
   749  009E                     	;# 
   750  009F                     	;# 
   751  0105                     	;# 
   752  0107                     	;# 
   753  0108                     	;# 
   754  0109                     	;# 
   755  010C                     	;# 
   756  010C                     	;# 
   757  010D                     	;# 
   758  010E                     	;# 
   759  010F                     	;# 
   760  0185                     	;# 
   761  0187                     	;# 
   762  0188                     	;# 
   763  0189                     	;# 
   764  018C                     	;# 
   765  018D                     	;# 
   766  0000                     	;# 
   767  0001                     	;# 
   768  0002                     	;# 
   769  0003                     	;# 
   770  0004                     	;# 
   771  0005                     	;# 
   772  0006                     	;# 
   773  0007                     	;# 
   774  0009                     	;# 
   775  000A                     	;# 
   776  000B                     	;# 
   777  000C                     	;# 
   778  000D                     	;# 
   779  000E                     	;# 
   780  000E                     	;# 
   781  000F                     	;# 
   782  0010                     	;# 
   783  0011                     	;# 
   784  0012                     	;# 
   785  0013                     	;# 
   786  0014                     	;# 
   787  0015                     	;# 
   788  0015                     	;# 
   789  0016                     	;# 
   790  0017                     	;# 
   791  0018                     	;# 
   792  0019                     	;# 
   793  001A                     	;# 
   794  001B                     	;# 
   795  001B                     	;# 
   796  001C                     	;# 
   797  001D                     	;# 
   798  001E                     	;# 
   799  001F                     	;# 
   800  0081                     	;# 
   801  0085                     	;# 
   802  0086                     	;# 
   803  0087                     	;# 
   804  0089                     	;# 
   805  008C                     	;# 
   806  008D                     	;# 
   807  008E                     	;# 
   808  008F                     	;# 
   809  0090                     	;# 
   810  0091                     	;# 
   811  0092                     	;# 
   812  0093                     	;# 
   813  0093                     	;# 
   814  0093                     	;# 
   815  0094                     	;# 
   816  0095                     	;# 
   817  0096                     	;# 
   818  0097                     	;# 
   819  0098                     	;# 
   820  0099                     	;# 
   821  009A                     	;# 
   822  009B                     	;# 
   823  009C                     	;# 
   824  009D                     	;# 
   825  009E                     	;# 
   826  009F                     	;# 
   827  0105                     	;# 
   828  0107                     	;# 
   829  0108                     	;# 
   830  0109                     	;# 
   831  010C                     	;# 
   832  010C                     	;# 
   833  010D                     	;# 
   834  010E                     	;# 
   835  010F                     	;# 
   836  0185                     	;# 
   837  0187                     	;# 
   838  0188                     	;# 
   839  0189                     	;# 
   840  018C                     	;# 
   841  018D                     	;# 
   842                           
   843                           	psect	idataBANK0
   844  0544                     __pidataBANK0:	
   845                           
   846                           ;initializer for _FMRX_Nref
   847  0544  3400               	retlw	0
   848  0545  340A               	retlw	10
   849                           
   850                           ;initializer for _CWTX_Nref
   851  0546  34A0               	retlw	160
   852  0547  3400               	retlw	0
   853                           
   854                           ;initializer for _FMTX_Nref
   855  0548  3400               	retlw	0
   856  0549  340A               	retlw	10
   857                           
   858                           	psect	idataBANK1
   859  0463                     __pidataBANK1:	
   860                           
   861                           ;initializer for _FMRX_Nprg
   862  0463  3402               	retlw	2
   863  0464  3400               	retlw	0
   864  0465  3404               	retlw	4
   865  0466  3400               	retlw	0
   866  0467  3408               	retlw	8
   867  0468  3400               	retlw	0
   868  0469  3408               	retlw	8
   869  046A  3400               	retlw	0
   870  046B  3407               	retlw	7
   871  046C  3400               	retlw	0
   872                           
   873                           ;initializer for _CWTX_Nprg
   874  046D  3400               	retlw	0
   875  046E  3400               	retlw	0
   876  046F  3401               	retlw	1
   877  0470  3400               	retlw	0
   878  0471  3407               	retlw	7
   879  0472  3400               	retlw	0
   880  0473  3404               	retlw	4
   881  0474  3400               	retlw	0
   882  0475  3407               	retlw	7
   883  0476  3400               	retlw	0
   884                           
   885                           ;initializer for _FMTX_Nprg
   886  0477  3408               	retlw	8
   887  0478  3400               	retlw	0
   888  0479  3407               	retlw	7
   889  047A  3400               	retlw	0
   890  047B  3403               	retlw	3
   891  047C  3400               	retlw	0
   892  047D  3400               	retlw	0
   893  047E  3400               	retlw	0
   894  047F  3400               	retlw	0
   895  0480  3400               	retlw	0
   896  0013                     _SSPBUF	set	19
   897  0014                     _SSPCON	set	20
   898  0003                     _STATUS	set	3
   899  0009                     _PORTE	set	9
   900  0007                     _PORTC	set	7
   901  0006                     _PORTB	set	6
   902  0005                     _PORTA	set	5
   903  0019                     _TXREG	set	25
   904  001A                     _RCREG	set	26
   905  003A                     _RC2	set	58
   906  003D                     _RC5	set	61
   907  0033                     _RB3	set	51
   908  0038                     _RC0	set	56
   909  0031                     _RB1	set	49
   910  0064                     _TXIF	set	100
   911  00C1                     _OERR	set	193
   912  00C2                     _FERR	set	194
   913  00C6                     _RX9	set	198
   914  0065                     _RCIF	set	101
   915  00C5                     _SREN	set	197
   916  00C4                     _CREN	set	196
   917  00C7                     _SPEN	set	199
   918  005E                     _PEIE	set	94
   919  005F                     _GIE	set	95
   920  0094                     _SSPSTAT	set	148
   921  0093                     _SSPADD	set	147
   922  0091                     _SSPCON2	set	145
   923  0089                     _TRISE	set	137
   924  0087                     _TRISC	set	135
   925  0086                     _TRISB	set	134
   926  0085                     _TRISA	set	133
   927  0099                     _SPBRG	set	153
   928  048C                     _ACKEN	set	1164
   929  048D                     _ACKDT	set	1165
   930  048B                     _RCEN	set	1163
   931  048A                     _PEN	set	1162
   932  0489                     _RSEN	set	1161
   933  0488                     _SEN	set	1160
   934  04C5                     _TXEN	set	1221
   935  04C6                     _TX9	set	1222
   936  0465                     _RCIE	set	1125
   937  0464                     _TXIE	set	1124
   938  04C4                     _SYNC	set	1220
   939  04C2                     _BRGH	set	1218
   940  0189                     _ANSELH	set	393
   941  0188                     _ANSEL	set	392
   942                           
   943                           	psect	strings
   944  04D0                     __pstrings:	
   945  04D0                     stringtab:	
   946  04D0                     __stringtab:	
   947  04D0                     stringcode:	
   948                           ;	String table - string pointers are 1 byte each
   949                           
   950  04D0                     stringdir:	
   951  04D0  3004               	movlw	high stringdir
   952  04D1  008A               	movwf	10
   953  04D2  0804               	movf	4,w
   954  04D3  0A84               	incf	4,f
   955  04D4  0782               	addwf	2,f
   956  04D5                     __stringbase:	
   957  04D5  3400               	retlw	0
   958  04D6                     __end_of__stringtab:	
   959  04D6                     STR_1:	
   960  04D6  344A               	retlw	74	;'J'
   961  04D7  3451               	retlw	81	;'Q'
   962  04D8  3431               	retlw	49	;'1'
   963  04D9  345A               	retlw	90	;'Z'
   964  04DA  3448               	retlw	72	;'H'
   965  04DB  3458               	retlw	88	;'X'
   966  04DC  3400               	retlw	0
   967  04DD                     STR_2:	
   968  04DD  344A               	retlw	74	;'J'
   969  04DE  3451               	retlw	81	;'Q'
   970  04DF  3431               	retlw	49	;'1'
   971  04E0  3459               	retlw	89	;'Y'
   972  04E1  3443               	retlw	67	;'C'
   973  04E2  345A               	retlw	90	;'Z'
   974  04E3  3400               	retlw	0
   975                           
   976                           ; #config settings
   977  0000                     
   978                           	psect	cinit
   979  0015                     start_initialization:	
   980  0015                     __initialization:	
   981                           
   982                           ; Initialize objects allocated to BANK1
   983  0015  1383               	bcf	3,7	;select IRP bank0
   984  0016  30BE               	movlw	low (__pdataBANK1+30)
   985  0017  00FD               	movwf	btemp+-1
   986  0018  3004               	movlw	high __pidataBANK1
   987  0019  00FE               	movwf	btemp
   988  001A  3063               	movlw	low __pidataBANK1
   989  001B  00FF               	movwf	btemp+1
   990  001C  30A0               	movlw	low __pdataBANK1
   991  001D  0084               	movwf	4
   992  001E  120A  118A  24FA  120A  118A  	fcall	init_ram0
   993                           
   994                           ; Initialize objects allocated to BANK0
   995  0023  3069               	movlw	low (__pdataBANK0+6)
   996  0024  00FD               	movwf	btemp+-1
   997  0025  3005               	movlw	high __pidataBANK0
   998  0026  00FE               	movwf	btemp
   999  0027  3044               	movlw	low __pidataBANK0
  1000  0028  00FF               	movwf	btemp+1
  1001  0029  3063               	movlw	low __pdataBANK0
  1002  002A  0084               	movwf	4
  1003  002B  120A  118A  24FA  120A  118A  	fcall	init_ram0
  1004                           
  1005                           ; Clear objects allocated to BANK3
  1006  0030  1783               	bsf	3,7	;select IRP bank2
  1007  0031  3090               	movlw	low __pbssBANK3
  1008  0032  0084               	movwf	4
  1009  0033  30C2               	movlw	low (__pbssBANK3+50)
  1010  0034  120A  118A  251F  120A  118A  	fcall	clear_ram0
  1011                           
  1012                           ; Clear objects allocated to BANK1
  1013  0039  1383               	bcf	3,7	;select IRP bank0
  1014  003A  30D7               	movlw	low __pbssBANK1
  1015  003B  0084               	movwf	4
  1016  003C  30E7               	movlw	low (__pbssBANK1+16)
  1017  003D  120A  118A  251F  120A  118A  	fcall	clear_ram0
  1018                           
  1019                           ; Clear objects allocated to BANK0
  1020  0042  3059               	movlw	low __pbssBANK0
  1021  0043  0084               	movwf	4
  1022  0044  3063               	movlw	low (__pbssBANK0+10)
  1023  0045  120A  118A  251F   	fcall	clear_ram0
  1024  0048                     end_of_initialization:	
  1025                           ;End of C runtime variable initialization code
  1026                           
  1027  0048                     __end_of__initialization:	
  1028  0048  0183               	clrf	3
  1029  0049  120A  118A  2AEA   	ljmp	_main	;jump to C main() function
  1030                           
  1031                           	psect	bssBANK0
  1032  0059                     __pbssBANK0:	
  1033  0059                     _ebitstatus:	
  1034  0059                     	ds	2
  1035  005B                     _estuff:	
  1036  005B                     	ds	2
  1037  005D                     _efcsflag:	
  1038  005D                     	ds	2
  1039  005F                     _eflag:	
  1040  005F                     	ds	2
  1041  0061                     _efcshi:	
  1042  0061                     	ds	1
  1043  0062                     _efcslo:	
  1044  0062                     	ds	1
  1045                           
  1046                           	psect	dataBANK0
  1047  0063                     __pdataBANK0:	
  1048  0063                     _FMRX_Nref:	
  1049  0063                     	ds	2
  1050  0065                     _CWTX_Nref:	
  1051  0065                     	ds	2
  1052  0067                     _FMTX_Nref:	
  1053  0067                     	ds	2
  1054                           
  1055                           	psect	bssBANK1
  1056  00D7                     __pbssBANK1:	
  1057  00D7                     _EEPROMData:	
  1058  00D7                     	ds	16
  1059                           
  1060                           	psect	dataBANK1
  1061  00A0                     __pdataBANK1:	
  1062  00A0                     _FMRX_Nprg:	
  1063  00A0                     	ds	10
  1064  00AA                     _CWTX_Nprg:	
  1065  00AA                     	ds	10
  1066  00B4                     _FMTX_Nprg:	
  1067  00B4                     	ds	10
  1068                           
  1069                           	psect	bssBANK3
  1070  0190                     __pbssBANK3:	
  1071  0190                     _ePacket:	
  1072  0190                     	ds	50
  1073                           
  1074                           	psect	inittext
  1075  04F6                     init_fetch0:	
  1076                           ;	Called with low address in FSR and high address in W
  1077                           
  1078  04F6  087E               	movf	126,w
  1079  04F7  008A               	movwf	10
  1080  04F8  087F               	movf	127,w
  1081  04F9  0082               	movwf	2
  1082  04FA                     init_ram0:	
  1083                           ;Called with:
  1084                           ;	high address of idata address in btemp 
  1085                           ;	low address of idata address in btemp+1 
  1086                           ;	low address of data in FSR
  1087                           ;	high address + 1 of data in btemp-1
  1088                           
  1089  04FA  24F6  120A  118A   	fcall	init_fetch0
  1090  04FD  0080               	movwf	0
  1091  04FE  0A84               	incf	4,f
  1092  04FF  0804               	movf	4,w
  1093  0500  067D               	xorwf	125,w
  1094  0501  1903               	btfsc	3,2
  1095  0502  3400               	retlw	0
  1096  0503  0AFF               	incf	127,f
  1097  0504  1903               	btfsc	3,2
  1098  0505  0AFE               	incf	126,f
  1099  0506  2CFA               	goto	init_ram0
  1100                           
  1101                           	psect	clrtext
  1102  051F                     clear_ram0:	
  1103                           ;	Called with FSR containing the base address, and
  1104                           ;	W with the last address+1
  1105                           
  1106  051F  0064               	clrwdt	;clear the watchdog before getting into this loop
  1107  0520                     clrloop0:	
  1108  0520  0180               	clrf	0	;clear RAM location pointed to by FSR
  1109  0521  0A84               	incf	4,f	;increment pointer
  1110  0522  0604               	xorwf	4,w	;XOR with final address
  1111  0523  1903               	btfsc	3,2	;have we reached the end yet?
  1112  0524  3400               	retlw	0	;all done for this memory range, return
  1113  0525  0604               	xorwf	4,w	;XOR again to restore value
  1114  0526  2D20               	goto	clrloop0	;do the next byte
  1115                           
  1116                           	psect	cstackBANK1
  1117  00BE                     __pcstackBANK1:	
  1118  00BE                     ??_Init_SERIAL:	
  1119  00BE                     ??_Init_MPU:	
  1120                           ; 1 bytes @ 0x0
  1121                           
  1122  00BE                     ?___lldiv:	
  1123                           ; 1 bytes @ 0x0
  1124                           
  1125  00BE                     ___lldiv@divisor:	
  1126                           ; 4 bytes @ 0x0
  1127                           
  1128                           
  1129                           ; 4 bytes @ 0x0
  1130  00BE                     	ds	4
  1131  00C2                     ___lldiv@dividend:	
  1132                           
  1133                           ; 4 bytes @ 0x4
  1134  00C2                     	ds	4
  1135  00C6                     ??___lldiv:	
  1136                           
  1137                           ; 1 bytes @ 0x8
  1138  00C6                     	ds	1
  1139  00C7                     ___lldiv@quotient:	
  1140                           
  1141                           ; 4 bytes @ 0x9
  1142  00C7                     	ds	4
  1143  00CB                     ___lldiv@counter:	
  1144                           
  1145                           ; 1 bytes @ 0xD
  1146  00CB                     	ds	1
  1147  00CC                     ?_Init_I2C_M:	
  1148  00CC                     Init_I2C_M@c:	
  1149                           ; 1 bytes @ 0xE
  1150                           
  1151                           
  1152                           ; 4 bytes @ 0xE
  1153  00CC                     	ds	4
  1154  00D0                     ??_Init_I2C_M:	
  1155                           
  1156                           ; 1 bytes @ 0x12
  1157  00D0                     	ds	4
  1158  00D4                     ??_main:	
  1159                           
  1160                           ; 1 bytes @ 0x16
  1161  00D4                     	ds	3
  1162                           
  1163                           	psect	cstackCOMMON
  1164  0070                     __pcstackCOMMON:	
  1165  0070                     ?_SendPacket:	
  1166  0070                     ?_SendByte:	
  1167                           ; 1 bytes @ 0x0
  1168                           
  1169  0070                     ?_fcsbit:	
  1170                           ; 1 bytes @ 0x0
  1171                           
  1172  0070                     ??_fcsbit:	
  1173                           ; 1 bytes @ 0x0
  1174                           
  1175  0070                     ?_flipout:	
  1176                           ; 1 bytes @ 0x0
  1177                           
  1178  0070                     ??_flipout:	
  1179                           ; 1 bytes @ 0x0
  1180                           
  1181  0070                     ?_Init_SERIAL:	
  1182                           ; 1 bytes @ 0x0
  1183                           
  1184  0070                     ?_getch:	
  1185                           ; 1 bytes @ 0x0
  1186                           
  1187  0070                     ??_getch:	
  1188                           ; 1 bytes @ 0x0
  1189                           
  1190  0070                     ?_InterReceiver:	
  1191                           ; 1 bytes @ 0x0
  1192                           
  1193  0070                     ?_Init_MPU:	
  1194                           ; 1 bytes @ 0x0
  1195                           
  1196  0070                     ?_main:	
  1197                           ; 1 bytes @ 0x0
  1198                           
  1199  0070                     ?_I2C_Master_Wait:	
  1200                           ; 1 bytes @ 0x0
  1201                           
  1202  0070                     ??_I2C_Master_Wait:	
  1203                           ; 1 bytes @ 0x0
  1204                           
  1205  0070                     ?_I2C_Master_Start:	
  1206                           ; 1 bytes @ 0x0
  1207                           
  1208  0070                     ??_I2C_Master_Start:	
  1209                           ; 1 bytes @ 0x0
  1210                           
  1211  0070                     ?_I2C_Master_RepeatedStart:	
  1212                           ; 1 bytes @ 0x0
  1213                           
  1214  0070                     ??_I2C_Master_RepeatedStart:	
  1215                           ; 1 bytes @ 0x0
  1216                           
  1217  0070                     ?_I2C_Master_Stop:	
  1218                           ; 1 bytes @ 0x0
  1219                           
  1220  0070                     ??_I2C_Master_Stop:	
  1221                           ; 1 bytes @ 0x0
  1222                           
  1223  0070                     ?_I2C_Master_Write:	
  1224                           ; 1 bytes @ 0x0
  1225                           
  1226  0070                     ?_I2C_Master_Read:	
  1227                           ; 1 bytes @ 0x0
  1228                           
  1229  0070                     ??_I2C_Master_Read:	
  1230                           ; 1 bytes @ 0x0
  1231                           
  1232  0070                     ?_Packetmaker:	
  1233                           ; 1 bytes @ 0x0
  1234                           
  1235  0070                     I2C_Master_Write@d:	
  1236                           ; 2 bytes @ 0x0
  1237                           
  1238                           
  1239                           ; 2 bytes @ 0x0
  1240  0070                     	ds	1
  1241  0071                     I2C_Master_Read@a:	
  1242                           
  1243                           ; 1 bytes @ 0x1
  1244  0071                     	ds	1
  1245  0072                     ??_Packetmaker:	
  1246  0072                     ??_I2C_Master_Write:	
  1247                           ; 1 bytes @ 0x2
  1248                           
  1249  0072                     fcsbit@tbyte:	
  1250                           ; 1 bytes @ 0x2
  1251                           
  1252  0072                     I2C_Master_Read@temp:	
  1253                           ; 1 bytes @ 0x2
  1254                           
  1255                           
  1256                           ; 1 bytes @ 0x2
  1257  0072                     	ds	1
  1258  0073                     ?_EEPROM_Read:	
  1259  0073                     ??_SendByte:	
  1260                           ; 1 bytes @ 0x3
  1261                           
  1262  0073                     EEPROM_Read@high_address:	
  1263                           ; 1 bytes @ 0x3
  1264                           
  1265                           
  1266                           ; 1 bytes @ 0x3
  1267  0073                     	ds	1
  1268  0074                     Packetmaker@eDataField:	
  1269  0074                     EEPROM_Read@low_address:	
  1270                           ; 1 bytes @ 0x4
  1271                           
  1272                           
  1273                           ; 1 bytes @ 0x4
  1274  0074                     	ds	1
  1275  0075                     EEPROM_Read@ReadData:	
  1276  0075                     Packetmaker@i_134:	
  1277                           ; 1 bytes @ 0x5
  1278                           
  1279  0075                     SendByte@i:	
  1280                           ; 2 bytes @ 0x5
  1281                           
  1282                           
  1283                           ; 2 bytes @ 0x5
  1284  0075                     	ds	1
  1285  0076                     EEPROM_Read@EEPROMDataLength:	
  1286                           
  1287                           ; 1 bytes @ 0x6
  1288  0076                     	ds	1
  1289  0077                     ??_EEPROM_Read:	
  1290  0077                     SendByte@byte:	
  1291                           ; 1 bytes @ 0x7
  1292                           
  1293  0077                     Packetmaker@Datanum:	
  1294                           ; 1 bytes @ 0x7
  1295                           
  1296                           
  1297                           ; 2 bytes @ 0x7
  1298  0077                     	ds	1
  1299  0078                     SendByte@bt:	
  1300                           
  1301                           ; 1 bytes @ 0x8
  1302  0078                     	ds	1
  1303  0079                     Packetmaker@i:	
  1304                           
  1305                           ; 2 bytes @ 0x9
  1306  0079                     	ds	2
  1307  007B                     Packetmaker@i_131:	
  1308                           
  1309                           ; 2 bytes @ 0xB
  1310  007B                     	ds	2
  1311                           
  1312                           	psect	cstackBANK0
  1313  0020                     __pcstackBANK0:	
  1314  0020                     ??_SendPacket:	
  1315  0020                     EEPROM_Read@EEPROM_address:	
  1316                           ; 1 bytes @ 0x0
  1317                           
  1318                           
  1319                           ; 1 bytes @ 0x0
  1320  0020                     	ds	1
  1321  0021                     EEPROM_Read@ReadAddress:	
  1322                           
  1323                           ; 1 bytes @ 0x1
  1324  0021                     	ds	1
  1325  0022                     EEPROM_Read@i:	
  1326                           
  1327                           ; 2 bytes @ 0x2
  1328  0022                     	ds	1
  1329  0023                     SendPacket@Packetnum:	
  1330                           
  1331                           ; 2 bytes @ 0x3
  1332  0023                     	ds	1
  1333  0024                     EEPROM_Read@Address:	
  1334                           
  1335                           ; 1 bytes @ 0x4
  1336  0024                     	ds	1
  1337  0025                     SendPacket@eDataField:	
  1338                           
  1339                           ; 1 bytes @ 0x5
  1340  0025                     	ds	1
  1341  0026                     SendPacket@i:	
  1342                           
  1343                           ; 2 bytes @ 0x6
  1344  0026                     	ds	2
  1345  0028                     SendPacket@i_140:	
  1346                           
  1347                           ; 2 bytes @ 0x8
  1348  0028                     	ds	2
  1349  002A                     SendPacket@i_141:	
  1350                           
  1351                           ; 2 bytes @ 0xA
  1352  002A                     	ds	2
  1353  002C                     ??_InterReceiver:	
  1354                           
  1355                           ; 1 bytes @ 0xC
  1356  002C                     	ds	8
  1357  0034                     InterReceiver@RXDATA:	
  1358                           
  1359                           ; 32 bytes @ 0x14
  1360  0034                     	ds	32
  1361  0054                     InterReceiver@EEPROMCmdDataLength:	
  1362                           
  1363                           ; 2 bytes @ 0x34
  1364  0054                     	ds	2
  1365  0056                     InterReceiver@i:	
  1366                           
  1367                           ; 2 bytes @ 0x36
  1368  0056                     	ds	2
  1369  0058                     InterReceiver@EEPROMCmdData:	
  1370                           
  1371                           ; 1 bytes @ 0x38
  1372  0058                     	ds	1
  1373                           
  1374                           	psect	maintext
  1375  02EA                     __pmaintext:	
  1376 ;;
  1377 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1378 ;;
  1379 ;; *************** function _main *****************
  1380 ;; Defined at:
  1381 ;;		line 35 in file "main.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;		None
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;  EEPROMData     32    0        unsigned char [32]
  1386 ;;  EEPROMDataLe    2    0        unsigned int 
  1387 ;;  EEPROMData      2    0        PTR unsigned char 
  1388 ;;  dData           0    0        unsigned char [0]
  1389 ;; Return value:  Size  Location     Type
  1390 ;;                  1    wreg      void 
  1391 ;; Registers used:
  1392 ;;		wreg, status,2, status,0, pclath, cstack
  1393 ;; Tracked objects:
  1394 ;;		On entry : B00/0
  1395 ;;		On exit  : 0/0
  1396 ;;		Unchanged: 0/0
  1397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1398 ;;      Params:         0       0       0       0       0
  1399 ;;      Locals:         0       0       0       0       0
  1400 ;;      Temps:          0       0       3       0       0
  1401 ;;      Totals:         0       0       3       0       0
  1402 ;;Total ram usage:        3 bytes
  1403 ;; Hardware stack levels required when called:    6
  1404 ;; This function calls:
  1405 ;;		_Init_I2C_M
  1406 ;;		_Init_MPU
  1407 ;;		_Init_SERIAL
  1408 ;; This function is called by:
  1409 ;;		Startup code after reset
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           
  1413                           
  1414                           ;psect for function _main
  1415  02EA                     _main:	
  1416                           
  1417                           ;main.c: 36: _delay((unsigned long)((1000)*(10000000/4000.0)));
  1418                           
  1419                           ;incstack = 0
  1420                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1421  02EA  300D               	movlw	13
  1422  02EB  1683               	bsf	3,5	;RP0=1, select bank1
  1423  02EC  1303               	bcf	3,6	;RP1=0, select bank1
  1424  02ED  00D6               	movwf	(??_main^(0+128)+2)
  1425  02EE  30AF               	movlw	175
  1426  02EF  00D5               	movwf	(??_main^(0+128)+1)
  1427  02F0  30B5               	movlw	181
  1428  02F1  00D4               	movwf	??_main^(0+128)
  1429  02F2                     u957:	
  1430  02F2  0BD4               	decfsz	??_main^(0+128),f
  1431  02F3  2AF2               	goto	u957
  1432  02F4  0BD5               	decfsz	(??_main^(0+128)+1),f
  1433  02F5  2AF2               	goto	u957
  1434  02F6  0BD6               	decfsz	(??_main^(0+128)+2),f
  1435  02F7  2AF2               	goto	u957
  1436  02F8  2AF9               	nop2
  1437                           
  1438                           ;main.c: 41: Init_SERIAL();
  1439  02F9  120A  118A  2481  120A  118A  	fcall	_Init_SERIAL
  1440                           
  1441                           ;main.c: 42: Init_MPU();
  1442  02FE  120A  118A  249C  120A  118A  	fcall	_Init_MPU
  1443                           
  1444                           ;main.c: 45: Init_I2C_M(400000);
  1445  0303  3000               	movlw	0
  1446  0304  1683               	bsf	3,5	;RP0=1, select bank1
  1447  0305  1303               	bcf	3,6	;RP1=0, select bank1
  1448  0306  00CF               	movwf	(Init_I2C_M@c+3)^(0+128)
  1449  0307  3006               	movlw	6
  1450  0308  00CE               	movwf	(Init_I2C_M@c+2)^(0+128)
  1451  0309  301A               	movlw	26
  1452  030A  00CD               	movwf	(Init_I2C_M@c+1)^(0+128)
  1453  030B  3080               	movlw	128
  1454  030C  00CC               	movwf	Init_I2C_M@c^(0+128)
  1455  030D  120A  118A  240B  120A  118A  	fcall	_Init_I2C_M
  1456  0312  2B3F               	goto	l1555
  1457  0313                     l1559:	
  1458                           
  1459                           ;main.c: 107: RC0 = 1;
  1460  0313  1407               	bsf	7,0	;volatile
  1461                           
  1462                           ;main.c: 108: RB3 = 0;
  1463  0314  1186               	bcf	6,3	;volatile
  1464                           
  1465                           ;main.c: 109: UBYTE EEPROMData[32];
  1466                           ;main.c: 110: UINT EEPROMDataLength;
  1467                           ;main.c: 112: _delay((unsigned long)((200)*(10000000/4000.0)));
  1468  0315  3003               	movlw	3
  1469  0316  1683               	bsf	3,5	;RP0=1, select bank1
  1470  0317  1303               	bcf	3,6	;RP1=0, select bank1
  1471  0318  00D6               	movwf	(??_main^(0+128)+2)
  1472  0319  308A               	movlw	138
  1473  031A  00D5               	movwf	(??_main^(0+128)+1)
  1474  031B  3055               	movlw	85
  1475  031C  00D4               	movwf	??_main^(0+128)
  1476  031D                     u977:	
  1477  031D  0BD4               	decfsz	??_main^(0+128),f
  1478  031E  2B1D               	goto	u977
  1479  031F  0BD5               	decfsz	(??_main^(0+128)+1),f
  1480  0320  2B1D               	goto	u977
  1481  0321  0BD6               	decfsz	(??_main^(0+128)+2),f
  1482  0322  2B1D               	goto	u977
  1483                           
  1484                           ;main.c: 114: _delay((unsigned long)((200)*(10000000/4000.0)));
  1485  0323  3003               	movlw	3
  1486  0324  1683               	bsf	3,5	;RP0=1, select bank1
  1487  0325  1303               	bcf	3,6	;RP1=0, select bank1
  1488  0326  00D6               	movwf	(??_main^(0+128)+2)
  1489  0327  308A               	movlw	138
  1490  0328  00D5               	movwf	(??_main^(0+128)+1)
  1491  0329  3055               	movlw	85
  1492  032A  00D4               	movwf	??_main^(0+128)
  1493  032B                     u987:	
  1494  032B  0BD4               	decfsz	??_main^(0+128),f
  1495  032C  2B2B               	goto	u987
  1496  032D  0BD5               	decfsz	(??_main^(0+128)+1),f
  1497  032E  2B2B               	goto	u987
  1498  032F  0BD6               	decfsz	(??_main^(0+128)+2),f
  1499  0330  2B2B               	goto	u987
  1500                           
  1501                           ;main.c: 130: _delay((unsigned long)((200)*(10000000/4000.0)));
  1502  0331  3003               	movlw	3
  1503  0332  1683               	bsf	3,5	;RP0=1, select bank1
  1504  0333  1303               	bcf	3,6	;RP1=0, select bank1
  1505  0334  00D6               	movwf	(??_main^(0+128)+2)
  1506  0335  308A               	movlw	138
  1507  0336  00D5               	movwf	(??_main^(0+128)+1)
  1508  0337  3055               	movlw	85
  1509  0338  00D4               	movwf	??_main^(0+128)
  1510  0339                     u997:	
  1511  0339  0BD4               	decfsz	??_main^(0+128),f
  1512  033A  2B39               	goto	u997
  1513  033B  0BD5               	decfsz	(??_main^(0+128)+1),f
  1514  033C  2B39               	goto	u997
  1515  033D  0BD6               	decfsz	(??_main^(0+128)+2),f
  1516  033E  2B39               	goto	u997
  1517  033F                     l1555:	
  1518                           ;main.c: 57: while(1){
  1519                           
  1520                           ;main.c: 155: }else{
  1521                           
  1522                           
  1523                           ;main.c: 73: UBYTE dData[];
  1524                           ;main.c: 83: _delay((unsigned long)((200)*(10000000/4000.0)));
  1525  033F  3003               	movlw	3
  1526  0340  1683               	bsf	3,5	;RP0=1, select bank1
  1527  0341  1303               	bcf	3,6	;RP1=0, select bank1
  1528  0342  00D6               	movwf	(??_main^(0+128)+2)
  1529  0343  308A               	movlw	138
  1530  0344  00D5               	movwf	(??_main^(0+128)+1)
  1531  0345  3055               	movlw	85
  1532  0346  00D4               	movwf	??_main^(0+128)
  1533  0347                     u967:	
  1534  0347  0BD4               	decfsz	??_main^(0+128),f
  1535  0348  2B47               	goto	u967
  1536  0349  0BD5               	decfsz	(??_main^(0+128)+1),f
  1537  034A  2B47               	goto	u967
  1538  034B  0BD6               	decfsz	(??_main^(0+128)+2),f
  1539  034C  2B47               	goto	u967
  1540                           
  1541                           ;main.c: 105: UBYTE *EEPROMData;
  1542                           ;main.c: 106: if (RC2==1){
  1543  034D  1283               	bcf	3,5	;RP0=0, select bank0
  1544  034E  1303               	bcf	3,6	;RP1=0, select bank0
  1545  034F  1907               	btfsc	7,2	;volatile
  1546  0350  2B13               	goto	l1559
  1547                           
  1548                           ;main.c: 157: RC0 = 0;
  1549  0351  1007               	bcf	7,0	;volatile
  1550  0352  2B3F               	goto	l1555
  1551  0353                     __end_of_main:	
  1552                           
  1553                           	psect	text1
  1554  0481                     __ptext1:	
  1555 ;; *************** function _Init_SERIAL *****************
  1556 ;; Defined at:
  1557 ;;		line 8 in file "UART.c"
  1558 ;; Parameters:    Size  Location     Type
  1559 ;;		None
  1560 ;; Auto vars:     Size  Location     Type
  1561 ;;		None
  1562 ;; Return value:  Size  Location     Type
  1563 ;;                  1    wreg      void 
  1564 ;; Registers used:
  1565 ;;		wreg
  1566 ;; Tracked objects:
  1567 ;;		On entry : 0/0
  1568 ;;		On exit  : 0/0
  1569 ;;		Unchanged: 0/0
  1570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1571 ;;      Params:         0       0       0       0       0
  1572 ;;      Locals:         0       0       0       0       0
  1573 ;;      Temps:          0       0       0       0       0
  1574 ;;      Totals:         0       0       0       0       0
  1575 ;;Total ram usage:        0 bytes
  1576 ;; Hardware stack levels used:    1
  1577 ;; Hardware stack levels required when called:    4
  1578 ;; This function calls:
  1579 ;;		Nothing
  1580 ;; This function is called by:
  1581 ;;		_main
  1582 ;; This function uses a non-reentrant model
  1583 ;;
  1584                           
  1585                           
  1586                           ;psect for function _Init_SERIAL
  1587  0481                     _Init_SERIAL:	
  1588                           
  1589                           ;UART.c: 9: SPBRG = 10;
  1590                           
  1591                           ;incstack = 0
  1592                           ; Regs used in _Init_SERIAL: [wreg]
  1593  0481  300A               	movlw	10
  1594  0482  1683               	bsf	3,5	;RP0=1, select bank1
  1595  0483  1303               	bcf	3,6	;RP1=0, select bank1
  1596  0484  0099               	movwf	25	;volatile
  1597                           
  1598                           ;UART.c: 10: GIE = 1;
  1599  0485  178B               	bsf	11,7	;volatile
  1600                           
  1601                           ;UART.c: 11: PEIE = 1;
  1602  0486  170B               	bsf	11,6	;volatile
  1603                           
  1604                           ;UART.c: 12: BRGH = 0;
  1605  0487  1118               	bcf	24,2	;volatile
  1606                           
  1607                           ;UART.c: 13: SYNC = 0;
  1608  0488  1218               	bcf	24,4	;volatile
  1609                           
  1610                           ;UART.c: 14: SPEN = 1;
  1611  0489  1283               	bcf	3,5	;RP0=0, select bank0
  1612  048A  1303               	bcf	3,6	;RP1=0, select bank0
  1613  048B  1798               	bsf	24,7	;volatile
  1614                           
  1615                           ;UART.c: 15: CREN = 1;
  1616  048C  1618               	bsf	24,4	;volatile
  1617                           
  1618                           ;UART.c: 16: SREN = 0;
  1619  048D  1298               	bcf	24,5	;volatile
  1620                           
  1621                           ;UART.c: 17: RCIF = 0;
  1622  048E  128C               	bcf	12,5	;volatile
  1623                           
  1624                           ;UART.c: 18: TXIE = 0;
  1625  048F  1683               	bsf	3,5	;RP0=1, select bank1
  1626  0490  1303               	bcf	3,6	;RP1=0, select bank1
  1627  0491  120C               	bcf	12,4	;volatile
  1628                           
  1629                           ;UART.c: 19: RCIE = 1;
  1630  0492  168C               	bsf	12,5	;volatile
  1631                           
  1632                           ;UART.c: 20: TX9 = 0;
  1633  0493  1318               	bcf	24,6	;volatile
  1634                           
  1635                           ;UART.c: 21: RX9 = 0;
  1636  0494  1283               	bcf	3,5	;RP0=0, select bank0
  1637  0495  1303               	bcf	3,6	;RP1=0, select bank0
  1638  0496  1318               	bcf	24,6	;volatile
  1639                           
  1640                           ;UART.c: 22: TXEN = 0;
  1641  0497  1683               	bsf	3,5	;RP0=1, select bank1
  1642  0498  1303               	bcf	3,6	;RP1=0, select bank1
  1643  0499  1298               	bcf	24,5	;volatile
  1644                           
  1645                           ;UART.c: 23: TXEN = 1;
  1646  049A  1698               	bsf	24,5	;volatile
  1647  049B  0008               	return
  1648  049C                     __end_of_Init_SERIAL:	
  1649                           
  1650                           	psect	text2
  1651  049C                     __ptext2:	
  1652 ;; *************** function _Init_MPU *****************
  1653 ;; Defined at:
  1654 ;;		line 8 in file "Init_MPU.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;		None
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;		None
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  1    wreg      void 
  1661 ;; Registers used:
  1662 ;;		wreg, status,2
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1668 ;;      Params:         0       0       0       0       0
  1669 ;;      Locals:         0       0       0       0       0
  1670 ;;      Temps:          0       0       0       0       0
  1671 ;;      Totals:         0       0       0       0       0
  1672 ;;Total ram usage:        0 bytes
  1673 ;; Hardware stack levels used:    1
  1674 ;; Hardware stack levels required when called:    4
  1675 ;; This function calls:
  1676 ;;		Nothing
  1677 ;; This function is called by:
  1678 ;;		_main
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           
  1683                           ;psect for function _Init_MPU
  1684  049C                     _Init_MPU:	
  1685                           
  1686                           ;Init_MPU.c: 11: PORTA = 0x00;
  1687                           
  1688                           ;incstack = 0
  1689                           ; Regs used in _Init_MPU: [wreg+status,2]
  1690  049C  1283               	bcf	3,5	;RP0=0, select bank0
  1691  049D  1303               	bcf	3,6	;RP1=0, select bank0
  1692  049E  0185               	clrf	5	;volatile
  1693                           
  1694                           ;Init_MPU.c: 12: PORTB = 0x00;
  1695  049F  0186               	clrf	6	;volatile
  1696                           
  1697                           ;Init_MPU.c: 13: PORTC = 0x00;
  1698  04A0  0187               	clrf	7	;volatile
  1699                           
  1700                           ;Init_MPU.c: 15: PORTE = 0x00;
  1701  04A1  0189               	clrf	9	;volatile
  1702                           
  1703                           ;Init_MPU.c: 18: ANSEL = 0x00;
  1704  04A2  1683               	bsf	3,5	;RP0=1, select bank3
  1705  04A3  1703               	bsf	3,6	;RP1=1, select bank3
  1706  04A4  0188               	clrf	8	;volatile
  1707                           
  1708                           ;Init_MPU.c: 19: ANSELH = 0x00;
  1709  04A5  0189               	clrf	9	;volatile
  1710                           
  1711                           ;Init_MPU.c: 23: TRISA = 0b10000000;
  1712  04A6  3080               	movlw	128
  1713  04A7  1683               	bsf	3,5	;RP0=1, select bank1
  1714  04A8  1303               	bcf	3,6	;RP1=0, select bank1
  1715  04A9  0085               	movwf	5	;volatile
  1716                           
  1717                           ;Init_MPU.c: 24: TRISB = 0b00010000;
  1718  04AA  3010               	movlw	16
  1719  04AB  0086               	movwf	6	;volatile
  1720                           
  1721                           ;Init_MPU.c: 25: TRISC = 0b01011100;
  1722  04AC  305C               	movlw	92
  1723  04AD  0087               	movwf	7	;volatile
  1724                           
  1725                           ;Init_MPU.c: 27: TRISE = 0b00000000;
  1726  04AE  0189               	clrf	9	;volatile
  1727                           
  1728                           ;Init_MPU.c: 30: PORTA = 0x00;
  1729  04AF  1283               	bcf	3,5	;RP0=0, select bank0
  1730  04B0  1303               	bcf	3,6	;RP1=0, select bank0
  1731  04B1  0185               	clrf	5	;volatile
  1732                           
  1733                           ;Init_MPU.c: 31: PORTB = 0x00;
  1734  04B2  0186               	clrf	6	;volatile
  1735                           
  1736                           ;Init_MPU.c: 32: PORTC = 0x00;
  1737  04B3  0187               	clrf	7	;volatile
  1738                           
  1739                           ;Init_MPU.c: 34: PORTE = 0x00;
  1740  04B4  0189               	clrf	9	;volatile
  1741  04B5  0008               	return
  1742  04B6                     __end_of_Init_MPU:	
  1743                           
  1744                           	psect	text3
  1745  040B                     __ptext3:	
  1746 ;; *************** function _Init_I2C_M *****************
  1747 ;; Defined at:
  1748 ;;		line 11 in file "I2C.c"
  1749 ;; Parameters:    Size  Location     Type
  1750 ;;  c               4   14[BANK1 ] const unsigned long 
  1751 ;; Auto vars:     Size  Location     Type
  1752 ;;		None
  1753 ;; Return value:  Size  Location     Type
  1754 ;;                  1    wreg      void 
  1755 ;; Registers used:
  1756 ;;		wreg, status,2, status,0, pclath, cstack
  1757 ;; Tracked objects:
  1758 ;;		On entry : 0/0
  1759 ;;		On exit  : 0/0
  1760 ;;		Unchanged: 0/0
  1761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1762 ;;      Params:         0       0       4       0       0
  1763 ;;      Locals:         0       0       0       0       0
  1764 ;;      Temps:          0       0       4       0       0
  1765 ;;      Totals:         0       0       8       0       0
  1766 ;;Total ram usage:        8 bytes
  1767 ;; Hardware stack levels used:    1
  1768 ;; Hardware stack levels required when called:    5
  1769 ;; This function calls:
  1770 ;;		___lldiv
  1771 ;; This function is called by:
  1772 ;;		_main
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776                           
  1777                           ;psect for function _Init_I2C_M
  1778  040B                     _Init_I2C_M:	
  1779                           
  1780                           ;I2C.c: 12: SSPCON = 0b00101000;
  1781                           
  1782                           ;incstack = 0
  1783                           ; Regs used in _Init_I2C_M: [wreg+status,2+status,0+pclath+cstack]
  1784  040B  3028               	movlw	40
  1785  040C  1283               	bcf	3,5	;RP0=0, select bank0
  1786  040D  1303               	bcf	3,6	;RP1=0, select bank0
  1787  040E  0094               	movwf	20	;volatile
  1788                           
  1789                           ;I2C.c: 13: SSPCON2 = 0;
  1790  040F  1683               	bsf	3,5	;RP0=1, select bank1
  1791  0410  1303               	bcf	3,6	;RP1=0, select bank1
  1792  0411  0191               	clrf	17	;volatile
  1793                           
  1794                           ;I2C.c: 14: SSPADD = (10000000/(4*c))-1;
  1795  0412  084C               	movf	Init_I2C_M@c^(0+128),w
  1796  0413  00D0               	movwf	??_Init_I2C_M^(0+128)
  1797  0414  084D               	movf	(Init_I2C_M@c+1)^(0+128),w
  1798  0415  00D1               	movwf	(??_Init_I2C_M^(0+128)+1)
  1799  0416  084E               	movf	(Init_I2C_M@c+2)^(0+128),w
  1800  0417  00D2               	movwf	(??_Init_I2C_M^(0+128)+2)
  1801  0418  084F               	movf	(Init_I2C_M@c+3)^(0+128),w
  1802  0419  00D3               	movwf	(??_Init_I2C_M^(0+128)+3)
  1803  041A  3002               	movlw	2
  1804  041B                     u865:	
  1805  041B  1003               	clrc
  1806  041C  0DD0               	rlf	??_Init_I2C_M^(0+128),f
  1807  041D  0DD1               	rlf	(??_Init_I2C_M^(0+128)+1),f
  1808  041E  0DD2               	rlf	(??_Init_I2C_M^(0+128)+2),f
  1809  041F  0DD3               	rlf	(??_Init_I2C_M^(0+128)+3),f
  1810  0420  3EFF               	addlw	-1
  1811  0421  1D03               	skipz
  1812  0422  2C1B               	goto	u865
  1813  0423  0853               	movf	(??_Init_I2C_M+3)^(0+128),w
  1814  0424  00C1               	movwf	(___lldiv@divisor+3)^(0+128)
  1815  0425  0852               	movf	(??_Init_I2C_M+2)^(0+128),w
  1816  0426  00C0               	movwf	(___lldiv@divisor+2)^(0+128)
  1817  0427  0851               	movf	(??_Init_I2C_M+1)^(0+128),w
  1818  0428  00BF               	movwf	(___lldiv@divisor+1)^(0+128)
  1819  0429  0850               	movf	??_Init_I2C_M^(0+128),w
  1820  042A  00BE               	movwf	___lldiv@divisor^(0+128)
  1821  042B  3000               	movlw	0
  1822  042C  00C5               	movwf	(___lldiv@dividend+3)^(0+128)
  1823  042D  3098               	movlw	152
  1824  042E  00C4               	movwf	(___lldiv@dividend+2)^(0+128)
  1825  042F  3096               	movlw	150
  1826  0430  00C3               	movwf	(___lldiv@dividend+1)^(0+128)
  1827  0431  3080               	movlw	128
  1828  0432  00C2               	movwf	___lldiv@dividend^(0+128)
  1829  0433  120A  118A  2353   	fcall	___lldiv
  1830  0436  1683               	bsf	3,5	;RP0=1, select bank1
  1831  0437  1303               	bcf	3,6	;RP1=0, select bank1
  1832  0438  083E               	movf	?___lldiv^(0+128),w
  1833  0439  3EFF               	addlw	255
  1834  043A  0093               	movwf	19	;volatile
  1835                           
  1836                           ;I2C.c: 15: SSPSTAT = 0;
  1837  043B  0194               	clrf	20	;volatile
  1838  043C  0008               	return
  1839  043D                     __end_of_Init_I2C_M:	
  1840                           
  1841                           	psect	text4
  1842  0353                     __ptext4:	
  1843 ;; *************** function ___lldiv *****************
  1844 ;; Defined at:
  1845 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;  divisor         4    0[BANK1 ] unsigned long 
  1848 ;;  dividend        4    4[BANK1 ] unsigned long 
  1849 ;; Auto vars:     Size  Location     Type
  1850 ;;  quotient        4    9[BANK1 ] unsigned long 
  1851 ;;  counter         1   13[BANK1 ] unsigned char 
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  4    0[BANK1 ] unsigned long 
  1854 ;; Registers used:
  1855 ;;		wreg, status,2, status,0
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1861 ;;      Params:         0       0       8       0       0
  1862 ;;      Locals:         0       0       5       0       0
  1863 ;;      Temps:          0       0       1       0       0
  1864 ;;      Totals:         0       0      14       0       0
  1865 ;;Total ram usage:       14 bytes
  1866 ;; Hardware stack levels used:    1
  1867 ;; Hardware stack levels required when called:    4
  1868 ;; This function calls:
  1869 ;;		Nothing
  1870 ;; This function is called by:
  1871 ;;		_Init_I2C_M
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875                           
  1876                           ;psect for function ___lldiv
  1877  0353                     ___lldiv:	
  1878                           
  1879                           ;incstack = 0
  1880                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1881  0353  3000               	movlw	0
  1882  0354  1683               	bsf	3,5	;RP0=1, select bank1
  1883  0355  1303               	bcf	3,6	;RP1=0, select bank1
  1884  0356  00CA               	movwf	(___lldiv@quotient+3)^(0+128)
  1885  0357  3000               	movlw	0
  1886  0358  00C9               	movwf	(___lldiv@quotient+2)^(0+128)
  1887  0359  3000               	movlw	0
  1888  035A  00C8               	movwf	(___lldiv@quotient+1)^(0+128)
  1889  035B  3000               	movlw	0
  1890  035C  00C7               	movwf	___lldiv@quotient^(0+128)
  1891  035D  0841               	movf	(___lldiv@divisor+3)^(0+128),w
  1892  035E  0440               	iorwf	(___lldiv@divisor+2)^(0+128),w
  1893  035F  043F               	iorwf	(___lldiv@divisor+1)^(0+128),w
  1894  0360  043E               	iorwf	___lldiv@divisor^(0+128),w
  1895  0361  1903               	skipnz
  1896  0362  2BAA               	goto	l1347
  1897  0363  01CB               	clrf	___lldiv@counter^(0+128)
  1898  0364  0ACB               	incf	___lldiv@counter^(0+128),f
  1899  0365                     l1333:	
  1900  0365  1BC1               	btfsc	(___lldiv@divisor+3)^(0+128),7
  1901  0366  2B75               	goto	l1335
  1902  0367  3001               	movlw	1
  1903  0368  00C6               	movwf	??___lldiv^(0+128)
  1904  0369                     u705:	
  1905  0369  1003               	clrc
  1906  036A  0DBE               	rlf	___lldiv@divisor^(0+128),f
  1907  036B  0DBF               	rlf	(___lldiv@divisor+1)^(0+128),f
  1908  036C  0DC0               	rlf	(___lldiv@divisor+2)^(0+128),f
  1909  036D  0DC1               	rlf	(___lldiv@divisor+3)^(0+128),f
  1910  036E  0BC6               	decfsz	??___lldiv^(0+128),f
  1911  036F  2B69               	goto	u705
  1912  0370  3001               	movlw	1
  1913  0371  00C6               	movwf	??___lldiv^(0+128)
  1914  0372  0846               	movf	??___lldiv^(0+128),w
  1915  0373  07CB               	addwf	___lldiv@counter^(0+128),f
  1916  0374  2B65               	goto	l1333
  1917  0375                     l1335:	
  1918  0375  3001               	movlw	1
  1919  0376  00C6               	movwf	??___lldiv^(0+128)
  1920  0377                     u725:	
  1921  0377  1003               	clrc
  1922  0378  0DC7               	rlf	___lldiv@quotient^(0+128),f
  1923  0379  0DC8               	rlf	(___lldiv@quotient+1)^(0+128),f
  1924  037A  0DC9               	rlf	(___lldiv@quotient+2)^(0+128),f
  1925  037B  0DCA               	rlf	(___lldiv@quotient+3)^(0+128),f
  1926  037C  0BC6               	decfsz	??___lldiv^(0+128),f
  1927  037D  2B77               	goto	u725
  1928  037E  0841               	movf	(___lldiv@divisor+3)^(0+128),w
  1929  037F  0245               	subwf	(___lldiv@dividend+3)^(0+128),w
  1930  0380  1D03               	skipz
  1931  0381  2B8C               	goto	u735
  1932  0382  0840               	movf	(___lldiv@divisor+2)^(0+128),w
  1933  0383  0244               	subwf	(___lldiv@dividend+2)^(0+128),w
  1934  0384  1D03               	skipz
  1935  0385  2B8C               	goto	u735
  1936  0386  083F               	movf	(___lldiv@divisor+1)^(0+128),w
  1937  0387  0243               	subwf	(___lldiv@dividend+1)^(0+128),w
  1938  0388  1D03               	skipz
  1939  0389  2B8C               	goto	u735
  1940  038A  083E               	movf	___lldiv@divisor^(0+128),w
  1941  038B  0242               	subwf	___lldiv@dividend^(0+128),w
  1942  038C                     u735:	
  1943  038C  1C03               	skipc
  1944  038D  2B9D               	goto	l1343
  1945  038E  083E               	movf	___lldiv@divisor^(0+128),w
  1946  038F  02C2               	subwf	___lldiv@dividend^(0+128),f
  1947  0390  083F               	movf	(___lldiv@divisor+1)^(0+128),w
  1948  0391  1C03               	skipc
  1949  0392  0F3F               	incfsz	(___lldiv@divisor+1)^(0+128),w
  1950  0393  02C3               	subwf	(___lldiv@dividend+1)^(0+128),f
  1951  0394  0840               	movf	(___lldiv@divisor+2)^(0+128),w
  1952  0395  1C03               	skipc
  1953  0396  0F40               	incfsz	(___lldiv@divisor+2)^(0+128),w
  1954  0397  02C4               	subwf	(___lldiv@dividend+2)^(0+128),f
  1955  0398  0841               	movf	(___lldiv@divisor+3)^(0+128),w
  1956  0399  1C03               	skipc
  1957  039A  0F41               	incfsz	(___lldiv@divisor+3)^(0+128),w
  1958  039B  02C5               	subwf	(___lldiv@dividend+3)^(0+128),f
  1959  039C  1447               	bsf	___lldiv@quotient^(0+128),0
  1960  039D                     l1343:	
  1961  039D  3001               	movlw	1
  1962  039E                     u745:	
  1963  039E  1003               	clrc
  1964  039F  0CC1               	rrf	(___lldiv@divisor+3)^(0+128),f
  1965  03A0  0CC0               	rrf	(___lldiv@divisor+2)^(0+128),f
  1966  03A1  0CBF               	rrf	(___lldiv@divisor+1)^(0+128),f
  1967  03A2  0CBE               	rrf	___lldiv@divisor^(0+128),f
  1968  03A3  3EFF               	addlw	-1
  1969  03A4  1D03               	skipz
  1970  03A5  2B9E               	goto	u745
  1971  03A6  3001               	movlw	1
  1972  03A7  02CB               	subwf	___lldiv@counter^(0+128),f
  1973  03A8  1D03               	btfss	3,2
  1974  03A9  2B75               	goto	l1335
  1975  03AA                     l1347:	
  1976  03AA  084A               	movf	(___lldiv@quotient+3)^(0+128),w
  1977  03AB  00C1               	movwf	(?___lldiv+3)^(0+128)
  1978  03AC  0849               	movf	(___lldiv@quotient+2)^(0+128),w
  1979  03AD  00C0               	movwf	(?___lldiv+2)^(0+128)
  1980  03AE  0848               	movf	(___lldiv@quotient+1)^(0+128),w
  1981  03AF  00BF               	movwf	(?___lldiv+1)^(0+128)
  1982  03B0  0847               	movf	___lldiv@quotient^(0+128),w
  1983  03B1  00BE               	movwf	?___lldiv^(0+128)
  1984  03B2  0008               	return
  1985  03B3                     __end_of___lldiv:	
  1986                           
  1987                           	psect	text5
  1988  0255                     __ptext5:	
  1989 ;; *************** function _InterReceiver *****************
  1990 ;; Defined at:
  1991 ;;		line 88 in file "UART.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;		None
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;  i               2   54[BANK0 ] int 
  1996 ;;  EEPROMCmdDat    2   52[BANK0 ] unsigned int 
  1997 ;;  EEPROMCmdDat    1   56[BANK0 ] unsigned char [1]
  1998 ;;  RXDATA         32   20[BANK0 ] unsigned char [32]
  1999 ;; Return value:  Size  Location     Type
  2000 ;;                  1    wreg      void 
  2001 ;; Registers used:
  2002 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2003 ;; Tracked objects:
  2004 ;;		On entry : 0/0
  2005 ;;		On exit  : 0/0
  2006 ;;		Unchanged: 0/0
  2007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2008 ;;      Params:         0       0       0       0       0
  2009 ;;      Locals:         0      37       0       0       0
  2010 ;;      Temps:          0       8       0       0       0
  2011 ;;      Totals:         0      45       0       0       0
  2012 ;;Total ram usage:       45 bytes
  2013 ;; Hardware stack levels used:    1
  2014 ;; Hardware stack levels required when called:    3
  2015 ;; This function calls:
  2016 ;;		_EEPROM_Read
  2017 ;;		_SendPacket
  2018 ;;		_getch
  2019 ;; This function is called by:
  2020 ;;		Interrupt level 1
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024                           
  2025                           ;psect for function _InterReceiver
  2026  0255                     _InterReceiver:	
  2027                           
  2028                           ;UART.c: 89: UBYTE RXDATA[32];
  2029                           ;UART.c: 90: if (RCIF == 1) {
  2030  0255  1E8C               	btfss	12,5	;volatile
  2031  0256  2ADF               	goto	i1l94
  2032                           
  2033                           ;UART.c: 93: RXDATA[0] = getch();
  2034  0257  120A  118A  2507  120A  118A  	fcall	_getch
  2035  025C  1283               	bcf	3,5	;RP0=0, select bank0
  2036  025D  1303               	bcf	3,6	;RP1=0, select bank0
  2037  025E  00AC               	movwf	??_InterReceiver
  2038  025F  082C               	movf	??_InterReceiver,w
  2039  0260  00B4               	movwf	InterReceiver@RXDATA
  2040                           
  2041                           ;UART.c: 95: if (RXDATA[0] == 0x74){
  2042  0261  3074               	movlw	116
  2043  0262  0634               	xorwf	InterReceiver@RXDATA,w
  2044  0263  1D03               	btfss	3,2
  2045  0264  2ADE               	goto	i1l90
  2046                           
  2047                           ;UART.c: 96: RB1 = 1;
  2048  0265  1486               	bsf	6,1	;volatile
  2049                           
  2050                           ;UART.c: 97: RXDATA[1] = getch();
  2051  0266  120A  118A  2507  120A  118A  	fcall	_getch
  2052  026B  1283               	bcf	3,5	;RP0=0, select bank0
  2053  026C  1303               	bcf	3,6	;RP1=0, select bank0
  2054  026D  00AC               	movwf	??_InterReceiver
  2055  026E  082C               	movf	??_InterReceiver,w
  2056  026F  00B5               	movwf	InterReceiver@RXDATA+1
  2057                           
  2058                           ;UART.c: 98: RXDATA[2] = getch();
  2059  0270  120A  118A  2507  120A  118A  	fcall	_getch
  2060  0275  1283               	bcf	3,5	;RP0=0, select bank0
  2061  0276  1303               	bcf	3,6	;RP1=0, select bank0
  2062  0277  00AC               	movwf	??_InterReceiver
  2063  0278  082C               	movf	??_InterReceiver,w
  2064  0279  00B6               	movwf	InterReceiver@RXDATA+2
  2065                           
  2066                           ;UART.c: 99: RCIF = 0 ;
  2067  027A  128C               	bcf	12,5	;volatile
  2068                           
  2069                           ;UART.c: 101: _delay((unsigned long)((200)*(10000000/4000.0)));
  2070  027B  3003               	movlw	3
  2071  027C  1283               	bcf	3,5	;RP0=0, select bank0
  2072  027D  1303               	bcf	3,6	;RP1=0, select bank0
  2073  027E  00AE               	movwf	??_InterReceiver+2
  2074  027F  308A               	movlw	138
  2075  0280  00AD               	movwf	??_InterReceiver+1
  2076  0281  3055               	movlw	85
  2077  0282  00AC               	movwf	??_InterReceiver
  2078  0283                     u100_27:	
  2079  0283  0BAC               	decfsz	??_InterReceiver,f
  2080  0284  2A83               	goto	u100_27
  2081  0285  0BAD               	decfsz	??_InterReceiver+1,f
  2082  0286  2A83               	goto	u100_27
  2083  0287  0BAE               	decfsz	??_InterReceiver+2,f
  2084  0288  2A83               	goto	u100_27
  2085                           
  2086                           ;UART.c: 102: UBYTE EEPROMCmdData[1];
  2087                           ;UART.c: 103: UINT EEPROMCmdDataLength;
  2088                           ;UART.c: 104: EEPROM_Read(0x50,RXDATA[1],RXDATA[2], EEPROMCmdData,&EEPROMCmdDataLength);
  2089  0289  1283               	bcf	3,5	;RP0=0, select bank0
  2090  028A  1303               	bcf	3,6	;RP1=0, select bank0
  2091  028B  0835               	movf	InterReceiver@RXDATA+1,w
  2092  028C  00AC               	movwf	??_InterReceiver
  2093  028D  082C               	movf	??_InterReceiver,w
  2094  028E  00F3               	movwf	EEPROM_Read@high_address
  2095  028F  0836               	movf	InterReceiver@RXDATA+2,w
  2096  0290  00AD               	movwf	??_InterReceiver+1
  2097  0291  082D               	movf	??_InterReceiver+1,w
  2098  0292  00F4               	movwf	EEPROM_Read@low_address
  2099  0293  3058               	movlw	(low (InterReceiver@EEPROMCmdData| 0))& (0+255)
  2100  0294  00AE               	movwf	??_InterReceiver+2
  2101  0295  082E               	movf	??_InterReceiver+2,w
  2102  0296  00F5               	movwf	EEPROM_Read@ReadData
  2103  0297  3054               	movlw	(low (InterReceiver@EEPROMCmdDataLength| 0))& (0+255)
  2104  0298  00AF               	movwf	??_InterReceiver+3
  2105  0299  082F               	movf	??_InterReceiver+3,w
  2106  029A  00F6               	movwf	EEPROM_Read@EEPROMDataLength
  2107  029B  3050               	movlw	80
  2108  029C  120A  118A  2104  120A  118A  	fcall	_EEPROM_Read
  2109                           
  2110                           ;UART.c: 105: RC0 = 1;
  2111  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  2112  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  2113  02A3  1407               	bsf	7,0	;volatile
  2114                           
  2115                           ;UART.c: 106: RB3 = 0;
  2116  02A4  1186               	bcf	6,3	;volatile
  2117                           
  2118                           ;UART.c: 112: for(int i = 0; i<5;i++){
  2119  02A5  01D6               	clrf	InterReceiver@i
  2120  02A6  01D7               	clrf	InterReceiver@i+1
  2121  02A7  0857               	movf	InterReceiver@i+1,w
  2122  02A8  3A80               	xorlw	128
  2123  02A9  00FF               	movwf	127
  2124  02AA  3080               	movlw	128
  2125  02AB  027F               	subwf	127,w
  2126  02AC  1D03               	skipz
  2127  02AD  2AB0               	goto	u89_25
  2128  02AE  3005               	movlw	5
  2129  02AF  0256               	subwf	InterReceiver@i,w
  2130  02B0                     u89_25:	
  2131  02B0  1803               	btfsc	3,0
  2132  02B1  2AD9               	goto	i1l92
  2133  02B2                     i1l1539:	
  2134                           
  2135                           ;UART.c: 114: SendPacket(EEPROMCmdData);
  2136  02B2  3058               	movlw	(low (InterReceiver@EEPROMCmdData| 0))& (0+255)
  2137  02B3  120A  118A  204C  120A  118A  	fcall	_SendPacket
  2138                           
  2139                           ;UART.c: 115: _delay((unsigned long)((200)*(10000000/4000.0)));
  2140  02B8  3003               	movlw	3
  2141  02B9  1283               	bcf	3,5	;RP0=0, select bank0
  2142  02BA  1303               	bcf	3,6	;RP1=0, select bank0
  2143  02BB  00AE               	movwf	??_InterReceiver+2
  2144  02BC  308A               	movlw	138
  2145  02BD  00AD               	movwf	??_InterReceiver+1
  2146  02BE  3055               	movlw	85
  2147  02BF  00AC               	movwf	??_InterReceiver
  2148  02C0                     u101_27:	
  2149  02C0  0BAC               	decfsz	??_InterReceiver,f
  2150  02C1  2AC0               	goto	u101_27
  2151  02C2  0BAD               	decfsz	??_InterReceiver+1,f
  2152  02C3  2AC0               	goto	u101_27
  2153  02C4  0BAE               	decfsz	??_InterReceiver+2,f
  2154  02C5  2AC0               	goto	u101_27
  2155  02C6  3001               	movlw	1
  2156  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  2157  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  2158  02C9  07D6               	addwf	InterReceiver@i,f
  2159  02CA  1803               	skipnc
  2160  02CB  0AD7               	incf	InterReceiver@i+1,f
  2161  02CC  3000               	movlw	0
  2162  02CD  07D7               	addwf	InterReceiver@i+1,f
  2163  02CE  0857               	movf	InterReceiver@i+1,w
  2164  02CF  3A80               	xorlw	128
  2165  02D0  00FF               	movwf	127
  2166  02D1  3080               	movlw	128
  2167  02D2  027F               	subwf	127,w
  2168  02D3  1D03               	skipz
  2169  02D4  2AD7               	goto	u90_25
  2170  02D5  3005               	movlw	5
  2171  02D6  0256               	subwf	InterReceiver@i,w
  2172  02D7                     u90_25:	
  2173  02D7  1C03               	skipc
  2174  02D8  2AB2               	goto	i1l1539
  2175  02D9                     i1l92:	
  2176                           
  2177                           ;UART.c: 116: }
  2178                           ;UART.c: 117: RC0 = 0;
  2179  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  2180  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  2181  02DB  1007               	bcf	7,0	;volatile
  2182                           
  2183                           ;UART.c: 118: RB1 = 0;
  2184  02DC  1086               	bcf	6,1	;volatile
  2185                           
  2186                           ;UART.c: 119: }else{
  2187  02DD  2ADF               	goto	i1l94
  2188  02DE                     i1l90:	
  2189                           
  2190                           ;UART.c: 120: RCIF = 0 ;
  2191  02DE  128C               	bcf	12,5	;volatile
  2192  02DF                     i1l94:	
  2193  02DF  0833               	movf	??_InterReceiver+7,w
  2194  02E0  00FF               	movwf	127
  2195  02E1  0832               	movf	??_InterReceiver+6,w
  2196  02E2  008A               	movwf	10
  2197  02E3  0831               	movf	??_InterReceiver+5,w
  2198  02E4  0084               	movwf	4
  2199  02E5  0E30               	swapf	(??_InterReceiver+4)^0,w
  2200  02E6  0083               	movwf	3
  2201  02E7  0EFE               	swapf	126,f
  2202  02E8  0E7E               	swapf	126,w
  2203  02E9  0009               	retfie
  2204  02EA                     __end_of_InterReceiver:	
  2205                           
  2206                           	psect	intentry
  2207  0004                     __pintentry:	
  2208                           ;incstack = 0
  2209                           ; Regs used in _InterReceiver: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2210                           
  2211  0004                     interrupt_function:	
  2212  007E                     saved_w	set	btemp
  2213  0004  00FE               	movwf	btemp
  2214  0005  0E03               	swapf	3,w
  2215  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2216  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2217  0008  00B0               	movwf	??_InterReceiver+4
  2218  0009  0804               	movf	4,w
  2219  000A  00B1               	movwf	??_InterReceiver+5
  2220  000B  080A               	movf	10,w
  2221  000C  00B2               	movwf	??_InterReceiver+6
  2222  000D  087F               	movf	btemp+1,w
  2223  000E  00B3               	movwf	??_InterReceiver+7
  2224  000F  120A  118A  2A55   	ljmp	_InterReceiver
  2225                           
  2226                           	psect	text6
  2227  0507                     __ptext6:	
  2228 ;; *************** function _getch *****************
  2229 ;; Defined at:
  2230 ;;		line 26 in file "UART.c"
  2231 ;; Parameters:    Size  Location     Type
  2232 ;;		None
  2233 ;; Auto vars:     Size  Location     Type
  2234 ;;		None
  2235 ;; Return value:  Size  Location     Type
  2236 ;;                  1    wreg      unsigned char 
  2237 ;; Registers used:
  2238 ;;		wreg
  2239 ;; Tracked objects:
  2240 ;;		On entry : 0/0
  2241 ;;		On exit  : 0/0
  2242 ;;		Unchanged: 0/0
  2243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2244 ;;      Params:         0       0       0       0       0
  2245 ;;      Locals:         0       0       0       0       0
  2246 ;;      Temps:          0       0       0       0       0
  2247 ;;      Totals:         0       0       0       0       0
  2248 ;;Total ram usage:        0 bytes
  2249 ;; Hardware stack levels used:    1
  2250 ;; This function calls:
  2251 ;;		Nothing
  2252 ;; This function is called by:
  2253 ;;		_InterReceiver
  2254 ;; This function uses a non-reentrant model
  2255 ;;
  2256                           
  2257                           
  2258                           ;psect for function _getch
  2259  0507                     _getch:	
  2260                           
  2261                           ;UART.c: 28: if(FERR || OERR)
  2262                           
  2263                           ;incstack = 0
  2264                           ; Regs used in _getch: [wreg]
  2265  0507  1283               	bcf	3,5	;RP0=0, select bank0
  2266  0508  1303               	bcf	3,6	;RP1=0, select bank0
  2267  0509  1918               	btfsc	24,2	;volatile
  2268  050A  2D0D               	goto	i1l74
  2269  050B  1C98               	btfss	24,1	;volatile
  2270  050C  2D12               	goto	i1l75
  2271  050D                     i1l74:	
  2272                           
  2273                           ;UART.c: 29: {
  2274                           ;UART.c: 35: CREN = 0;
  2275  050D  1218               	bcf	24,4	;volatile
  2276                           
  2277                           ;UART.c: 36: __nop();
  2278  050E  0000               	nop
  2279                           
  2280                           ;UART.c: 37: CREN = 1;
  2281  050F  1283               	bcf	3,5	;RP0=0, select bank0
  2282  0510  1303               	bcf	3,6	;RP1=0, select bank0
  2283  0511  1618               	bsf	24,4	;volatile
  2284  0512                     i1l75:	
  2285                           ;UART.c: 38: }
  2286                           ;UART.c: 39: while(!RCIF);
  2287                           
  2288  0512  1E8C               	btfss	12,5	;volatile
  2289  0513  2D12               	goto	i1l75
  2290                           
  2291                           ;UART.c: 43: return RCREG;
  2292  0514  081A               	movf	26,w	;volatile
  2293  0515  0008               	return
  2294  0516                     __end_of_getch:	
  2295                           
  2296                           	psect	text7
  2297  004C                     __ptext7:	
  2298 ;; *************** function _SendPacket *****************
  2299 ;; Defined at:
  2300 ;;		line 59 in file "encode_AX25.c"
  2301 ;; Parameters:    Size  Location     Type
  2302 ;;  eDataField      1    wreg     PTR unsigned char 
  2303 ;;		 -> InterReceiver@EEPROMCmdData(1), 
  2304 ;; Auto vars:     Size  Location     Type
  2305 ;;  eDataField      1    5[BANK0 ] PTR unsigned char 
  2306 ;;		 -> InterReceiver@EEPROMCmdData(1), 
  2307 ;;  i               2   10[BANK0 ] unsigned int 
  2308 ;;  i               2    8[BANK0 ] unsigned int 
  2309 ;;  i               2    6[BANK0 ] unsigned int 
  2310 ;;  Packetnum       2    3[BANK0 ] unsigned int 
  2311 ;; Return value:  Size  Location     Type
  2312 ;;                  1    wreg      void 
  2313 ;; Registers used:
  2314 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2315 ;; Tracked objects:
  2316 ;;		On entry : 0/0
  2317 ;;		On exit  : 0/0
  2318 ;;		Unchanged: 0/0
  2319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2320 ;;      Params:         0       0       0       0       0
  2321 ;;      Locals:         0       9       0       0       0
  2322 ;;      Temps:          0       3       0       0       0
  2323 ;;      Totals:         0      12       0       0       0
  2324 ;;Total ram usage:       12 bytes
  2325 ;; Hardware stack levels used:    1
  2326 ;; Hardware stack levels required when called:    2
  2327 ;; This function calls:
  2328 ;;		_Packetmaker
  2329 ;;		_SendByte
  2330 ;; This function is called by:
  2331 ;;		_InterReceiver
  2332 ;; This function uses a non-reentrant model
  2333 ;;
  2334                           
  2335                           
  2336                           ;psect for function _SendPacket
  2337  004C                     _SendPacket:	
  2338                           
  2339                           ;incstack = 0
  2340                           ; Regs used in _SendPacket: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2341                           ;SendPacket@eDataField stored from wreg
  2342  004C  1283               	bcf	3,5	;RP0=0, select bank0
  2343  004D  1303               	bcf	3,6	;RP1=0, select bank0
  2344  004E  00A5               	movwf	SendPacket@eDataField
  2345                           
  2346                           ;encode_AX25.c: 62: _delay((unsigned long)((200)*(10000000/4000.0)));
  2347  004F  3003               	movlw	3
  2348  0050  1283               	bcf	3,5	;RP0=0, select bank0
  2349  0051  1303               	bcf	3,6	;RP1=0, select bank0
  2350  0052  00A2               	movwf	??_SendPacket+2
  2351  0053  308A               	movlw	138
  2352  0054  00A1               	movwf	??_SendPacket+1
  2353  0055  3055               	movlw	85
  2354  0056  00A0               	movwf	??_SendPacket
  2355  0057                     u102_27:	
  2356  0057  0BA0               	decfsz	??_SendPacket,f
  2357  0058  2857               	goto	u102_27
  2358  0059  0BA1               	decfsz	??_SendPacket+1,f
  2359  005A  2857               	goto	u102_27
  2360  005B  0BA2               	decfsz	??_SendPacket+2,f
  2361  005C  2857               	goto	u102_27
  2362                           
  2363                           ;encode_AX25.c: 63: UINT Packetnum;
  2364                           ;encode_AX25.c: 64: Packetnum = 0;
  2365  005D  1283               	bcf	3,5	;RP0=0, select bank0
  2366  005E  1303               	bcf	3,6	;RP1=0, select bank0
  2367  005F  01A3               	clrf	SendPacket@Packetnum
  2368  0060  01A4               	clrf	SendPacket@Packetnum+1
  2369                           
  2370                           ;encode_AX25.c: 65: Packetnum = Packetmaker(eDataField);
  2371  0061  0825               	movf	SendPacket@eDataField,w
  2372  0062  120A  118A  21B4  120A  118A  	fcall	_Packetmaker
  2373  0067  0871               	movf	?_Packetmaker+1,w
  2374  0068  1283               	bcf	3,5	;RP0=0, select bank0
  2375  0069  1303               	bcf	3,6	;RP1=0, select bank0
  2376  006A  00A4               	movwf	SendPacket@Packetnum+1
  2377  006B  0870               	movf	?_Packetmaker,w
  2378  006C  00A3               	movwf	SendPacket@Packetnum
  2379                           
  2380                           ;encode_AX25.c: 66: ebitstatus = 1;
  2381  006D  3001               	movlw	1
  2382  006E  00D9               	movwf	_ebitstatus
  2383  006F  3000               	movlw	0
  2384  0070  00DA               	movwf	_ebitstatus+1
  2385                           
  2386                           ;encode_AX25.c: 67: efcslo = efcshi = 0xff;
  2387  0071  30FF               	movlw	255
  2388  0072  00E1               	movwf	_efcshi
  2389  0073  00A0               	movwf	??_SendPacket
  2390  0074  0820               	movf	??_SendPacket,w
  2391  0075  00E2               	movwf	_efcslo
  2392                           
  2393                           ;encode_AX25.c: 68: estuff = 0;
  2394  0076  01DB               	clrf	_estuff
  2395  0077  01DC               	clrf	_estuff+1
  2396                           
  2397                           ;encode_AX25.c: 70: eflag = 1;
  2398  0078  3001               	movlw	1
  2399  0079  00DF               	movwf	_eflag
  2400  007A  3000               	movlw	0
  2401  007B  00E0               	movwf	_eflag+1
  2402                           
  2403                           ;encode_AX25.c: 71: efcsflag = 0;
  2404  007C  01DD               	clrf	_efcsflag
  2405  007D  01DE               	clrf	_efcsflag+1
  2406                           
  2407                           ;encode_AX25.c: 72: for(UINT i=0;i<27;i++){
  2408  007E  01A6               	clrf	SendPacket@i
  2409  007F  01A7               	clrf	SendPacket@i+1
  2410  0080  3000               	movlw	0
  2411  0081  0227               	subwf	SendPacket@i+1,w
  2412  0082  301B               	movlw	27
  2413  0083  1903               	skipnz
  2414  0084  0226               	subwf	SendPacket@i,w
  2415  0085  1803               	btfsc	3,0
  2416  0086  289C               	goto	i1l1453
  2417  0087                     i1l1447:	
  2418                           
  2419                           ;encode_AX25.c: 73: SendByte(0x7e);
  2420  0087  307E               	movlw	126
  2421  0088  120A  118A  23B3  120A  118A  	fcall	_SendByte
  2422  008D  3001               	movlw	1
  2423  008E  1283               	bcf	3,5	;RP0=0, select bank0
  2424  008F  1303               	bcf	3,6	;RP1=0, select bank0
  2425  0090  07A6               	addwf	SendPacket@i,f
  2426  0091  1803               	skipnc
  2427  0092  0AA7               	incf	SendPacket@i+1,f
  2428  0093  3000               	movlw	0
  2429  0094  07A7               	addwf	SendPacket@i+1,f
  2430  0095  3000               	movlw	0
  2431  0096  0227               	subwf	SendPacket@i+1,w
  2432  0097  301B               	movlw	27
  2433  0098  1903               	skipnz
  2434  0099  0226               	subwf	SendPacket@i,w
  2435  009A  1C03               	skipc
  2436  009B  2887               	goto	i1l1447
  2437  009C                     i1l1453:	
  2438                           
  2439                           ;encode_AX25.c: 74: }
  2440                           ;encode_AX25.c: 75: eflag = 0;
  2441  009C  01DF               	clrf	_eflag
  2442  009D  01E0               	clrf	_eflag+1
  2443                           
  2444                           ;encode_AX25.c: 77: for(UINT i=0;i<Packetnum;i++){
  2445  009E  01A8               	clrf	SendPacket@i_140
  2446  009F  01A9               	clrf	SendPacket@i_140+1
  2447  00A0                     i1l1459:	
  2448  00A0  0824               	movf	SendPacket@Packetnum+1,w
  2449  00A1  0229               	subwf	SendPacket@i_140+1,w
  2450  00A2  1D03               	skipz
  2451  00A3  28A6               	goto	u83_25
  2452  00A4  0823               	movf	SendPacket@Packetnum,w
  2453  00A5  0228               	subwf	SendPacket@i_140,w
  2454  00A6                     u83_25:	
  2455  00A6  1803               	btfsc	3,0
  2456  00A7  28BB               	goto	i1l1461
  2457                           
  2458                           ;encode_AX25.c: 78: SendByte(ePacket[i]);
  2459  00A8  0828               	movf	SendPacket@i_140,w
  2460  00A9  3E90               	addlw	(low (_ePacket| (0+256)))& (0+255)
  2461  00AA  0084               	movwf	4
  2462  00AB  1783               	bsf	3,7	;select IRP bank3
  2463  00AC  0800               	movf	0,w
  2464  00AD  120A  118A  23B3  120A  118A  	fcall	_SendByte
  2465  00B2  3001               	movlw	1
  2466  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  2467  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  2468  00B5  07A8               	addwf	SendPacket@i_140,f
  2469  00B6  1803               	skipnc
  2470  00B7  0AA9               	incf	SendPacket@i_140+1,f
  2471  00B8  3000               	movlw	0
  2472  00B9  07A9               	addwf	SendPacket@i_140+1,f
  2473  00BA  28A0               	goto	i1l1459
  2474  00BB                     i1l1461:	
  2475                           
  2476                           ;encode_AX25.c: 79: }
  2477                           ;encode_AX25.c: 83: efcsflag = 1;
  2478  00BB  3001               	movlw	1
  2479  00BC  00DD               	movwf	_efcsflag
  2480  00BD  3000               	movlw	0
  2481  00BE  00DE               	movwf	_efcsflag+1
  2482                           
  2483                           ;encode_AX25.c: 84: efcslo = efcslo ^ 0xff;
  2484  00BF  09E2               	comf	_efcslo,f
  2485                           
  2486                           ;encode_AX25.c: 85: efcshi = efcshi ^ 0xff;
  2487  00C0  09E1               	comf	_efcshi,f
  2488                           
  2489                           ;encode_AX25.c: 86: SendByte(efcslo);
  2490  00C1  0862               	movf	_efcslo,w
  2491  00C2  120A  118A  23B3  120A  118A  	fcall	_SendByte
  2492                           
  2493                           ;encode_AX25.c: 87: SendByte(efcshi);
  2494  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  2495  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  2496  00C9  0861               	movf	_efcshi,w
  2497  00CA  120A  118A  23B3  120A  118A  	fcall	_SendByte
  2498                           
  2499                           ;encode_AX25.c: 88: efcsflag = 0;
  2500  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  2501  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  2502  00D1  01DD               	clrf	_efcsflag
  2503  00D2  01DE               	clrf	_efcsflag+1
  2504                           
  2505                           ;encode_AX25.c: 91: eflag = 1;
  2506  00D3  3001               	movlw	1
  2507  00D4  00DF               	movwf	_eflag
  2508  00D5  3000               	movlw	0
  2509  00D6  00E0               	movwf	_eflag+1
  2510                           
  2511                           ;encode_AX25.c: 92: for(UINT i=0;i<6;i++){
  2512  00D7  01AA               	clrf	SendPacket@i_141
  2513  00D8  01AB               	clrf	SendPacket@i_141+1
  2514  00D9  3000               	movlw	0
  2515  00DA  022B               	subwf	SendPacket@i_141+1,w
  2516  00DB  3006               	movlw	6
  2517  00DC  1903               	skipnz
  2518  00DD  022A               	subwf	SendPacket@i_141,w
  2519  00DE  1803               	btfsc	3,0
  2520  00DF  28F5               	goto	i1l1485
  2521  00E0                     i1l1479:	
  2522                           
  2523                           ;encode_AX25.c: 93: SendByte(0x7e);
  2524  00E0  307E               	movlw	126
  2525  00E1  120A  118A  23B3  120A  118A  	fcall	_SendByte
  2526  00E6  3001               	movlw	1
  2527  00E7  1283               	bcf	3,5	;RP0=0, select bank0
  2528  00E8  1303               	bcf	3,6	;RP1=0, select bank0
  2529  00E9  07AA               	addwf	SendPacket@i_141,f
  2530  00EA  1803               	skipnc
  2531  00EB  0AAB               	incf	SendPacket@i_141+1,f
  2532  00EC  3000               	movlw	0
  2533  00ED  07AB               	addwf	SendPacket@i_141+1,f
  2534  00EE  3000               	movlw	0
  2535  00EF  022B               	subwf	SendPacket@i_141+1,w
  2536  00F0  3006               	movlw	6
  2537  00F1  1903               	skipnz
  2538  00F2  022A               	subwf	SendPacket@i_141,w
  2539  00F3  1C03               	skipc
  2540  00F4  28E0               	goto	i1l1479
  2541  00F5                     i1l1485:	
  2542                           
  2543                           ;encode_AX25.c: 94: }
  2544                           ;encode_AX25.c: 96: _delay((unsigned long)((200)*(10000000/4000.0)));
  2545  00F5  3003               	movlw	3
  2546  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  2547  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  2548  00F8  00A2               	movwf	??_SendPacket+2
  2549  00F9  308A               	movlw	138
  2550  00FA  00A1               	movwf	??_SendPacket+1
  2551  00FB  3055               	movlw	85
  2552  00FC  00A0               	movwf	??_SendPacket
  2553  00FD                     u103_27:	
  2554  00FD  0BA0               	decfsz	??_SendPacket,f
  2555  00FE  28FD               	goto	u103_27
  2556  00FF  0BA1               	decfsz	??_SendPacket+1,f
  2557  0100  28FD               	goto	u103_27
  2558  0101  0BA2               	decfsz	??_SendPacket+2,f
  2559  0102  28FD               	goto	u103_27
  2560  0103  0008               	return
  2561  0104                     __end_of_SendPacket:	
  2562                           
  2563                           	psect	text8
  2564  03B3                     __ptext8:	
  2565 ;; *************** function _SendByte *****************
  2566 ;; Defined at:
  2567 ;;		line 101 in file "encode_AX25.c"
  2568 ;; Parameters:    Size  Location     Type
  2569 ;;  byte            1    wreg     unsigned char 
  2570 ;; Auto vars:     Size  Location     Type
  2571 ;;  byte            1    7[COMMON] unsigned char 
  2572 ;;  i               2    5[COMMON] unsigned int 
  2573 ;;  bt              1    8[COMMON] unsigned char 
  2574 ;; Return value:  Size  Location     Type
  2575 ;;                  1    wreg      void 
  2576 ;; Registers used:
  2577 ;;		wreg, status,2, status,0, pclath, cstack
  2578 ;; Tracked objects:
  2579 ;;		On entry : 0/0
  2580 ;;		On exit  : 0/0
  2581 ;;		Unchanged: 0/0
  2582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2583 ;;      Params:         0       0       0       0       0
  2584 ;;      Locals:         4       0       0       0       0
  2585 ;;      Temps:          2       0       0       0       0
  2586 ;;      Totals:         6       0       0       0       0
  2587 ;;Total ram usage:        6 bytes
  2588 ;; Hardware stack levels used:    1
  2589 ;; Hardware stack levels required when called:    1
  2590 ;; This function calls:
  2591 ;;		_fcsbit
  2592 ;;		_flipout
  2593 ;; This function is called by:
  2594 ;;		_SendPacket
  2595 ;; This function uses a non-reentrant model
  2596 ;;
  2597                           
  2598                           
  2599                           ;psect for function _SendByte
  2600  03B3                     _SendByte:	
  2601                           
  2602                           ;incstack = 0
  2603                           ; Regs used in _SendByte: [wreg+status,2+status,0+pclath+cstack]
  2604                           ;SendByte@byte stored from wreg
  2605  03B3  00F7               	movwf	SendByte@byte
  2606                           
  2607                           ;encode_AX25.c: 102: UBYTE bt;
  2608                           ;encode_AX25.c: 103: for(UINT i=0;i<8;i++){
  2609  03B4  01F5               	clrf	SendByte@i
  2610  03B5  01F6               	clrf	SendByte@i+1
  2611  03B6                     L2:	
  2612  03B6  3000               	movlw	0
  2613  03B7  0276               	subwf	SendByte@i+1,w
  2614  03B8  3008               	movlw	8
  2615  03B9  1903               	skipnz
  2616  03BA  0275               	subwf	SendByte@i,w
  2617  03BB  1803               	btfsc	3,0
  2618  03BC  0008               	return
  2619                           
  2620                           ;encode_AX25.c: 104: bt = byte & 0x01;
  2621  03BD  0877               	movf	SendByte@byte,w
  2622  03BE  3901               	andlw	1
  2623  03BF  00F3               	movwf	??_SendByte
  2624  03C0  0873               	movf	??_SendByte,w
  2625  03C1  00F8               	movwf	SendByte@bt
  2626                           
  2627                           ;encode_AX25.c: 106: if(efcsflag == 0 && eflag == 0){
  2628  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  2629  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  2630  03C4  085D               	movf	_efcsflag,w
  2631  03C5  045E               	iorwf	_efcsflag+1,w
  2632  03C6  1D03               	btfss	3,2
  2633  03C7  2BD2               	goto	i1l1273
  2634  03C8  085F               	movf	_eflag,w
  2635  03C9  0460               	iorwf	_eflag+1,w
  2636  03CA  1D03               	btfss	3,2
  2637  03CB  2BD2               	goto	i1l1273
  2638                           
  2639                           ;encode_AX25.c: 107: fcsbit(bt);
  2640  03CC  0878               	movf	SendByte@bt,w
  2641  03CD  120A  118A  24B6  120A  118A  	fcall	_fcsbit
  2642  03D2                     i1l1273:	
  2643                           
  2644                           ;encode_AX25.c: 108: }
  2645                           ;encode_AX25.c: 110: if(bt == 0x00){
  2646  03D2  0878               	movf	SendByte@bt,w
  2647  03D3  1903               	btfsc	3,2
  2648  03D4  2BEF               	goto	L1
  2649                           
  2650                           ;encode_AX25.c: 113: estuff ++;
  2651                           
  2652                           ;encode_AX25.c: 112: }else{
  2653                           
  2654                           ;encode_AX25.c: 111: flipout();
  2655  03D5  3001               	movlw	1
  2656  03D6  1283               	bcf	3,5	;RP0=0, select bank0
  2657  03D7  1303               	bcf	3,6	;RP1=0, select bank0
  2658  03D8  07DB               	addwf	_estuff,f
  2659  03D9  1803               	skipnc
  2660  03DA  0ADC               	incf	_estuff+1,f
  2661  03DB  3000               	movlw	0
  2662  03DC  07DC               	addwf	_estuff+1,f
  2663                           
  2664                           ;encode_AX25.c: 115: if(eflag == 0 && estuff == 5){
  2665  03DD  085F               	movf	_eflag,w
  2666  03DE  0460               	iorwf	_eflag+1,w
  2667  03DF  1D03               	btfss	3,2
  2668  03E0  2BF4               	goto	i1l1287
  2669  03E1  3005               	movlw	5
  2670  03E2  065B               	xorwf	_estuff,w
  2671  03E3  045C               	iorwf	_estuff+1,w
  2672  03E4  1D03               	btfss	3,2
  2673  03E5  2BF4               	goto	i1l1287
  2674                           
  2675                           ;encode_AX25.c: 116: _delay((unsigned long)((795)*(10000000/4000000.0)));
  2676  03E6  3003               	movlw	3
  2677  03E7  00F4               	movwf	??_SendByte+1
  2678  03E8  3093               	movlw	147
  2679  03E9  00F3               	movwf	??_SendByte
  2680  03EA                     u104_27:	
  2681  03EA  0BF3               	decfsz	??_SendByte,f
  2682  03EB  2BEA               	goto	u104_27
  2683  03EC  0BF4               	decfsz	??_SendByte+1,f
  2684  03ED  2BEA               	goto	u104_27
  2685  03EE  0000               	nop
  2686  03EF                     L1:	
  2687                           
  2688                           ;encode_AX25.c: 117: flipout();
  2689  03EF  120A  118A  24E4  120A  118A  	fcall	_flipout
  2690  03F4                     i1l1287:	
  2691                           
  2692                           ;encode_AX25.c: 118: }
  2693                           ;encode_AX25.c: 119: }
  2694                           ;encode_AX25.c: 120: _delay((unsigned long)((795)*(10000000/4000000.0)));
  2695  03F4  3003               	movlw	3
  2696  03F5  00F4               	movwf	??_SendByte+1
  2697  03F6  3093               	movlw	147
  2698  03F7  00F3               	movwf	??_SendByte
  2699  03F8                     u105_27:	
  2700  03F8  0BF3               	decfsz	??_SendByte,f
  2701  03F9  2BF8               	goto	u105_27
  2702  03FA  0BF4               	decfsz	??_SendByte+1,f
  2703  03FB  2BF8               	goto	u105_27
  2704  03FC  0000               	nop
  2705                           
  2706                           ;encode_AX25.c: 121: byte = byte >> 1;
  2707  03FD  0877               	movf	SendByte@byte,w
  2708  03FE  00F3               	movwf	??_SendByte
  2709  03FF  1003               	clrc
  2710  0400  0C73               	rrf	??_SendByte,w
  2711  0401  00F4               	movwf	??_SendByte+1
  2712  0402  0874               	movf	??_SendByte+1,w
  2713  0403  00F7               	movwf	SendByte@byte
  2714  0404  3001               	movlw	1
  2715  0405  07F5               	addwf	SendByte@i,f
  2716  0406  1803               	skipnc
  2717  0407  0AF6               	incf	SendByte@i+1,f
  2718  0408  3000               	movlw	0
  2719  0409  07F6               	addwf	SendByte@i+1,f
  2720  040A  2BB6               	goto	L2
  2721  040B                     __end_of_SendByte:	
  2722                           
  2723                           	psect	text9
  2724  04E4                     __ptext9:	
  2725 ;; *************** function _flipout *****************
  2726 ;; Defined at:
  2727 ;;		line 125 in file "encode_AX25.c"
  2728 ;; Parameters:    Size  Location     Type
  2729 ;;		None
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;		None
  2732 ;; Return value:  Size  Location     Type
  2733 ;;                  1    wreg      void 
  2734 ;; Registers used:
  2735 ;;		wreg, status,2, status,0
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2741 ;;      Params:         0       0       0       0       0
  2742 ;;      Locals:         0       0       0       0       0
  2743 ;;      Temps:          0       0       0       0       0
  2744 ;;      Totals:         0       0       0       0       0
  2745 ;;Total ram usage:        0 bytes
  2746 ;; Hardware stack levels used:    1
  2747 ;; This function calls:
  2748 ;;		Nothing
  2749 ;; This function is called by:
  2750 ;;		_SendByte
  2751 ;; This function uses a non-reentrant model
  2752 ;;
  2753                           
  2754                           
  2755                           ;psect for function _flipout
  2756  04E4                     _flipout:	
  2757                           
  2758                           ;encode_AX25.c: 126: estuff = 0;
  2759                           
  2760                           ;incstack = 0
  2761                           ; Regs used in _flipout: [wreg+status,2+status,0]
  2762  04E4  1283               	bcf	3,5	;RP0=0, select bank0
  2763  04E5  1303               	bcf	3,6	;RP1=0, select bank0
  2764  04E6  01DB               	clrf	_estuff
  2765  04E7  01DC               	clrf	_estuff+1
  2766                           
  2767                           ;encode_AX25.c: 127: if(ebitstatus == 0){
  2768  04E8  0859               	movf	_ebitstatus,w
  2769  04E9  045A               	iorwf	_ebitstatus+1,w
  2770  04EA  1D03               	btfss	3,2
  2771  04EB  2CF2               	goto	i1l190
  2772                           
  2773                           ;encode_AX25.c: 128: RC5 = 1;
  2774  04EC  1687               	bsf	7,5	;volatile
  2775                           
  2776                           ;encode_AX25.c: 129: ebitstatus = 1;
  2777  04ED  3001               	movlw	1
  2778  04EE  00D9               	movwf	_ebitstatus
  2779  04EF  3000               	movlw	0
  2780  04F0  00DA               	movwf	_ebitstatus+1
  2781                           
  2782                           ;encode_AX25.c: 130: }else{
  2783  04F1  0008               	return
  2784  04F2                     i1l190:	
  2785                           
  2786                           ;encode_AX25.c: 131: RC5 = 0;
  2787  04F2  1287               	bcf	7,5	;volatile
  2788                           
  2789                           ;encode_AX25.c: 132: ebitstatus = 0;
  2790  04F3  01D9               	clrf	_ebitstatus
  2791  04F4  01DA               	clrf	_ebitstatus+1
  2792  04F5  0008               	return
  2793  04F6                     __end_of_flipout:	
  2794                           
  2795                           	psect	text10
  2796  04B6                     __ptext10:	
  2797 ;; *************** function _fcsbit *****************
  2798 ;; Defined at:
  2799 ;;		line 138 in file "encode_AX25.c"
  2800 ;; Parameters:    Size  Location     Type
  2801 ;;  tbyte           1    wreg     unsigned char 
  2802 ;; Auto vars:     Size  Location     Type
  2803 ;;  tbyte           1    2[COMMON] unsigned char 
  2804 ;; Return value:  Size  Location     Type
  2805 ;;                  1    wreg      void 
  2806 ;; Registers used:
  2807 ;;		wreg, status,2, status,0
  2808 ;; Tracked objects:
  2809 ;;		On entry : 0/0
  2810 ;;		On exit  : 0/0
  2811 ;;		Unchanged: 0/0
  2812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2813 ;;      Params:         0       0       0       0       0
  2814 ;;      Locals:         1       0       0       0       0
  2815 ;;      Temps:          2       0       0       0       0
  2816 ;;      Totals:         3       0       0       0       0
  2817 ;;Total ram usage:        3 bytes
  2818 ;; Hardware stack levels used:    1
  2819 ;; This function calls:
  2820 ;;		Nothing
  2821 ;; This function is called by:
  2822 ;;		_SendByte
  2823 ;; This function uses a non-reentrant model
  2824 ;;
  2825                           
  2826                           
  2827                           ;psect for function _fcsbit
  2828  04B6                     _fcsbit:	
  2829                           
  2830                           ;incstack = 0
  2831                           ; Regs used in _fcsbit: [wreg+status,2+status,0]
  2832                           ;fcsbit@tbyte stored from wreg
  2833  04B6  00F2               	movwf	fcsbit@tbyte
  2834  04B7  1003               	bcf	3,0	;# 
  2835  04B8  0CE1               	rrf	_efcshi,f	;# 
  2836  04B9  0CE2               	rrf	_efcslo,f	;# 
  2837                           
  2838                           ;encode_AX25.c: 144: if(((STATUS & 0x01)^(tbyte)) == 0x01){
  2839  04BA  3001               	movlw	1
  2840  04BB  1283               	bcf	3,5	;RP0=0, select bank0
  2841  04BC  1303               	bcf	3,6	;RP1=0, select bank0
  2842  04BD  0503               	andwf	3,w	;volatile
  2843  04BE  00F0               	movwf	??_fcsbit
  2844  04BF  0872               	movf	fcsbit@tbyte,w
  2845  04C0  0670               	xorwf	??_fcsbit,w
  2846  04C1  00F1               	movwf	??_fcsbit+1
  2847  04C2  0371               	decf	??_fcsbit+1,w
  2848  04C3  1D03               	btfss	3,2
  2849  04C4  0008               	return
  2850                           
  2851                           ;encode_AX25.c: 145: efcshi = efcshi ^ 0x84;
  2852  04C5  0861               	movf	_efcshi,w
  2853  04C6  3A84               	xorlw	132
  2854  04C7  00F0               	movwf	??_fcsbit
  2855  04C8  0870               	movf	??_fcsbit,w
  2856  04C9  00E1               	movwf	_efcshi
  2857                           
  2858                           ;encode_AX25.c: 146: efcslo = efcslo ^ 0x08;
  2859  04CA  0862               	movf	_efcslo,w
  2860  04CB  3A08               	xorlw	8
  2861  04CC  00F0               	movwf	??_fcsbit
  2862  04CD  0870               	movf	??_fcsbit,w
  2863  04CE  00E2               	movwf	_efcslo
  2864  04CF  0008               	return
  2865  04D0                     __end_of_fcsbit:	
  2866                           
  2867                           	psect	text11
  2868  01B4                     __ptext11:	
  2869 ;; *************** function _Packetmaker *****************
  2870 ;; Defined at:
  2871 ;;		line 40 in file "encode_AX25.c"
  2872 ;; Parameters:    Size  Location     Type
  2873 ;;  eDataField      1    wreg     PTR unsigned char 
  2874 ;;		 -> InterReceiver@EEPROMCmdData(1), 
  2875 ;; Auto vars:     Size  Location     Type
  2876 ;;  eDataField      1    4[COMMON] PTR unsigned char 
  2877 ;;		 -> InterReceiver@EEPROMCmdData(1), 
  2878 ;;  i               2    5[COMMON] unsigned int 
  2879 ;;  i               2   11[COMMON] unsigned int 
  2880 ;;  i               2    9[COMMON] unsigned int 
  2881 ;;  Datanum         2    7[COMMON] unsigned int 
  2882 ;; Return value:  Size  Location     Type
  2883 ;;                  2    0[COMMON] unsigned int 
  2884 ;; Registers used:
  2885 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2886 ;; Tracked objects:
  2887 ;;		On entry : 0/0
  2888 ;;		On exit  : 0/0
  2889 ;;		Unchanged: 0/0
  2890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2891 ;;      Params:         2       0       0       0       0
  2892 ;;      Locals:         9       0       0       0       0
  2893 ;;      Temps:          2       0       0       0       0
  2894 ;;      Totals:        13       0       0       0       0
  2895 ;;Total ram usage:       13 bytes
  2896 ;; Hardware stack levels used:    2
  2897 ;; This function calls:
  2898 ;;		Nothing
  2899 ;; This function is called by:
  2900 ;;		_SendPacket
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           
  2905                           ;psect for function _Packetmaker
  2906  01B4                     _Packetmaker:	
  2907                           
  2908                           ;incstack = 0
  2909                           ; Regs used in _Packetmaker: [wreg-fsr0h+status,2+status,0+pclath]
  2910                           ;Packetmaker@eDataField stored from wreg
  2911  01B4  00F4               	movwf	Packetmaker@eDataField
  2912                           
  2913                           ;encode_AX25.c: 41: for(UINT i=0;i<6;i++){
  2914  01B5  01F9               	clrf	Packetmaker@i
  2915  01B6  01FA               	clrf	Packetmaker@i+1
  2916  01B7  3000               	movlw	0
  2917  01B8  027A               	subwf	Packetmaker@i+1,w
  2918  01B9  3006               	movlw	6
  2919  01BA  1903               	skipnz
  2920  01BB  0279               	subwf	Packetmaker@i,w
  2921  01BC  1803               	btfsc	3,0
  2922  01BD  29DC               	goto	i1l1223
  2923  01BE                     i1l1217:	
  2924                           
  2925                           ;encode_AX25.c: 42: ePacket[i] = "JQ1ZHX"[i] << 1;
  2926  01BE  0879               	movf	Packetmaker@i,w
  2927  01BF  3E01               	addlw	low ((STR_1-__stringbase)| (0+32768))
  2928  01C0  0084               	movwf	4
  2929  01C1  120A  118A  24D0  120A  118A  	fcall	stringdir
  2930  01C6  00F2               	movwf	??_Packetmaker
  2931  01C7  0772               	addwf	??_Packetmaker,w
  2932  01C8  00F3               	movwf	??_Packetmaker+1
  2933  01C9  0879               	movf	Packetmaker@i,w
  2934  01CA  3E90               	addlw	(low (_ePacket| (0+256)))& (0+255)
  2935  01CB  0084               	movwf	4
  2936  01CC  0873               	movf	??_Packetmaker+1,w
  2937  01CD  1783               	bsf	3,7	;select IRP bank3
  2938  01CE  0080               	movwf	0
  2939  01CF  3001               	movlw	1
  2940  01D0  07F9               	addwf	Packetmaker@i,f
  2941  01D1  1803               	skipnc
  2942  01D2  0AFA               	incf	Packetmaker@i+1,f
  2943  01D3  3000               	movlw	0
  2944  01D4  07FA               	addwf	Packetmaker@i+1,f
  2945  01D5  3000               	movlw	0
  2946  01D6  027A               	subwf	Packetmaker@i+1,w
  2947  01D7  3006               	movlw	6
  2948  01D8  1903               	skipnz
  2949  01D9  0279               	subwf	Packetmaker@i,w
  2950  01DA  1C03               	skipc
  2951  01DB  29BE               	goto	i1l1217
  2952  01DC                     i1l1223:	
  2953                           
  2954                           ;encode_AX25.c: 43: }
  2955                           ;encode_AX25.c: 44: ePacket[6] = 0x60;
  2956  01DC  3060               	movlw	96
  2957  01DD  00F2               	movwf	??_Packetmaker
  2958  01DE  0872               	movf	??_Packetmaker,w
  2959  01DF  1683               	bsf	3,5	;RP0=1, select bank3
  2960  01E0  1703               	bsf	3,6	;RP1=1, select bank3
  2961  01E1  0096               	movwf	(_ePacket^(0+384)+6)
  2962                           
  2963                           ;encode_AX25.c: 45: for(UINT i=0;i<6;i++){
  2964  01E2  01FB               	clrf	Packetmaker@i_131
  2965  01E3  01FC               	clrf	Packetmaker@i_131+1
  2966  01E4  3000               	movlw	0
  2967  01E5  027C               	subwf	Packetmaker@i_131+1,w
  2968  01E6  3006               	movlw	6
  2969  01E7  1903               	skipnz
  2970  01E8  027B               	subwf	Packetmaker@i_131,w
  2971  01E9  1803               	btfsc	3,0
  2972  01EA  2A0A               	goto	i1l1237
  2973  01EB                     i1l1231:	
  2974                           
  2975                           ;encode_AX25.c: 46: ePacket[i+7] = "JQ1YCZ"[i] << 1;
  2976  01EB  087B               	movf	Packetmaker@i_131,w
  2977  01EC  3E08               	addlw	low ((STR_2-__stringbase)| (0+32768))
  2978  01ED  0084               	movwf	4
  2979  01EE  120A  118A  24D0  120A  118A  	fcall	stringdir
  2980  01F3  00F2               	movwf	??_Packetmaker
  2981  01F4  0772               	addwf	??_Packetmaker,w
  2982  01F5  00F3               	movwf	??_Packetmaker+1
  2983  01F6  087B               	movf	Packetmaker@i_131,w
  2984  01F7  3E07               	addlw	7
  2985  01F8  3E90               	addlw	(low (_ePacket| (0+256)))& (0+255)
  2986  01F9  0084               	movwf	4
  2987  01FA  0873               	movf	??_Packetmaker+1,w
  2988  01FB  1783               	bsf	3,7	;select IRP bank3
  2989  01FC  0080               	movwf	0
  2990  01FD  3001               	movlw	1
  2991  01FE  07FB               	addwf	Packetmaker@i_131,f
  2992  01FF  1803               	skipnc
  2993  0200  0AFC               	incf	Packetmaker@i_131+1,f
  2994  0201  3000               	movlw	0
  2995  0202  07FC               	addwf	Packetmaker@i_131+1,f
  2996  0203  3000               	movlw	0
  2997  0204  027C               	subwf	Packetmaker@i_131+1,w
  2998  0205  3006               	movlw	6
  2999  0206  1903               	skipnz
  3000  0207  027B               	subwf	Packetmaker@i_131,w
  3001  0208  1C03               	skipc
  3002  0209  29EB               	goto	i1l1231
  3003  020A                     i1l1237:	
  3004                           
  3005                           ;encode_AX25.c: 47: }
  3006                           ;encode_AX25.c: 48: ePacket[13] = 0xe1;
  3007  020A  30E1               	movlw	225
  3008  020B  00F2               	movwf	??_Packetmaker
  3009  020C  0872               	movf	??_Packetmaker,w
  3010  020D  1683               	bsf	3,5	;RP0=1, select bank3
  3011  020E  1703               	bsf	3,6	;RP1=1, select bank3
  3012  020F  009D               	movwf	(_ePacket^(0+384)+13)
  3013                           
  3014                           ;encode_AX25.c: 49: ePacket[14] = 0x03;
  3015  0210  3003               	movlw	3
  3016  0211  00F2               	movwf	??_Packetmaker
  3017  0212  0872               	movf	??_Packetmaker,w
  3018  0213  009E               	movwf	(_ePacket^(0+384)+14)
  3019                           
  3020                           ;encode_AX25.c: 50: ePacket[15] = 0xf0;
  3021  0214  30F0               	movlw	240
  3022  0215  00F2               	movwf	??_Packetmaker
  3023  0216  0872               	movf	??_Packetmaker,w
  3024  0217  009F               	movwf	(_ePacket^(0+384)+15)
  3025                           
  3026                           ;encode_AX25.c: 51: UINT Datanum = 0;
  3027  0218  01F7               	clrf	Packetmaker@Datanum
  3028  0219  01F8               	clrf	Packetmaker@Datanum+1
  3029                           
  3030                           ;encode_AX25.c: 52: for(Datanum=0;eDataField[Datanum] != '\0';Datanum++);
  3031  021A  01F7               	clrf	Packetmaker@Datanum
  3032  021B  01F8               	clrf	Packetmaker@Datanum+1
  3033  021C                     i1l1245:	
  3034  021C  0877               	movf	Packetmaker@Datanum,w
  3035  021D  0774               	addwf	Packetmaker@eDataField,w
  3036  021E  00F2               	movwf	??_Packetmaker
  3037  021F  0872               	movf	??_Packetmaker,w
  3038  0220  0084               	movwf	4
  3039  0221  1383               	bcf	3,7	;select IRP bank0
  3040  0222  0800               	movf	0,w
  3041  0223  1903               	btfsc	3,2
  3042  0224  2A2C               	goto	i1l1247
  3043  0225  3001               	movlw	1
  3044  0226  07F7               	addwf	Packetmaker@Datanum,f
  3045  0227  1803               	skipnc
  3046  0228  0AF8               	incf	Packetmaker@Datanum+1,f
  3047  0229  3000               	movlw	0
  3048  022A  07F8               	addwf	Packetmaker@Datanum+1,f
  3049  022B  2A1C               	goto	i1l1245
  3050  022C                     i1l1247:	
  3051                           
  3052                           ;encode_AX25.c: 53: for(UINT i=0;i<Datanum;i++){
  3053  022C  01F5               	clrf	Packetmaker@i_134
  3054  022D  01F6               	clrf	Packetmaker@i_134+1
  3055  022E                     i1l1253:	
  3056  022E  0878               	movf	Packetmaker@Datanum+1,w
  3057  022F  0276               	subwf	Packetmaker@i_134+1,w
  3058  0230  1D03               	skipz
  3059  0231  2A34               	goto	u59_25
  3060  0232  0877               	movf	Packetmaker@Datanum,w
  3061  0233  0275               	subwf	Packetmaker@i_134,w
  3062  0234                     u59_25:	
  3063  0234  1803               	btfsc	3,0
  3064  0235  2A4C               	goto	i1l1255
  3065                           
  3066                           ;encode_AX25.c: 54: ePacket[16+i] = eDataField[i];
  3067  0236  0875               	movf	Packetmaker@i_134,w
  3068  0237  0774               	addwf	Packetmaker@eDataField,w
  3069  0238  00F2               	movwf	??_Packetmaker
  3070  0239  0872               	movf	??_Packetmaker,w
  3071  023A  0084               	movwf	4
  3072  023B  1383               	bcf	3,7	;select IRP bank0
  3073  023C  0800               	movf	0,w
  3074  023D  00F3               	movwf	??_Packetmaker+1
  3075  023E  0875               	movf	Packetmaker@i_134,w
  3076  023F  3E10               	addlw	16
  3077  0240  3E90               	addlw	(low (_ePacket| (0+256)))& (0+255)
  3078  0241  0084               	movwf	4
  3079  0242  0873               	movf	??_Packetmaker+1,w
  3080  0243  1783               	bsf	3,7	;select IRP bank3
  3081  0244  0080               	movwf	0
  3082  0245  3001               	movlw	1
  3083  0246  07F5               	addwf	Packetmaker@i_134,f
  3084  0247  1803               	skipnc
  3085  0248  0AF6               	incf	Packetmaker@i_134+1,f
  3086  0249  3000               	movlw	0
  3087  024A  07F6               	addwf	Packetmaker@i_134+1,f
  3088  024B  2A2E               	goto	i1l1253
  3089  024C                     i1l1255:	
  3090                           
  3091                           ;encode_AX25.c: 55: }
  3092                           ;encode_AX25.c: 56: return 16+Datanum;
  3093  024C  0877               	movf	Packetmaker@Datanum,w
  3094  024D  3E10               	addlw	16
  3095  024E  00F0               	movwf	?_Packetmaker
  3096  024F  0878               	movf	Packetmaker@Datanum+1,w
  3097  0250  1803               	skipnc
  3098  0251  3E01               	addlw	1
  3099  0252  3E00               	addlw	0
  3100  0253  00F1               	movwf	?_Packetmaker+1
  3101  0254  0008               	return
  3102  0255                     __end_of_Packetmaker:	
  3103                           
  3104                           	psect	text12
  3105  0104                     __ptext12:	
  3106 ;; *************** function _EEPROM_Read *****************
  3107 ;; Defined at:
  3108 ;;		line 77 in file "I2C.c"
  3109 ;; Parameters:    Size  Location     Type
  3110 ;;  EEPROM_addre    1    wreg     unsigned char 
  3111 ;;  high_address    1    3[COMMON] unsigned char 
  3112 ;;  low_address     1    4[COMMON] unsigned char 
  3113 ;;  ReadData        1    5[COMMON] PTR unsigned char 
  3114 ;;		 -> InterReceiver@EEPROMCmdData(1), 
  3115 ;;  EEPROMDataLe    1    6[COMMON] PTR unsigned int 
  3116 ;;		 -> InterReceiver@EEPROMCmdDataLength(2), 
  3117 ;; Auto vars:     Size  Location     Type
  3118 ;;  EEPROM_addre    1    0[BANK0 ] unsigned char 
  3119 ;;  i               2    2[BANK0 ] unsigned int 
  3120 ;;  Address         1    4[BANK0 ] unsigned char 
  3121 ;;  ReadAddress     1    1[BANK0 ] unsigned char 
  3122 ;; Return value:  Size  Location     Type
  3123 ;;                  1    wreg      void 
  3124 ;; Registers used:
  3125 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3126 ;; Tracked objects:
  3127 ;;		On entry : 0/0
  3128 ;;		On exit  : 0/0
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3131 ;;      Params:         4       0       0       0       0
  3132 ;;      Locals:         0       5       0       0       0
  3133 ;;      Temps:          3       0       0       0       0
  3134 ;;      Totals:         7       5       0       0       0
  3135 ;;Total ram usage:       12 bytes
  3136 ;; Hardware stack levels used:    1
  3137 ;; Hardware stack levels required when called:    2
  3138 ;; This function calls:
  3139 ;;		_I2C_Master_Read
  3140 ;;		_I2C_Master_RepeatedStart
  3141 ;;		_I2C_Master_Start
  3142 ;;		_I2C_Master_Stop
  3143 ;;		_I2C_Master_Write
  3144 ;; This function is called by:
  3145 ;;		_InterReceiver
  3146 ;; This function uses a non-reentrant model
  3147 ;;
  3148                           
  3149                           
  3150                           ;psect for function _EEPROM_Read
  3151  0104                     _EEPROM_Read:	
  3152                           
  3153                           ;incstack = 0
  3154                           ; Regs used in _EEPROM_Read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3155                           ;EEPROM_Read@EEPROM_address stored from wreg
  3156  0104  1283               	bcf	3,5	;RP0=0, select bank0
  3157  0105  1303               	bcf	3,6	;RP1=0, select bank0
  3158  0106  00A0               	movwf	EEPROM_Read@EEPROM_address
  3159                           
  3160                           ;I2C.c: 78: UBYTE Address = EEPROM_address << 1;
  3161  0107  0820               	movf	EEPROM_Read@EEPROM_address,w
  3162  0108  00F7               	movwf	??_EEPROM_Read
  3163  0109  0777               	addwf	??_EEPROM_Read,w
  3164  010A  00F8               	movwf	??_EEPROM_Read+1
  3165  010B  0878               	movf	??_EEPROM_Read+1,w
  3166  010C  00A4               	movwf	EEPROM_Read@Address
  3167                           
  3168                           ;I2C.c: 79: UBYTE ReadAddress = Address | 0x01;
  3169  010D  0824               	movf	EEPROM_Read@Address,w
  3170  010E  3801               	iorlw	1
  3171  010F  00F7               	movwf	??_EEPROM_Read
  3172  0110  0877               	movf	??_EEPROM_Read,w
  3173  0111  00A1               	movwf	EEPROM_Read@ReadAddress
  3174                           
  3175                           ;I2C.c: 83: I2C_Master_Start();
  3176  0112  120A  118A  2536  120A  118A  	fcall	_I2C_Master_Start
  3177                           
  3178                           ;I2C.c: 84: I2C_Master_Write(Address);
  3179  0117  1283               	bcf	3,5	;RP0=0, select bank0
  3180  0118  1303               	bcf	3,6	;RP1=0, select bank0
  3181  0119  0824               	movf	EEPROM_Read@Address,w
  3182  011A  00F7               	movwf	??_EEPROM_Read
  3183  011B  01F8               	clrf	??_EEPROM_Read+1
  3184  011C  0877               	movf	??_EEPROM_Read,w
  3185  011D  00F0               	movwf	I2C_Master_Write@d
  3186  011E  0878               	movf	??_EEPROM_Read+1,w
  3187  011F  00F1               	movwf	I2C_Master_Write@d+1
  3188  0120  120A  118A  2527  120A  118A  	fcall	_I2C_Master_Write
  3189                           
  3190                           ;I2C.c: 85: I2C_Master_Write(high_address);
  3191  0125  0873               	movf	EEPROM_Read@high_address,w
  3192  0126  00F7               	movwf	??_EEPROM_Read
  3193  0127  01F8               	clrf	??_EEPROM_Read+1
  3194  0128  0877               	movf	??_EEPROM_Read,w
  3195  0129  00F0               	movwf	I2C_Master_Write@d
  3196  012A  0878               	movf	??_EEPROM_Read+1,w
  3197  012B  00F1               	movwf	I2C_Master_Write@d+1
  3198  012C  120A  118A  2527  120A  118A  	fcall	_I2C_Master_Write
  3199                           
  3200                           ;I2C.c: 86: I2C_Master_Write(low_address);
  3201  0131  0874               	movf	EEPROM_Read@low_address,w
  3202  0132  00F7               	movwf	??_EEPROM_Read
  3203  0133  01F8               	clrf	??_EEPROM_Read+1
  3204  0134  0877               	movf	??_EEPROM_Read,w
  3205  0135  00F0               	movwf	I2C_Master_Write@d
  3206  0136  0878               	movf	??_EEPROM_Read+1,w
  3207  0137  00F1               	movwf	I2C_Master_Write@d+1
  3208  0138  120A  118A  2527  120A  118A  	fcall	_I2C_Master_Write
  3209                           
  3210                           ;I2C.c: 87: I2C_Master_RepeatedStart();
  3211  013D  120A  118A  253D  120A  118A  	fcall	_I2C_Master_RepeatedStart
  3212                           
  3213                           ;I2C.c: 90: I2C_Master_Write(ReadAddress);
  3214  0142  1283               	bcf	3,5	;RP0=0, select bank0
  3215  0143  1303               	bcf	3,6	;RP1=0, select bank0
  3216  0144  0821               	movf	EEPROM_Read@ReadAddress,w
  3217  0145  00F7               	movwf	??_EEPROM_Read
  3218  0146  01F8               	clrf	??_EEPROM_Read+1
  3219  0147  0877               	movf	??_EEPROM_Read,w
  3220  0148  00F0               	movwf	I2C_Master_Write@d
  3221  0149  0878               	movf	??_EEPROM_Read+1,w
  3222  014A  00F1               	movwf	I2C_Master_Write@d+1
  3223  014B  120A  118A  2527  120A  118A  	fcall	_I2C_Master_Write
  3224                           
  3225                           ;I2C.c: 92: for (*EEPROMDataLength = 0; ReadData[*EEPROMDataLength]!= 0x00; *EEPROMDataL
      +                          ength++);
  3226  0150  0876               	movf	EEPROM_Read@EEPROMDataLength,w
  3227  0151  0084               	movwf	4
  3228  0152  1383               	bcf	3,7	;select IRP bank0
  3229  0153  0180               	clrf	0
  3230  0154  0A84               	incf	4,f
  3231  0155  0180               	clrf	0
  3232  0156                     i1l1409:	
  3233  0156  0876               	movf	EEPROM_Read@EEPROMDataLength,w
  3234  0157  0084               	movwf	4
  3235  0158  0800               	movf	0,w
  3236  0159  0775               	addwf	EEPROM_Read@ReadData,w
  3237  015A  00F7               	movwf	??_EEPROM_Read
  3238  015B  0877               	movf	??_EEPROM_Read,w
  3239  015C  0084               	movwf	4
  3240  015D  0800               	movf	0,w
  3241  015E  1903               	btfsc	3,2
  3242  015F  2965               	goto	i1l1411
  3243  0160  3002               	movlw	2
  3244  0161  00F7               	movwf	??_EEPROM_Read
  3245  0162  0877               	movf	??_EEPROM_Read,w
  3246  0163  07F6               	addwf	EEPROM_Read@EEPROMDataLength,f
  3247  0164  2956               	goto	i1l1409
  3248  0165                     i1l1411:	
  3249                           
  3250                           ;I2C.c: 95: for(UINT i = 0; i < *EEPROMDataLength; i++){
  3251  0165  1283               	bcf	3,5	;RP0=0, select bank0
  3252  0166  1303               	bcf	3,6	;RP1=0, select bank0
  3253  0167  01A2               	clrf	EEPROM_Read@i
  3254  0168  01A3               	clrf	EEPROM_Read@i+1
  3255  0169                     i1l1417:	
  3256  0169  0876               	movf	EEPROM_Read@EEPROMDataLength,w
  3257  016A  0084               	movwf	4
  3258  016B  0800               	movf	0,w
  3259  016C  00F7               	movwf	??_EEPROM_Read
  3260  016D  0A84               	incf	4,f
  3261  016E  0800               	movf	0,w
  3262  016F  00F8               	movwf	??_EEPROM_Read+1
  3263  0170  0878               	movf	??_EEPROM_Read+1,w
  3264  0171  0223               	subwf	EEPROM_Read@i+1,w
  3265  0172  1D03               	skipz
  3266  0173  2976               	goto	u80_25
  3267  0174  0877               	movf	??_EEPROM_Read,w
  3268  0175  0222               	subwf	EEPROM_Read@i,w
  3269  0176                     u80_25:	
  3270  0176  1803               	btfsc	3,0
  3271  0177  2990               	goto	i1l1419
  3272                           
  3273                           ;I2C.c: 99: ReadData[i] = I2C_Master_Read(1);
  3274  0178  3001               	movlw	1
  3275  0179  120A  118A  243D  120A  118A  	fcall	_I2C_Master_Read
  3276  017E  00F7               	movwf	??_EEPROM_Read
  3277  017F  1283               	bcf	3,5	;RP0=0, select bank0
  3278  0180  1303               	bcf	3,6	;RP1=0, select bank0
  3279  0181  0822               	movf	EEPROM_Read@i,w
  3280  0182  0775               	addwf	EEPROM_Read@ReadData,w
  3281  0183  00F8               	movwf	??_EEPROM_Read+1
  3282  0184  0878               	movf	??_EEPROM_Read+1,w
  3283  0185  0084               	movwf	4
  3284  0186  0877               	movf	??_EEPROM_Read,w
  3285  0187  1383               	bcf	3,7	;select IRP bank0
  3286  0188  0080               	movwf	0
  3287  0189  3001               	movlw	1
  3288  018A  07A2               	addwf	EEPROM_Read@i,f
  3289  018B  1803               	skipnc
  3290  018C  0AA3               	incf	EEPROM_Read@i+1,f
  3291  018D  3000               	movlw	0
  3292  018E  07A3               	addwf	EEPROM_Read@i+1,f
  3293  018F  2969               	goto	i1l1417
  3294  0190                     i1l1419:	
  3295                           
  3296                           ;I2C.c: 101: }
  3297                           ;I2C.c: 102: ReadData[*EEPROMDataLength] = I2C_Master_Read(0);
  3298  0190  3000               	movlw	0
  3299  0191  120A  118A  243D  120A  118A  	fcall	_I2C_Master_Read
  3300  0196  00F7               	movwf	??_EEPROM_Read
  3301  0197  0876               	movf	EEPROM_Read@EEPROMDataLength,w
  3302  0198  0084               	movwf	4
  3303  0199  1383               	bcf	3,7	;select IRP bank0
  3304  019A  0800               	movf	0,w
  3305  019B  0775               	addwf	EEPROM_Read@ReadData,w
  3306  019C  00F8               	movwf	??_EEPROM_Read+1
  3307  019D  0878               	movf	??_EEPROM_Read+1,w
  3308  019E  0084               	movwf	4
  3309  019F  0877               	movf	??_EEPROM_Read,w
  3310  01A0  0080               	movwf	0
  3311                           
  3312                           ;I2C.c: 104: I2C_Master_Stop();
  3313  01A1  120A  118A  252F  120A  118A  	fcall	_I2C_Master_Stop
  3314                           
  3315                           ;I2C.c: 113: _delay((unsigned long)((200)*(10000000/4000.0)));
  3316  01A6  3003               	movlw	3
  3317  01A7  00F9               	movwf	??_EEPROM_Read+2
  3318  01A8  308A               	movlw	138
  3319  01A9  00F8               	movwf	??_EEPROM_Read+1
  3320  01AA  3055               	movlw	85
  3321  01AB  00F7               	movwf	??_EEPROM_Read
  3322  01AC                     u106_27:	
  3323  01AC  0BF7               	decfsz	??_EEPROM_Read,f
  3324  01AD  29AC               	goto	u106_27
  3325  01AE  0BF8               	decfsz	??_EEPROM_Read+1,f
  3326  01AF  29AC               	goto	u106_27
  3327  01B0  0BF9               	decfsz	??_EEPROM_Read+2,f
  3328  01B1  29AC               	goto	u106_27
  3329  01B2  29B3               	nop2
  3330  01B3  0008               	return
  3331  01B4                     __end_of_EEPROM_Read:	
  3332                           
  3333                           	psect	text13
  3334  0527                     __ptext13:	
  3335 ;; *************** function _I2C_Master_Write *****************
  3336 ;; Defined at:
  3337 ;;		line 37 in file "I2C.c"
  3338 ;; Parameters:    Size  Location     Type
  3339 ;;  d               2    0[COMMON] unsigned int 
  3340 ;; Auto vars:     Size  Location     Type
  3341 ;;		None
  3342 ;; Return value:  Size  Location     Type
  3343 ;;                  1    wreg      void 
  3344 ;; Registers used:
  3345 ;;		wreg, status,2, status,0, pclath, cstack
  3346 ;; Tracked objects:
  3347 ;;		On entry : 0/0
  3348 ;;		On exit  : 0/0
  3349 ;;		Unchanged: 0/0
  3350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3351 ;;      Params:         2       0       0       0       0
  3352 ;;      Locals:         0       0       0       0       0
  3353 ;;      Temps:          0       0       0       0       0
  3354 ;;      Totals:         2       0       0       0       0
  3355 ;;Total ram usage:        2 bytes
  3356 ;; Hardware stack levels used:    1
  3357 ;; Hardware stack levels required when called:    1
  3358 ;; This function calls:
  3359 ;;		_I2C_Master_Wait
  3360 ;; This function is called by:
  3361 ;;		_EEPROM_Read
  3362 ;;		_EEPROM_Write
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           
  3366                           
  3367                           ;psect for function _I2C_Master_Write
  3368  0527                     _I2C_Master_Write:	
  3369                           
  3370                           ;I2C.c: 38: I2C_Master_Wait();
  3371                           
  3372                           ;incstack = 0
  3373                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3374  0527  120A  118A  2516   	fcall	_I2C_Master_Wait
  3375                           
  3376                           ;I2C.c: 39: SSPBUF = d;
  3377  052A  0870               	movf	I2C_Master_Write@d,w
  3378  052B  1283               	bcf	3,5	;RP0=0, select bank0
  3379  052C  1303               	bcf	3,6	;RP1=0, select bank0
  3380  052D  0093               	movwf	19	;volatile
  3381  052E  0008               	return
  3382  052F                     __end_of_I2C_Master_Write:	
  3383                           
  3384                           	psect	text14
  3385  052F                     __ptext14:	
  3386 ;; *************** function _I2C_Master_Stop *****************
  3387 ;; Defined at:
  3388 ;;		line 32 in file "I2C.c"
  3389 ;; Parameters:    Size  Location     Type
  3390 ;;		None
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;		None
  3393 ;; Return value:  Size  Location     Type
  3394 ;;                  1    wreg      void 
  3395 ;; Registers used:
  3396 ;;		wreg, status,2, status,0, pclath, cstack
  3397 ;; Tracked objects:
  3398 ;;		On entry : 0/0
  3399 ;;		On exit  : 0/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3402 ;;      Params:         0       0       0       0       0
  3403 ;;      Locals:         0       0       0       0       0
  3404 ;;      Temps:          0       0       0       0       0
  3405 ;;      Totals:         0       0       0       0       0
  3406 ;;Total ram usage:        0 bytes
  3407 ;; Hardware stack levels used:    1
  3408 ;; Hardware stack levels required when called:    1
  3409 ;; This function calls:
  3410 ;;		_I2C_Master_Wait
  3411 ;; This function is called by:
  3412 ;;		_EEPROM_Read
  3413 ;;		_EEPROM_Write
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417                           
  3418                           ;psect for function _I2C_Master_Stop
  3419  052F                     _I2C_Master_Stop:	
  3420                           
  3421                           ;I2C.c: 33: I2C_Master_Wait();
  3422                           
  3423                           ;incstack = 0
  3424                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3425  052F  120A  118A  2516   	fcall	_I2C_Master_Wait
  3426                           
  3427                           ;I2C.c: 34: PEN = 1;
  3428  0532  1683               	bsf	3,5	;RP0=1, select bank1
  3429  0533  1303               	bcf	3,6	;RP1=0, select bank1
  3430  0534  1511               	bsf	17,2	;volatile
  3431  0535  0008               	return
  3432  0536                     __end_of_I2C_Master_Stop:	
  3433                           
  3434                           	psect	text15
  3435  0536                     __ptext15:	
  3436 ;; *************** function _I2C_Master_Start *****************
  3437 ;; Defined at:
  3438 ;;		line 22 in file "I2C.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;		None
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;		None
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  1    wreg      void 
  3445 ;; Registers used:
  3446 ;;		wreg, status,2, status,0, pclath, cstack
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3452 ;;      Params:         0       0       0       0       0
  3453 ;;      Locals:         0       0       0       0       0
  3454 ;;      Temps:          0       0       0       0       0
  3455 ;;      Totals:         0       0       0       0       0
  3456 ;;Total ram usage:        0 bytes
  3457 ;; Hardware stack levels used:    1
  3458 ;; Hardware stack levels required when called:    1
  3459 ;; This function calls:
  3460 ;;		_I2C_Master_Wait
  3461 ;; This function is called by:
  3462 ;;		_EEPROM_Read
  3463 ;;		_EEPROM_Write
  3464 ;; This function uses a non-reentrant model
  3465 ;;
  3466                           
  3467                           
  3468                           ;psect for function _I2C_Master_Start
  3469  0536                     _I2C_Master_Start:	
  3470                           
  3471                           ;I2C.c: 23: I2C_Master_Wait();
  3472                           
  3473                           ;incstack = 0
  3474                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3475  0536  120A  118A  2516   	fcall	_I2C_Master_Wait
  3476                           
  3477                           ;I2C.c: 24: SEN = 1;
  3478  0539  1683               	bsf	3,5	;RP0=1, select bank1
  3479  053A  1303               	bcf	3,6	;RP1=0, select bank1
  3480  053B  1411               	bsf	17,0	;volatile
  3481  053C  0008               	return
  3482  053D                     __end_of_I2C_Master_Start:	
  3483                           
  3484                           	psect	text16
  3485  053D                     __ptext16:	
  3486 ;; *************** function _I2C_Master_RepeatedStart *****************
  3487 ;; Defined at:
  3488 ;;		line 27 in file "I2C.c"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;		None
  3491 ;; Auto vars:     Size  Location     Type
  3492 ;;		None
  3493 ;; Return value:  Size  Location     Type
  3494 ;;                  1    wreg      void 
  3495 ;; Registers used:
  3496 ;;		wreg, status,2, status,0, pclath, cstack
  3497 ;; Tracked objects:
  3498 ;;		On entry : 0/0
  3499 ;;		On exit  : 0/0
  3500 ;;		Unchanged: 0/0
  3501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3502 ;;      Params:         0       0       0       0       0
  3503 ;;      Locals:         0       0       0       0       0
  3504 ;;      Temps:          0       0       0       0       0
  3505 ;;      Totals:         0       0       0       0       0
  3506 ;;Total ram usage:        0 bytes
  3507 ;; Hardware stack levels used:    1
  3508 ;; Hardware stack levels required when called:    1
  3509 ;; This function calls:
  3510 ;;		_I2C_Master_Wait
  3511 ;; This function is called by:
  3512 ;;		_EEPROM_Read
  3513 ;; This function uses a non-reentrant model
  3514 ;;
  3515                           
  3516                           
  3517                           ;psect for function _I2C_Master_RepeatedStart
  3518  053D                     _I2C_Master_RepeatedStart:	
  3519                           
  3520                           ;I2C.c: 28: I2C_Master_Wait();
  3521                           
  3522                           ;incstack = 0
  3523                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3524  053D  120A  118A  2516   	fcall	_I2C_Master_Wait
  3525                           
  3526                           ;I2C.c: 29: RSEN = 1;
  3527  0540  1683               	bsf	3,5	;RP0=1, select bank1
  3528  0541  1303               	bcf	3,6	;RP1=0, select bank1
  3529  0542  1491               	bsf	17,1	;volatile
  3530  0543  0008               	return
  3531  0544                     __end_of_I2C_Master_RepeatedStart:	
  3532                           
  3533                           	psect	text17
  3534  043D                     __ptext17:	
  3535 ;; *************** function _I2C_Master_Read *****************
  3536 ;; Defined at:
  3537 ;;		line 42 in file "I2C.c"
  3538 ;; Parameters:    Size  Location     Type
  3539 ;;  a               1    wreg     unsigned char 
  3540 ;; Auto vars:     Size  Location     Type
  3541 ;;  a               1    1[COMMON] unsigned char 
  3542 ;;  temp            1    2[COMMON] unsigned char 
  3543 ;; Return value:  Size  Location     Type
  3544 ;;                  1    wreg      unsigned char 
  3545 ;; Registers used:
  3546 ;;		wreg, status,2, status,0, pclath, cstack
  3547 ;; Tracked objects:
  3548 ;;		On entry : 0/0
  3549 ;;		On exit  : 0/0
  3550 ;;		Unchanged: 0/0
  3551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3552 ;;      Params:         0       0       0       0       0
  3553 ;;      Locals:         2       0       0       0       0
  3554 ;;      Temps:          1       0       0       0       0
  3555 ;;      Totals:         3       0       0       0       0
  3556 ;;Total ram usage:        3 bytes
  3557 ;; Hardware stack levels used:    1
  3558 ;; Hardware stack levels required when called:    1
  3559 ;; This function calls:
  3560 ;;		_I2C_Master_Wait
  3561 ;; This function is called by:
  3562 ;;		_EEPROM_Read
  3563 ;; This function uses a non-reentrant model
  3564 ;;
  3565                           
  3566                           
  3567                           ;psect for function _I2C_Master_Read
  3568  043D                     _I2C_Master_Read:	
  3569                           
  3570                           ;incstack = 0
  3571                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3572                           ;I2C_Master_Read@a stored from wreg
  3573  043D  00F1               	movwf	I2C_Master_Read@a
  3574                           
  3575                           ;I2C.c: 43: unsigned char temp;
  3576                           ;I2C.c: 45: I2C_Master_Wait();
  3577  043E  120A  118A  2516  120A  118A  	fcall	_I2C_Master_Wait
  3578                           
  3579                           ;I2C.c: 46: RCEN = 1;
  3580  0443  1683               	bsf	3,5	;RP0=1, select bank1
  3581  0444  1303               	bcf	3,6	;RP1=0, select bank1
  3582  0445  1591               	bsf	17,3	;volatile
  3583                           
  3584                           ;I2C.c: 47: I2C_Master_Wait();
  3585  0446  120A  118A  2516  120A  118A  	fcall	_I2C_Master_Wait
  3586                           
  3587                           ;I2C.c: 48: temp = SSPBUF;
  3588  044B  1283               	bcf	3,5	;RP0=0, select bank0
  3589  044C  1303               	bcf	3,6	;RP1=0, select bank0
  3590  044D  0813               	movf	19,w	;volatile
  3591  044E  00F0               	movwf	??_I2C_Master_Read
  3592  044F  0870               	movf	??_I2C_Master_Read,w
  3593  0450  00F2               	movwf	I2C_Master_Read@temp
  3594                           
  3595                           ;I2C.c: 50: I2C_Master_Wait();
  3596  0451  120A  118A  2516  120A  118A  	fcall	_I2C_Master_Wait
  3597                           
  3598                           ;I2C.c: 51: ACKDT = (a)?0:1;
  3599  0456  0871               	movf	I2C_Master_Read@a,w
  3600  0457  1D03               	btfss	3,2
  3601  0458  2C5D               	goto	u67_20
  3602  0459  1683               	bsf	3,5	;RP0=1, select bank1
  3603  045A  1303               	bcf	3,6	;RP1=0, select bank1
  3604  045B  1691               	bsf	17,5	;volatile
  3605  045C  2C60               	goto	i1l1321
  3606  045D                     u67_20:	
  3607  045D  1683               	bsf	3,5	;RP0=1, select bank1
  3608  045E  1303               	bcf	3,6	;RP1=0, select bank1
  3609  045F  1291               	bcf	17,5	;volatile
  3610  0460                     i1l1321:	
  3611                           
  3612                           ;I2C.c: 52: ACKEN = 1;
  3613  0460  1611               	bsf	17,4	;volatile
  3614                           
  3615                           ;I2C.c: 53: return temp;
  3616  0461  0872               	movf	I2C_Master_Read@temp,w
  3617  0462  0008               	return
  3618  0463                     __end_of_I2C_Master_Read:	
  3619                           
  3620                           	psect	text18
  3621  0516                     __ptext18:	
  3622 ;; *************** function _I2C_Master_Wait *****************
  3623 ;; Defined at:
  3624 ;;		line 18 in file "I2C.c"
  3625 ;; Parameters:    Size  Location     Type
  3626 ;;		None
  3627 ;; Auto vars:     Size  Location     Type
  3628 ;;		None
  3629 ;; Return value:  Size  Location     Type
  3630 ;;                  1    wreg      void 
  3631 ;; Registers used:
  3632 ;;		wreg, status,2
  3633 ;; Tracked objects:
  3634 ;;		On entry : 0/0
  3635 ;;		On exit  : 0/0
  3636 ;;		Unchanged: 0/0
  3637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3638 ;;      Params:         0       0       0       0       0
  3639 ;;      Locals:         0       0       0       0       0
  3640 ;;      Temps:          0       0       0       0       0
  3641 ;;      Totals:         0       0       0       0       0
  3642 ;;Total ram usage:        0 bytes
  3643 ;; Hardware stack levels used:    1
  3644 ;; This function calls:
  3645 ;;		Nothing
  3646 ;; This function is called by:
  3647 ;;		_I2C_Master_Start
  3648 ;;		_I2C_Master_RepeatedStart
  3649 ;;		_I2C_Master_Stop
  3650 ;;		_I2C_Master_Write
  3651 ;;		_I2C_Master_Read
  3652 ;; This function uses a non-reentrant model
  3653 ;;
  3654                           
  3655                           
  3656                           ;psect for function _I2C_Master_Wait
  3657  0516                     _I2C_Master_Wait:	
  3658  0516                     i1l264:	
  3659                           ;I2C.c: 19: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3660                           
  3661                           ;incstack = 0
  3662                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3663                           
  3664  0516  1683               	bsf	3,5	;RP0=1, select bank1
  3665  0517  1303               	bcf	3,6	;RP1=0, select bank1
  3666  0518  1914               	btfsc	20,2	;volatile
  3667  0519  2D16               	goto	i1l264
  3668  051A  0811               	movf	17,w	;volatile
  3669  051B  391F               	andlw	31
  3670  051C  1903               	btfsc	3,2
  3671  051D  0008               	return
  3672  051E  2D16               	goto	i1l264
  3673  051F                     __end_of_I2C_Master_Wait:	
  3674  007E                     btemp	set	126	;btemp
  3675  007E                     wtemp0	set	126


Data Sizes:
    Strings     14
    Constant    0
    Data        36
    BSS         76
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     57      73
    BANK1            80     25      71
    BANK3            96      0      50
    BANK2            96      0       0

Pointer List with Targets:

    EEPROM_Read@ReadData	PTR unsigned char  size(1) Largest target is 1
		 -> InterReceiver@EEPROMCmdData(BANK0[1]), 

    EEPROM_Read@EEPROMDataLength	PTR unsigned int  size(1) Largest target is 2
		 -> InterReceiver@EEPROMCmdDataLength(BANK0[2]), 

    SendPacket@eDataField	PTR unsigned char  size(1) Largest target is 1
		 -> InterReceiver@EEPROMCmdData(BANK0[1]), 

    Packetmaker@eDataField	PTR unsigned char  size(1) Largest target is 1
		 -> InterReceiver@EEPROMCmdData(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _InterReceiver in COMMON

    _SendPacket->_Packetmaker
    _SendByte->_fcsbit
    _EEPROM_Read->_I2C_Master_Read

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterReceiver in BANK0

    _InterReceiver->_SendPacket

Critical Paths under _main in BANK1

    _main->_Init_I2C_M
    _Init_I2C_M->___lldiv

Critical Paths under _InterReceiver in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterReceiver in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterReceiver in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                39    39      0     343
                                             22 BANK1      3     3      0
                         _Init_I2C_M
                           _Init_MPU
                        _Init_SERIAL
 ---------------------------------------------------------------------------------
 (1) _Init_SERIAL                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_MPU                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_I2C_M                                           8     4      4     343
                                             14 BANK1      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     268
                                              0 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _InterReceiver                                       45    45      0    2089
                                             12 BANK0     45    45      0
                        _EEPROM_Read
                         _SendPacket
                              _getch
 ---------------------------------------------------------------------------------
 (4) _getch                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _SendPacket                                          12    12      0     757
                                              0 BANK0     12    12      0
                        _Packetmaker
                           _SendByte
 ---------------------------------------------------------------------------------
 (5) _SendByte                                             6     6      0     158
                                              3 COMMON     6     6      0
                             _fcsbit
                            _flipout
 ---------------------------------------------------------------------------------
 (6) _flipout                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _fcsbit                                               3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (6) _Packetmaker                                         13    11      2     388
                                              0 COMMON    13    11      2
 ---------------------------------------------------------------------------------
 (4) _EEPROM_Read                                         12     8      4    1091
                                              3 COMMON     7     3      4
                                              0 BANK0      5     5      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     2     0      2     499
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Read                                      3     3      0      45
                                              0 COMMON     3     3      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_I2C_M
     ___lldiv
   _Init_MPU
   _Init_SERIAL

 _InterReceiver (ROOT)
   _EEPROM_Read
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _SendPacket
     _Packetmaker
     _SendByte
       _fcsbit
       _flipout
   _getch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      32       9       52.1%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     19      47       7       88.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     39      49       5       91.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      CF      12        0.0%
ABS                  0      0      CF       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Feb 22 14:51:34 2018

                                pc 0002                        __CFG_CP$OFF 0000  
                               fsr 0004                                _GIE 005F  
                              _RB1 0031                                _RC0 0038  
                              _RB3 0033                                _RC2 003A  
                              _RC5 003D                                _PEN 048A  
                     __CFG_CPD$OFF 0000                                u705 0369  
                              _SEN 0488                                u725 0377  
                              u735 038C                                u745 039E  
                              u865 041B                                _RX9 00C6  
                              u957 02F2                                u967 0347  
                              u977 031D                                _TX9 04C6  
                              u987 032B                                u997 0339  
                              fsr0 0004                                indf 0000  
                     __CFG_FOSC$HS 0000                       __CFG_LVP$OFF 0000  
                  SendPacket@i_140 0028                    SendPacket@i_141 002A  
                             l1333 0365                               l1343 039D  
                             l1335 0375                               l1347 03AA  
                             l1555 033F                               l1559 0313  
                             STR_1 04D6                               STR_2 04DD  
                             _BRGH 04C2                               _CREN 00C4  
                             _FERR 00C2                               _PEIE 005E  
                             _RCIE 0465                               _RCEN 048B  
                             _RCIF 0065                               i1l74 050D  
                             i1l90 02DE                               i1l75 0512  
                             i1l92 02D9                               i1l94 02DF  
                             _OERR 00C1                               _SPEN 00C7  
                             _RSEN 0489                               _SREN 00C5  
                             _TXIE 0464                               _TXEN 04C5  
                             _TXIF 0064                               _SYNC 04C4  
                     __CFG_WRT$OFF 0000   __end_of_I2C_Master_RepeatedStart 0544  
                             _main 02EA                      ??_Init_SERIAL 00BE  
                             btemp 007E                      ??_Packetmaker 0072  
                      Init_I2C_M@c 00CC                               start 0012  
                    __CFG_IESO$OFF 0000                      __CFG_MCLRE$ON 0000  
 InterReceiver@EEPROMCmdDataLength 0054                   ?_I2C_Master_Read 0070  
                 ?_I2C_Master_Wait 0070         InterReceiver@EEPROMCmdData 0058  
                 ?_I2C_Master_Stop 0070                              ?_main 0070  
                            _ACKEN 048C                              _ACKDT 048D  
                    __CFG_WDTE$OFF 0000                              _ANSEL 0188  
                  __end_of___lldiv 03B3                              i1l190 04F2  
                            i1l264 0516                              _RCREG 001A  
                            _SPBRG 0099                              _PORTA 0005  
                            _PORTB 0006                              _PORTC 0007  
                            _PORTE 0009                              u80_25 0176  
                            _TRISA 0085                              _TRISB 0086  
                            _TRISC 0087                              _TRISE 0089  
                            u90_25 02D7                              u67_20 045D  
                            u59_25 0234                              u83_25 00A6  
                            _TXREG 0019                              u89_25 02B0  
                    __CFG_PWRTE$ON 0000                     __CFG_FCMEN$OFF 0000  
                  __end_of_flipout 04F6                              _eflag 005F  
                            _getch 0507                     __CFG_BOREN$OFF 0000  
                            pclath 000A                              status 0003  
                            wtemp0 007E             __size_of_InterReceiver 0095  
                       _Init_I2C_M 040B                         SendByte@bt 0078  
          EEPROM_Read@high_address 0073               __size_of_EEPROM_Read 00B0  
                  __initialization 0015                       __end_of_main 0353  
              __end_of_Init_SERIAL 049C                   __end_of_Init_MPU 04B6  
              __end_of_Packetmaker 0255                             ??_main 00D4  
                 __end_of_SendByte 040B                  ?_I2C_Master_Start 0070  
                ?_I2C_Master_Write 0070              Packetmaker@eDataField 0074  
               ??_I2C_Master_Start 0070                         _SendPacket 004C  
                           ?_getch 0070                 ??_I2C_Master_Write 0072  
                           _ANSELH 0189                       Packetmaker@i 0079  
                           u100_27 0283                             u101_27 02C0  
                           i1l1231 01EB                             i1l1223 01DC  
                           u102_27 0057                             i1l1321 0460  
                           i1l1217 01BE                             i1l1411 0165  
                           i1l1253 022E                             i1l1245 021C  
                           i1l1237 020A                             i1l1255 024C  
                           i1l1247 022C                             u103_27 00FD  
                           i1l1417 0169                             i1l1409 0156  
                           i1l1273 03D2                             i1l1419 0190  
                           i1l1461 00BB                             i1l1453 009C  
                           u104_27 03EA                             i1l1287 03F4  
                           i1l1447 0087                             i1l1459 00A0  
                           i1l1539 02B2                             i1l1485 00F5  
                           u105_27 03F8                             i1l1479 00E0  
                           u106_27 01AC                             _SSPADD 0093  
                           _STATUS 0003                             _SSPCON 0014  
                           _SSPBUF 0013           _I2C_Master_RepeatedStart 053D  
                        ??___lldiv 00C6                             _efcshi 0061  
                           _efcslo 0062                             _fcsbit 04B6  
                           _estuff 005B                      _InterReceiver 0255  
                        ??_flipout 0070                             saved_w 007E  
           EEPROM_Read@low_address 0074            __end_of__initialization 0048  
                      SendPacket@i 0026                        ?_Init_I2C_M 00CC  
                      _Init_SERIAL 0481                 Packetmaker@Datanum 0077  
                      _Packetmaker 01B4                     __pcstackCOMMON 0070  
                     __pidataBANK0 0544                       __pidataBANK1 0463  
                    __end_of_getch 0516                     ?_InterReceiver 0070  
                      ?_SendPacket 0070                            ??_getch 0070  
                       __pbssBANK0 0059                         __pbssBANK1 00D7  
                       __pbssBANK3 0190                          ?_Init_MPU 0070  
                        ?_SendByte 0070                         __pmaintext 02EA  
                       _ebitstatus 0059                         __pintentry 0004  
                          ?_fcsbit 0070               SendPacket@eDataField 0025  
              __size_of_Init_I2C_M 0032                            _SSPCON2 0091  
                          _SSPSTAT 0094                         __stringtab 04D0  
                       ??_Init_MPU 00BE                         ??_SendByte 0073  
                          _ePacket 0190                            ___lldiv 0353  
              __size_of_SendPacket 00B8                    ??_InterReceiver 002C  
                  __size_of_fcsbit 001A                            __ptext1 0481  
                          __ptext2 049C                            __ptext3 040B  
                          __ptext4 0353                            __ptext5 0255  
                          __ptext6 0507                            __ptext7 004C  
                          __ptext8 03B3                            __ptext9 04E4  
                   InterReceiver@i 0056                            _flipout 04E4  
         __size_of_I2C_Master_Read 0026           __size_of_I2C_Master_Wait 0009  
         __size_of_I2C_Master_Stop 0007                            clrloop0 0520  
             end_of_initialization 0048                          _FMRX_Nref 0063  
                        _FMRX_Nprg 00A0         ??_I2C_Master_RepeatedStart 0070  
                        _FMTX_Nref 0067                          _FMTX_Nprg 00B4  
                    ??_EEPROM_Read 0077                          _CWTX_Nref 0065  
                        _CWTX_Nprg 00AA          __size_of_I2C_Master_Start 0007  
        __size_of_I2C_Master_Write 0008                    ___lldiv@divisor 00BE  
                  ___lldiv@counter 00CB                   I2C_Master_Read@a 0071  
              InterReceiver@RXDATA 0034                       SendByte@byte 0077  
                     ??_Init_I2C_M 00D0                       ?_Init_SERIAL 0070  
                     ?_Packetmaker 0070          EEPROM_Read@EEPROM_address 0020  
              __end_of_EEPROM_Read 01B4                     __end_of_fcsbit 04D0  
              start_initialization 0015                          SendByte@i 0075  
               __end_of_Init_I2C_M 043D                       ??_SendPacket 0020  
                ??_I2C_Master_Read 0070                  ??_I2C_Master_Wait 0070  
                ??_I2C_Master_Stop 0070                  __size_of_Init_MPU 001A  
           EEPROM_Read@ReadAddress 0021                  __size_of_SendByte 0058  
                       init_fetch0 04F6                           ??_fcsbit 0070  
                      __pdataBANK0 0063                        __pdataBANK1 00A0  
               __end_of_SendPacket 0104                          ___latbits 0002  
                    __pcstackBANK0 0020                      __pcstackBANK1 00BE  
                      _EEPROM_Read 0104                SendPacket@Packetnum 0023  
                 _I2C_Master_Start 0536                   _I2C_Master_Write 0527  
                         ?___lldiv 00BE                          __pstrings 04D0  
                         ?_flipout 0070                     __size_of_getch 000F  
                interrupt_function 0004                          clear_ram0 051F  
             __size_of_Init_SERIAL 001B               __size_of_Packetmaker 00A1  
                     EEPROM_Read@i 0022              __end_of_InterReceiver 02EA  
                      __stringbase 04D5                I2C_Master_Read@temp 0072  
                         _Init_MPU 049C                           _SendByte 03B3  
__size_of_I2C_Master_RepeatedStart 0007          ?_I2C_Master_RepeatedStart 0070  
                 __size_of___lldiv 0060                   Packetmaker@i_131 007B  
                 Packetmaker@i_134 0075                 __end_of__stringtab 04D6  
              EEPROM_Read@ReadData 0075                         _EEPROMData 00D7  
                  _I2C_Master_Read 043D                   __size_of_flipout 0012  
                  _I2C_Master_Wait 0516                    _I2C_Master_Stop 052F  
                         _efcsflag 005D                           __ptext10 04B6  
                         __ptext11 01B4                           __ptext12 0104  
                         __ptext13 0527                           __ptext14 052F  
                         __ptext15 0536                           __ptext16 053D  
                         __ptext17 043D                           __ptext18 0516  
                __CFG_BOR4V$BOR40V 0000                      __size_of_main 0069  
      EEPROM_Read@EEPROMDataLength 0076           __end_of_I2C_Master_Start 053D  
         __end_of_I2C_Master_Write 052F                 EEPROM_Read@Address 0024  
                         init_ram0 04FA                           intlevel1 0000  
                     ?_EEPROM_Read 0073                   ___lldiv@dividend 00C2  
                        stringcode 04D0            __end_of_I2C_Master_Read 0463  
          __end_of_I2C_Master_Wait 051F            __end_of_I2C_Master_Stop 0536  
                      fcsbit@tbyte 0072                   ___lldiv@quotient 00C7  
                I2C_Master_Write@d 0070                           stringdir 04D0  
                         stringtab 04D0  
