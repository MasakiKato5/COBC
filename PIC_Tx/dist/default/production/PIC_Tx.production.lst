

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Feb 22 19:55:05 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 1.45
    41                           ; Generated 16/11/2017 GMT
    42                           ; 
    43                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F886 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  008F                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  0105                     	;# 
   136  0107                     	;# 
   137  0108                     	;# 
   138  0109                     	;# 
   139  010C                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0185                     	;# 
   145  0187                     	;# 
   146  0188                     	;# 
   147  0189                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0015                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001D                     	;# 
   182  001E                     	;# 
   183  001F                     	;# 
   184  0081                     	;# 
   185  0085                     	;# 
   186  0086                     	;# 
   187  0087                     	;# 
   188  0089                     	;# 
   189  008C                     	;# 
   190  008D                     	;# 
   191  008E                     	;# 
   192  008F                     	;# 
   193  0090                     	;# 
   194  0091                     	;# 
   195  0092                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0094                     	;# 
   200  0095                     	;# 
   201  0096                     	;# 
   202  0097                     	;# 
   203  0098                     	;# 
   204  0099                     	;# 
   205  009A                     	;# 
   206  009B                     	;# 
   207  009C                     	;# 
   208  009D                     	;# 
   209  009E                     	;# 
   210  009F                     	;# 
   211  0105                     	;# 
   212  0107                     	;# 
   213  0108                     	;# 
   214  0109                     	;# 
   215  010C                     	;# 
   216  010C                     	;# 
   217  010D                     	;# 
   218  010E                     	;# 
   219  010F                     	;# 
   220  0185                     	;# 
   221  0187                     	;# 
   222  0188                     	;# 
   223  0189                     	;# 
   224  018C                     	;# 
   225  018D                     	;# 
   226  0000                     	;# 
   227  0001                     	;# 
   228  0002                     	;# 
   229  0003                     	;# 
   230  0004                     	;# 
   231  0005                     	;# 
   232  0006                     	;# 
   233  0007                     	;# 
   234  0008                     	;# 
   235  0009                     	;# 
   236  000A                     	;# 
   237  000B                     	;# 
   238  000C                     	;# 
   239  000D                     	;# 
   240  000E                     	;# 
   241  000E                     	;# 
   242  000F                     	;# 
   243  0010                     	;# 
   244  0011                     	;# 
   245  0012                     	;# 
   246  0013                     	;# 
   247  0014                     	;# 
   248  0015                     	;# 
   249  0015                     	;# 
   250  0016                     	;# 
   251  0017                     	;# 
   252  0018                     	;# 
   253  0019                     	;# 
   254  001A                     	;# 
   255  001B                     	;# 
   256  001B                     	;# 
   257  001C                     	;# 
   258  001D                     	;# 
   259  001E                     	;# 
   260  001F                     	;# 
   261  0081                     	;# 
   262  0085                     	;# 
   263  0086                     	;# 
   264  0087                     	;# 
   265  0088                     	;# 
   266  0089                     	;# 
   267  008C                     	;# 
   268  008D                     	;# 
   269  008E                     	;# 
   270  008F                     	;# 
   271  0090                     	;# 
   272  0091                     	;# 
   273  0092                     	;# 
   274  0093                     	;# 
   275  0093                     	;# 
   276  0093                     	;# 
   277  0094                     	;# 
   278  0095                     	;# 
   279  0096                     	;# 
   280  0097                     	;# 
   281  0098                     	;# 
   282  0099                     	;# 
   283  009A                     	;# 
   284  009B                     	;# 
   285  009C                     	;# 
   286  009D                     	;# 
   287  009E                     	;# 
   288  009F                     	;# 
   289  0105                     	;# 
   290  0107                     	;# 
   291  0108                     	;# 
   292  0109                     	;# 
   293  010C                     	;# 
   294  010C                     	;# 
   295  010D                     	;# 
   296  010E                     	;# 
   297  010F                     	;# 
   298  0185                     	;# 
   299  0187                     	;# 
   300  0188                     	;# 
   301  0189                     	;# 
   302  018C                     	;# 
   303  018D                     	;# 
   304  0000                     	;# 
   305  0001                     	;# 
   306  0002                     	;# 
   307  0003                     	;# 
   308  0004                     	;# 
   309  0005                     	;# 
   310  0006                     	;# 
   311  0007                     	;# 
   312  0009                     	;# 
   313  000A                     	;# 
   314  000B                     	;# 
   315  000C                     	;# 
   316  000D                     	;# 
   317  000E                     	;# 
   318  000E                     	;# 
   319  000F                     	;# 
   320  0010                     	;# 
   321  0011                     	;# 
   322  0012                     	;# 
   323  0013                     	;# 
   324  0014                     	;# 
   325  0015                     	;# 
   326  0015                     	;# 
   327  0016                     	;# 
   328  0017                     	;# 
   329  0018                     	;# 
   330  0019                     	;# 
   331  001A                     	;# 
   332  001B                     	;# 
   333  001B                     	;# 
   334  001C                     	;# 
   335  001D                     	;# 
   336  001E                     	;# 
   337  001F                     	;# 
   338  0081                     	;# 
   339  0085                     	;# 
   340  0086                     	;# 
   341  0087                     	;# 
   342  0089                     	;# 
   343  008C                     	;# 
   344  008D                     	;# 
   345  008E                     	;# 
   346  008F                     	;# 
   347  0090                     	;# 
   348  0091                     	;# 
   349  0092                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0093                     	;# 
   353  0094                     	;# 
   354  0095                     	;# 
   355  0096                     	;# 
   356  0097                     	;# 
   357  0098                     	;# 
   358  0099                     	;# 
   359  009A                     	;# 
   360  009B                     	;# 
   361  009C                     	;# 
   362  009D                     	;# 
   363  009E                     	;# 
   364  009F                     	;# 
   365  0105                     	;# 
   366  0107                     	;# 
   367  0108                     	;# 
   368  0109                     	;# 
   369  010C                     	;# 
   370  010C                     	;# 
   371  010D                     	;# 
   372  010E                     	;# 
   373  010F                     	;# 
   374  0185                     	;# 
   375  0187                     	;# 
   376  0188                     	;# 
   377  0189                     	;# 
   378  018C                     	;# 
   379  018D                     	;# 
   380  0000                     	;# 
   381  0001                     	;# 
   382  0002                     	;# 
   383  0003                     	;# 
   384  0004                     	;# 
   385  0005                     	;# 
   386  0006                     	;# 
   387  0007                     	;# 
   388  0008                     	;# 
   389  0009                     	;# 
   390  000A                     	;# 
   391  000B                     	;# 
   392  000C                     	;# 
   393  000D                     	;# 
   394  000E                     	;# 
   395  000E                     	;# 
   396  000F                     	;# 
   397  0010                     	;# 
   398  0011                     	;# 
   399  0012                     	;# 
   400  0013                     	;# 
   401  0014                     	;# 
   402  0015                     	;# 
   403  0015                     	;# 
   404  0016                     	;# 
   405  0017                     	;# 
   406  0018                     	;# 
   407  0019                     	;# 
   408  001A                     	;# 
   409  001B                     	;# 
   410  001B                     	;# 
   411  001C                     	;# 
   412  001D                     	;# 
   413  001E                     	;# 
   414  001F                     	;# 
   415  0081                     	;# 
   416  0085                     	;# 
   417  0086                     	;# 
   418  0087                     	;# 
   419  0088                     	;# 
   420  0089                     	;# 
   421  008C                     	;# 
   422  008D                     	;# 
   423  008E                     	;# 
   424  008F                     	;# 
   425  0090                     	;# 
   426  0091                     	;# 
   427  0092                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0093                     	;# 
   431  0094                     	;# 
   432  0095                     	;# 
   433  0096                     	;# 
   434  0097                     	;# 
   435  0098                     	;# 
   436  0099                     	;# 
   437  009A                     	;# 
   438  009B                     	;# 
   439  009C                     	;# 
   440  009D                     	;# 
   441  009E                     	;# 
   442  009F                     	;# 
   443  0105                     	;# 
   444  0107                     	;# 
   445  0108                     	;# 
   446  0109                     	;# 
   447  010C                     	;# 
   448  010C                     	;# 
   449  010D                     	;# 
   450  010E                     	;# 
   451  010F                     	;# 
   452  0185                     	;# 
   453  0187                     	;# 
   454  0188                     	;# 
   455  0189                     	;# 
   456  018C                     	;# 
   457  018D                     	;# 
   458  0000                     	;# 
   459  0001                     	;# 
   460  0002                     	;# 
   461  0003                     	;# 
   462  0004                     	;# 
   463  0005                     	;# 
   464  0006                     	;# 
   465  0007                     	;# 
   466  0009                     	;# 
   467  000A                     	;# 
   468  000B                     	;# 
   469  000C                     	;# 
   470  000D                     	;# 
   471  000E                     	;# 
   472  000E                     	;# 
   473  000F                     	;# 
   474  0010                     	;# 
   475  0011                     	;# 
   476  0012                     	;# 
   477  0013                     	;# 
   478  0014                     	;# 
   479  0015                     	;# 
   480  0015                     	;# 
   481  0016                     	;# 
   482  0017                     	;# 
   483  0018                     	;# 
   484  0019                     	;# 
   485  001A                     	;# 
   486  001B                     	;# 
   487  001B                     	;# 
   488  001C                     	;# 
   489  001D                     	;# 
   490  001E                     	;# 
   491  001F                     	;# 
   492  0081                     	;# 
   493  0085                     	;# 
   494  0086                     	;# 
   495  0087                     	;# 
   496  0089                     	;# 
   497  008C                     	;# 
   498  008D                     	;# 
   499  008E                     	;# 
   500  008F                     	;# 
   501  0090                     	;# 
   502  0091                     	;# 
   503  0092                     	;# 
   504  0093                     	;# 
   505  0093                     	;# 
   506  0093                     	;# 
   507  0094                     	;# 
   508  0095                     	;# 
   509  0096                     	;# 
   510  0097                     	;# 
   511  0098                     	;# 
   512  0099                     	;# 
   513  009A                     	;# 
   514  009B                     	;# 
   515  009C                     	;# 
   516  009D                     	;# 
   517  009E                     	;# 
   518  009F                     	;# 
   519  0105                     	;# 
   520  0107                     	;# 
   521  0108                     	;# 
   522  0109                     	;# 
   523  010C                     	;# 
   524  010C                     	;# 
   525  010D                     	;# 
   526  010E                     	;# 
   527  010F                     	;# 
   528  0185                     	;# 
   529  0187                     	;# 
   530  0188                     	;# 
   531  0189                     	;# 
   532  018C                     	;# 
   533  018D                     	;# 
   534  0000                     	;# 
   535  0001                     	;# 
   536  0002                     	;# 
   537  0003                     	;# 
   538  0004                     	;# 
   539  0005                     	;# 
   540  0006                     	;# 
   541  0007                     	;# 
   542  0008                     	;# 
   543  0009                     	;# 
   544  000A                     	;# 
   545  000B                     	;# 
   546  000C                     	;# 
   547  000D                     	;# 
   548  000E                     	;# 
   549  000E                     	;# 
   550  000F                     	;# 
   551  0010                     	;# 
   552  0011                     	;# 
   553  0012                     	;# 
   554  0013                     	;# 
   555  0014                     	;# 
   556  0015                     	;# 
   557  0015                     	;# 
   558  0016                     	;# 
   559  0017                     	;# 
   560  0018                     	;# 
   561  0019                     	;# 
   562  001A                     	;# 
   563  001B                     	;# 
   564  001B                     	;# 
   565  001C                     	;# 
   566  001D                     	;# 
   567  001E                     	;# 
   568  001F                     	;# 
   569  0081                     	;# 
   570  0085                     	;# 
   571  0086                     	;# 
   572  0087                     	;# 
   573  0088                     	;# 
   574  0089                     	;# 
   575  008C                     	;# 
   576  008D                     	;# 
   577  008E                     	;# 
   578  008F                     	;# 
   579  0090                     	;# 
   580  0091                     	;# 
   581  0092                     	;# 
   582  0093                     	;# 
   583  0093                     	;# 
   584  0093                     	;# 
   585  0094                     	;# 
   586  0095                     	;# 
   587  0096                     	;# 
   588  0097                     	;# 
   589  0098                     	;# 
   590  0099                     	;# 
   591  009A                     	;# 
   592  009B                     	;# 
   593  009C                     	;# 
   594  009D                     	;# 
   595  009E                     	;# 
   596  009F                     	;# 
   597  0105                     	;# 
   598  0107                     	;# 
   599  0108                     	;# 
   600  0109                     	;# 
   601  010C                     	;# 
   602  010C                     	;# 
   603  010D                     	;# 
   604  010E                     	;# 
   605  010F                     	;# 
   606  0185                     	;# 
   607  0187                     	;# 
   608  0188                     	;# 
   609  0189                     	;# 
   610  018C                     	;# 
   611  018D                     	;# 
   612  0000                     	;# 
   613  0001                     	;# 
   614  0002                     	;# 
   615  0003                     	;# 
   616  0004                     	;# 
   617  0005                     	;# 
   618  0006                     	;# 
   619  0007                     	;# 
   620  0009                     	;# 
   621  000A                     	;# 
   622  000B                     	;# 
   623  000C                     	;# 
   624  000D                     	;# 
   625  000E                     	;# 
   626  000E                     	;# 
   627  000F                     	;# 
   628  0010                     	;# 
   629  0011                     	;# 
   630  0012                     	;# 
   631  0013                     	;# 
   632  0014                     	;# 
   633  0015                     	;# 
   634  0015                     	;# 
   635  0016                     	;# 
   636  0017                     	;# 
   637  0018                     	;# 
   638  0019                     	;# 
   639  001A                     	;# 
   640  001B                     	;# 
   641  001B                     	;# 
   642  001C                     	;# 
   643  001D                     	;# 
   644  001E                     	;# 
   645  001F                     	;# 
   646  0081                     	;# 
   647  0085                     	;# 
   648  0086                     	;# 
   649  0087                     	;# 
   650  0089                     	;# 
   651  008C                     	;# 
   652  008D                     	;# 
   653  008E                     	;# 
   654  008F                     	;# 
   655  0090                     	;# 
   656  0091                     	;# 
   657  0092                     	;# 
   658  0093                     	;# 
   659  0093                     	;# 
   660  0093                     	;# 
   661  0094                     	;# 
   662  0095                     	;# 
   663  0096                     	;# 
   664  0097                     	;# 
   665  0098                     	;# 
   666  0099                     	;# 
   667  009A                     	;# 
   668  009B                     	;# 
   669  009C                     	;# 
   670  009D                     	;# 
   671  009E                     	;# 
   672  009F                     	;# 
   673  0105                     	;# 
   674  0107                     	;# 
   675  0108                     	;# 
   676  0109                     	;# 
   677  010C                     	;# 
   678  010C                     	;# 
   679  010D                     	;# 
   680  010E                     	;# 
   681  010F                     	;# 
   682  0185                     	;# 
   683  0187                     	;# 
   684  0188                     	;# 
   685  0189                     	;# 
   686  018C                     	;# 
   687  018D                     	;# 
   688  0000                     	;# 
   689  0001                     	;# 
   690  0002                     	;# 
   691  0003                     	;# 
   692  0004                     	;# 
   693  0005                     	;# 
   694  0006                     	;# 
   695  0007                     	;# 
   696  0008                     	;# 
   697  0009                     	;# 
   698  000A                     	;# 
   699  000B                     	;# 
   700  000C                     	;# 
   701  000D                     	;# 
   702  000E                     	;# 
   703  000E                     	;# 
   704  000F                     	;# 
   705  0010                     	;# 
   706  0011                     	;# 
   707  0012                     	;# 
   708  0013                     	;# 
   709  0014                     	;# 
   710  0015                     	;# 
   711  0015                     	;# 
   712  0016                     	;# 
   713  0017                     	;# 
   714  0018                     	;# 
   715  0019                     	;# 
   716  001A                     	;# 
   717  001B                     	;# 
   718  001B                     	;# 
   719  001C                     	;# 
   720  001D                     	;# 
   721  001E                     	;# 
   722  001F                     	;# 
   723  0081                     	;# 
   724  0085                     	;# 
   725  0086                     	;# 
   726  0087                     	;# 
   727  0088                     	;# 
   728  0089                     	;# 
   729  008C                     	;# 
   730  008D                     	;# 
   731  008E                     	;# 
   732  008F                     	;# 
   733  0090                     	;# 
   734  0091                     	;# 
   735  0092                     	;# 
   736  0093                     	;# 
   737  0093                     	;# 
   738  0093                     	;# 
   739  0094                     	;# 
   740  0095                     	;# 
   741  0096                     	;# 
   742  0097                     	;# 
   743  0098                     	;# 
   744  0099                     	;# 
   745  009A                     	;# 
   746  009B                     	;# 
   747  009C                     	;# 
   748  009D                     	;# 
   749  009E                     	;# 
   750  009F                     	;# 
   751  0105                     	;# 
   752  0107                     	;# 
   753  0108                     	;# 
   754  0109                     	;# 
   755  010C                     	;# 
   756  010C                     	;# 
   757  010D                     	;# 
   758  010E                     	;# 
   759  010F                     	;# 
   760  0185                     	;# 
   761  0187                     	;# 
   762  0188                     	;# 
   763  0189                     	;# 
   764  018C                     	;# 
   765  018D                     	;# 
   766  0000                     	;# 
   767  0001                     	;# 
   768  0002                     	;# 
   769  0003                     	;# 
   770  0004                     	;# 
   771  0005                     	;# 
   772  0006                     	;# 
   773  0007                     	;# 
   774  0009                     	;# 
   775  000A                     	;# 
   776  000B                     	;# 
   777  000C                     	;# 
   778  000D                     	;# 
   779  000E                     	;# 
   780  000E                     	;# 
   781  000F                     	;# 
   782  0010                     	;# 
   783  0011                     	;# 
   784  0012                     	;# 
   785  0013                     	;# 
   786  0014                     	;# 
   787  0015                     	;# 
   788  0015                     	;# 
   789  0016                     	;# 
   790  0017                     	;# 
   791  0018                     	;# 
   792  0019                     	;# 
   793  001A                     	;# 
   794  001B                     	;# 
   795  001B                     	;# 
   796  001C                     	;# 
   797  001D                     	;# 
   798  001E                     	;# 
   799  001F                     	;# 
   800  0081                     	;# 
   801  0085                     	;# 
   802  0086                     	;# 
   803  0087                     	;# 
   804  0089                     	;# 
   805  008C                     	;# 
   806  008D                     	;# 
   807  008E                     	;# 
   808  008F                     	;# 
   809  0090                     	;# 
   810  0091                     	;# 
   811  0092                     	;# 
   812  0093                     	;# 
   813  0093                     	;# 
   814  0093                     	;# 
   815  0094                     	;# 
   816  0095                     	;# 
   817  0096                     	;# 
   818  0097                     	;# 
   819  0098                     	;# 
   820  0099                     	;# 
   821  009A                     	;# 
   822  009B                     	;# 
   823  009C                     	;# 
   824  009D                     	;# 
   825  009E                     	;# 
   826  009F                     	;# 
   827  0105                     	;# 
   828  0107                     	;# 
   829  0108                     	;# 
   830  0109                     	;# 
   831  010C                     	;# 
   832  010C                     	;# 
   833  010D                     	;# 
   834  010E                     	;# 
   835  010F                     	;# 
   836  0185                     	;# 
   837  0187                     	;# 
   838  0188                     	;# 
   839  0189                     	;# 
   840  018C                     	;# 
   841  018D                     	;# 
   842                           
   843                           	psect	idataBANK0
   844  05C2                     __pidataBANK0:	
   845                           
   846                           ;initializer for _FMRX_Nref
   847  05C2  3400               	retlw	0
   848  05C3  340A               	retlw	10
   849                           
   850                           ;initializer for _CWTX_Nref
   851  05C4  34A0               	retlw	160
   852  05C5  3400               	retlw	0
   853                           
   854                           ;initializer for _FMTX_Nref
   855  05C6  3400               	retlw	0
   856  05C7  340A               	retlw	10
   857                           
   858                           	psect	idataBANK1
   859  04E1                     __pidataBANK1:	
   860                           
   861                           ;initializer for _FMRX_Nprg
   862  04E1  3402               	retlw	2
   863  04E2  3400               	retlw	0
   864  04E3  3404               	retlw	4
   865  04E4  3400               	retlw	0
   866  04E5  3408               	retlw	8
   867  04E6  3400               	retlw	0
   868  04E7  3408               	retlw	8
   869  04E8  3400               	retlw	0
   870  04E9  3407               	retlw	7
   871  04EA  3400               	retlw	0
   872                           
   873                           ;initializer for _CWTX_Nprg
   874  04EB  3400               	retlw	0
   875  04EC  3400               	retlw	0
   876  04ED  3401               	retlw	1
   877  04EE  3400               	retlw	0
   878  04EF  3407               	retlw	7
   879  04F0  3400               	retlw	0
   880  04F1  3404               	retlw	4
   881  04F2  3400               	retlw	0
   882  04F3  3407               	retlw	7
   883  04F4  3400               	retlw	0
   884                           
   885                           ;initializer for _FMTX_Nprg
   886  04F5  3408               	retlw	8
   887  04F6  3400               	retlw	0
   888  04F7  3407               	retlw	7
   889  04F8  3400               	retlw	0
   890  04F9  3403               	retlw	3
   891  04FA  3400               	retlw	0
   892  04FB  3400               	retlw	0
   893  04FC  3400               	retlw	0
   894  04FD  3400               	retlw	0
   895  04FE  3400               	retlw	0
   896  0013                     _SSPBUF	set	19
   897  0014                     _SSPCON	set	20
   898  0003                     _STATUS	set	3
   899  0009                     _PORTE	set	9
   900  0007                     _PORTC	set	7
   901  0006                     _PORTB	set	6
   902  0005                     _PORTA	set	5
   903  0019                     _TXREG	set	25
   904  001A                     _RCREG	set	26
   905  003A                     _RC2	set	58
   906  003D                     _RC5	set	61
   907  0033                     _RB3	set	51
   908  0038                     _RC0	set	56
   909  0031                     _RB1	set	49
   910  0064                     _TXIF	set	100
   911  00C1                     _OERR	set	193
   912  00C2                     _FERR	set	194
   913  00C6                     _RX9	set	198
   914  0065                     _RCIF	set	101
   915  00C5                     _SREN	set	197
   916  00C4                     _CREN	set	196
   917  00C7                     _SPEN	set	199
   918  005E                     _PEIE	set	94
   919  005F                     _GIE	set	95
   920  0094                     _SSPSTAT	set	148
   921  0093                     _SSPADD	set	147
   922  0091                     _SSPCON2	set	145
   923  0089                     _TRISE	set	137
   924  0087                     _TRISC	set	135
   925  0086                     _TRISB	set	134
   926  0085                     _TRISA	set	133
   927  0099                     _SPBRG	set	153
   928  048C                     _ACKEN	set	1164
   929  048D                     _ACKDT	set	1165
   930  048B                     _RCEN	set	1163
   931  048A                     _PEN	set	1162
   932  0489                     _RSEN	set	1161
   933  0488                     _SEN	set	1160
   934  04C5                     _TXEN	set	1221
   935  04C6                     _TX9	set	1222
   936  0465                     _RCIE	set	1125
   937  0464                     _TXIE	set	1124
   938  04C4                     _SYNC	set	1220
   939  04C2                     _BRGH	set	1218
   940  0189                     _ANSELH	set	393
   941  0188                     _ANSEL	set	392
   942                           
   943                           	psect	strings
   944  054E                     __pstrings:	
   945  054E                     stringtab:	
   946  054E                     __stringtab:	
   947  054E                     stringcode:	
   948                           ;	String table - string pointers are 1 byte each
   949                           
   950  054E                     stringdir:	
   951  054E  3005               	movlw	high stringdir
   952  054F  008A               	movwf	10
   953  0550  0804               	movf	4,w
   954  0551  0A84               	incf	4,f
   955  0552  0782               	addwf	2,f
   956  0553                     __stringbase:	
   957  0553  3400               	retlw	0
   958  0554                     __end_of__stringtab:	
   959  0554                     STR_1:	
   960  0554  344A               	retlw	74	;'J'
   961  0555  3451               	retlw	81	;'Q'
   962  0556  3431               	retlw	49	;'1'
   963  0557  345A               	retlw	90	;'Z'
   964  0558  3448               	retlw	72	;'H'
   965  0559  3458               	retlw	88	;'X'
   966  055A  3400               	retlw	0
   967  055B                     STR_2:	
   968  055B  344A               	retlw	74	;'J'
   969  055C  3451               	retlw	81	;'Q'
   970  055D  3431               	retlw	49	;'1'
   971  055E  3459               	retlw	89	;'Y'
   972  055F  3443               	retlw	67	;'C'
   973  0560  345A               	retlw	90	;'Z'
   974  0561  3400               	retlw	0
   975                           
   976                           ; #config settings
   977  0000                     
   978                           	psect	cinit
   979  0015                     start_initialization:	
   980  0015                     __initialization:	
   981                           
   982                           ; Initialize objects allocated to BANK1
   983  0015  1383               	bcf	3,7	;select IRP bank0
   984  0016  30BE               	movlw	low (__pdataBANK1+30)
   985  0017  00FD               	movwf	btemp+-1
   986  0018  3004               	movlw	high __pidataBANK1
   987  0019  00FE               	movwf	btemp
   988  001A  30E1               	movlw	low __pidataBANK1
   989  001B  00FF               	movwf	btemp+1
   990  001C  30A0               	movlw	low __pdataBANK1
   991  001D  0084               	movwf	4
   992  001E  120A  118A  2578  120A  118A  	fcall	init_ram0
   993                           
   994                           ; Initialize objects allocated to BANK0
   995  0023  306D               	movlw	low (__pdataBANK0+6)
   996  0024  00FD               	movwf	btemp+-1
   997  0025  3005               	movlw	high __pidataBANK0
   998  0026  00FE               	movwf	btemp
   999  0027  30C2               	movlw	low __pidataBANK0
  1000  0028  00FF               	movwf	btemp+1
  1001  0029  3067               	movlw	low __pdataBANK0
  1002  002A  0084               	movwf	4
  1003  002B  120A  118A  2578  120A  118A  	fcall	init_ram0
  1004                           
  1005                           ; Clear objects allocated to BANK3
  1006  0030  1783               	bsf	3,7	;select IRP bank2
  1007  0031  3090               	movlw	low __pbssBANK3
  1008  0032  0084               	movwf	4
  1009  0033  30C2               	movlw	low (__pbssBANK3+50)
  1010  0034  120A  118A  259D  120A  118A  	fcall	clear_ram0
  1011                           
  1012                           ; Clear objects allocated to BANK1
  1013  0039  1383               	bcf	3,7	;select IRP bank0
  1014  003A  30D7               	movlw	low __pbssBANK1
  1015  003B  0084               	movwf	4
  1016  003C  30E7               	movlw	low (__pbssBANK1+16)
  1017  003D  120A  118A  259D  120A  118A  	fcall	clear_ram0
  1018                           
  1019                           ; Clear objects allocated to BANK0
  1020  0042  305D               	movlw	low __pbssBANK0
  1021  0043  0084               	movwf	4
  1022  0044  3067               	movlw	low (__pbssBANK0+10)
  1023  0045  120A  118A  259D   	fcall	clear_ram0
  1024  0048                     end_of_initialization:	
  1025                           ;End of C runtime variable initialization code
  1026                           
  1027  0048                     __end_of__initialization:	
  1028  0048  0183               	clrf	3
  1029  0049  120A  118A  2B68   	ljmp	_main	;jump to C main() function
  1030                           
  1031                           	psect	bssBANK0
  1032  005D                     __pbssBANK0:	
  1033  005D                     _ebitstatus:	
  1034  005D                     	ds	2
  1035  005F                     _estuff:	
  1036  005F                     	ds	2
  1037  0061                     _efcsflag:	
  1038  0061                     	ds	2
  1039  0063                     _eflag:	
  1040  0063                     	ds	2
  1041  0065                     _efcshi:	
  1042  0065                     	ds	1
  1043  0066                     _efcslo:	
  1044  0066                     	ds	1
  1045                           
  1046                           	psect	dataBANK0
  1047  0067                     __pdataBANK0:	
  1048  0067                     _FMRX_Nref:	
  1049  0067                     	ds	2
  1050  0069                     _CWTX_Nref:	
  1051  0069                     	ds	2
  1052  006B                     _FMTX_Nref:	
  1053  006B                     	ds	2
  1054                           
  1055                           	psect	bssBANK1
  1056  00D7                     __pbssBANK1:	
  1057  00D7                     _EEPROMData:	
  1058  00D7                     	ds	16
  1059                           
  1060                           	psect	dataBANK1
  1061  00A0                     __pdataBANK1:	
  1062  00A0                     _FMRX_Nprg:	
  1063  00A0                     	ds	10
  1064  00AA                     _CWTX_Nprg:	
  1065  00AA                     	ds	10
  1066  00B4                     _FMTX_Nprg:	
  1067  00B4                     	ds	10
  1068                           
  1069                           	psect	bssBANK3
  1070  0190                     __pbssBANK3:	
  1071  0190                     _ePacket:	
  1072  0190                     	ds	50
  1073                           
  1074                           	psect	inittext
  1075  0574                     init_fetch0:	
  1076                           ;	Called with low address in FSR and high address in W
  1077                           
  1078  0574  087E               	movf	126,w
  1079  0575  008A               	movwf	10
  1080  0576  087F               	movf	127,w
  1081  0577  0082               	movwf	2
  1082  0578                     init_ram0:	
  1083                           ;Called with:
  1084                           ;	high address of idata address in btemp 
  1085                           ;	low address of idata address in btemp+1 
  1086                           ;	low address of data in FSR
  1087                           ;	high address + 1 of data in btemp-1
  1088                           
  1089  0578  2574  120A  118A   	fcall	init_fetch0
  1090  057B  0080               	movwf	0
  1091  057C  0A84               	incf	4,f
  1092  057D  0804               	movf	4,w
  1093  057E  067D               	xorwf	125,w
  1094  057F  1903               	btfsc	3,2
  1095  0580  3400               	retlw	0
  1096  0581  0AFF               	incf	127,f
  1097  0582  1903               	btfsc	3,2
  1098  0583  0AFE               	incf	126,f
  1099  0584  2D78               	goto	init_ram0
  1100                           
  1101                           	psect	clrtext
  1102  059D                     clear_ram0:	
  1103                           ;	Called with FSR containing the base address, and
  1104                           ;	W with the last address+1
  1105                           
  1106  059D  0064               	clrwdt	;clear the watchdog before getting into this loop
  1107  059E                     clrloop0:	
  1108  059E  0180               	clrf	0	;clear RAM location pointed to by FSR
  1109  059F  0A84               	incf	4,f	;increment pointer
  1110  05A0  0604               	xorwf	4,w	;XOR with final address
  1111  05A1  1903               	btfsc	3,2	;have we reached the end yet?
  1112  05A2  3400               	retlw	0	;all done for this memory range, return
  1113  05A3  0604               	xorwf	4,w	;XOR again to restore value
  1114  05A4  2D9E               	goto	clrloop0	;do the next byte
  1115                           
  1116                           	psect	cstackBANK1
  1117  00BE                     __pcstackBANK1:	
  1118  00BE                     ??_Init_SERIAL:	
  1119  00BE                     ??_Init_MPU:	
  1120                           ; 1 bytes @ 0x0
  1121                           
  1122  00BE                     ?___lldiv:	
  1123                           ; 1 bytes @ 0x0
  1124                           
  1125  00BE                     ___lldiv@divisor:	
  1126                           ; 4 bytes @ 0x0
  1127                           
  1128                           
  1129                           ; 4 bytes @ 0x0
  1130  00BE                     	ds	4
  1131  00C2                     ___lldiv@dividend:	
  1132                           
  1133                           ; 4 bytes @ 0x4
  1134  00C2                     	ds	4
  1135  00C6                     ??___lldiv:	
  1136                           
  1137                           ; 1 bytes @ 0x8
  1138  00C6                     	ds	1
  1139  00C7                     ___lldiv@quotient:	
  1140                           
  1141                           ; 4 bytes @ 0x9
  1142  00C7                     	ds	4
  1143  00CB                     ___lldiv@counter:	
  1144                           
  1145                           ; 1 bytes @ 0xD
  1146  00CB                     	ds	1
  1147  00CC                     ?_Init_I2C_M:	
  1148  00CC                     Init_I2C_M@c:	
  1149                           ; 1 bytes @ 0xE
  1150                           
  1151                           
  1152                           ; 4 bytes @ 0xE
  1153  00CC                     	ds	4
  1154  00D0                     ??_Init_I2C_M:	
  1155                           
  1156                           ; 1 bytes @ 0x12
  1157  00D0                     	ds	4
  1158  00D4                     ??_main:	
  1159                           
  1160                           ; 1 bytes @ 0x16
  1161  00D4                     	ds	3
  1162                           
  1163                           	psect	cstackCOMMON
  1164  0070                     __pcstackCOMMON:	
  1165  0070                     ?_SendByte:	
  1166  0070                     ?_fcsbit:	
  1167                           ; 1 bytes @ 0x0
  1168                           
  1169  0070                     ??_fcsbit:	
  1170                           ; 1 bytes @ 0x0
  1171                           
  1172  0070                     ?_flipout:	
  1173                           ; 1 bytes @ 0x0
  1174                           
  1175  0070                     ??_flipout:	
  1176                           ; 1 bytes @ 0x0
  1177                           
  1178  0070                     ?_Init_SERIAL:	
  1179                           ; 1 bytes @ 0x0
  1180                           
  1181  0070                     ?_getch:	
  1182                           ; 1 bytes @ 0x0
  1183                           
  1184  0070                     ??_getch:	
  1185                           ; 1 bytes @ 0x0
  1186                           
  1187  0070                     ?_InterReceiver:	
  1188                           ; 1 bytes @ 0x0
  1189                           
  1190  0070                     ?_Init_MPU:	
  1191                           ; 1 bytes @ 0x0
  1192                           
  1193  0070                     ?_main:	
  1194                           ; 1 bytes @ 0x0
  1195                           
  1196  0070                     ?_I2C_Master_Wait:	
  1197                           ; 1 bytes @ 0x0
  1198                           
  1199  0070                     ??_I2C_Master_Wait:	
  1200                           ; 1 bytes @ 0x0
  1201                           
  1202  0070                     ?_I2C_Master_Start:	
  1203                           ; 1 bytes @ 0x0
  1204                           
  1205  0070                     ??_I2C_Master_Start:	
  1206                           ; 1 bytes @ 0x0
  1207                           
  1208  0070                     ?_I2C_Master_RepeatedStart:	
  1209                           ; 1 bytes @ 0x0
  1210                           
  1211  0070                     ??_I2C_Master_RepeatedStart:	
  1212                           ; 1 bytes @ 0x0
  1213                           
  1214  0070                     ?_I2C_Master_Stop:	
  1215                           ; 1 bytes @ 0x0
  1216                           
  1217  0070                     ??_I2C_Master_Stop:	
  1218                           ; 1 bytes @ 0x0
  1219                           
  1220  0070                     ?_I2C_Master_Write:	
  1221                           ; 1 bytes @ 0x0
  1222                           
  1223  0070                     ?_I2C_Master_Read:	
  1224                           ; 1 bytes @ 0x0
  1225                           
  1226  0070                     ??_I2C_Master_Read:	
  1227                           ; 1 bytes @ 0x0
  1228                           
  1229  0070                     ?_Packetmaker:	
  1230                           ; 1 bytes @ 0x0
  1231                           
  1232  0070                     Packetmaker@eDataField:	
  1233                           ; 2 bytes @ 0x0
  1234                           
  1235  0070                     I2C_Master_Write@d:	
  1236                           ; 2 bytes @ 0x0
  1237                           
  1238                           
  1239                           ; 2 bytes @ 0x0
  1240  0070                     	ds	1
  1241  0071                     I2C_Master_Read@a:	
  1242                           
  1243                           ; 1 bytes @ 0x1
  1244  0071                     	ds	1
  1245  0072                     ??_Packetmaker:	
  1246  0072                     ??_I2C_Master_Write:	
  1247                           ; 1 bytes @ 0x2
  1248                           
  1249  0072                     fcsbit@tbyte:	
  1250                           ; 1 bytes @ 0x2
  1251                           
  1252  0072                     I2C_Master_Read@temp:	
  1253                           ; 1 bytes @ 0x2
  1254                           
  1255                           
  1256                           ; 1 bytes @ 0x2
  1257  0072                     	ds	1
  1258  0073                     ?_EEPROM_Read:	
  1259  0073                     ??_SendByte:	
  1260                           ; 1 bytes @ 0x3
  1261                           
  1262  0073                     EEPROM_Read@high_address:	
  1263                           ; 1 bytes @ 0x3
  1264                           
  1265                           
  1266                           ; 1 bytes @ 0x3
  1267  0073                     	ds	1
  1268  0074                     EEPROM_Read@low_address:	
  1269                           
  1270                           ; 1 bytes @ 0x4
  1271  0074                     	ds	1
  1272  0075                     Packetmaker@i_136:	
  1273  0075                     SendByte@i:	
  1274                           ; 2 bytes @ 0x5
  1275                           
  1276  0075                     EEPROM_Read@ReadData:	
  1277                           ; 2 bytes @ 0x5
  1278                           
  1279                           
  1280                           ; 2 bytes @ 0x5
  1281  0075                     	ds	2
  1282  0077                     SendByte@byte:	
  1283  0077                     Packetmaker@Datanum:	
  1284                           ; 1 bytes @ 0x7
  1285                           
  1286  0077                     EEPROM_Read@EEPROMDataLength:	
  1287                           ; 2 bytes @ 0x7
  1288                           
  1289                           
  1290                           ; 2 bytes @ 0x7
  1291  0077                     	ds	1
  1292  0078                     SendByte@bt:	
  1293                           
  1294                           ; 1 bytes @ 0x8
  1295  0078                     	ds	1
  1296  0079                     ??_EEPROM_Read:	
  1297  0079                     Packetmaker@i:	
  1298                           ; 1 bytes @ 0x9
  1299                           
  1300                           
  1301                           ; 2 bytes @ 0x9
  1302  0079                     	ds	2
  1303  007B                     Packetmaker@i_133:	
  1304                           
  1305                           ; 2 bytes @ 0xB
  1306  007B                     	ds	3
  1307                           
  1308                           	psect	cstackBANK0
  1309  0020                     __pcstackBANK0:	
  1310  0020                     ?_SendPacket:	
  1311  0020                     EEPROM_Read@EEPROM_address:	
  1312                           ; 1 bytes @ 0x0
  1313                           
  1314  0020                     SendPacket@eDataField:	
  1315                           ; 1 bytes @ 0x0
  1316                           
  1317                           
  1318                           ; 2 bytes @ 0x0
  1319  0020                     	ds	1
  1320  0021                     EEPROM_Read@ReadAddress:	
  1321                           
  1322                           ; 1 bytes @ 0x1
  1323  0021                     	ds	1
  1324  0022                     ??_SendPacket:	
  1325  0022                     EEPROM_Read@i:	
  1326                           ; 1 bytes @ 0x2
  1327                           
  1328                           
  1329                           ; 2 bytes @ 0x2
  1330  0022                     	ds	2
  1331  0024                     EEPROM_Read@Address:	
  1332                           
  1333                           ; 1 bytes @ 0x4
  1334  0024                     	ds	1
  1335  0025                     SendPacket@Packetnum:	
  1336                           
  1337                           ; 2 bytes @ 0x5
  1338  0025                     	ds	2
  1339  0027                     SendPacket@i:	
  1340                           
  1341                           ; 2 bytes @ 0x7
  1342  0027                     	ds	2
  1343  0029                     SendPacket@i_142:	
  1344                           
  1345                           ; 2 bytes @ 0x9
  1346  0029                     	ds	2
  1347  002B                     SendPacket@i_143:	
  1348                           
  1349                           ; 2 bytes @ 0xB
  1350  002B                     	ds	2
  1351  002D                     ??_InterReceiver:	
  1352                           
  1353                           ; 1 bytes @ 0xD
  1354  002D                     	ds	7
  1355  0034                     InterReceiver@EEPROMCmdData:	
  1356  0034                     InterReceiver@RXDATA:	
  1357                           ; 0 bytes @ 0x14
  1358                           
  1359                           
  1360                           ; 32 bytes @ 0x14
  1361  0034                     	ds	32
  1362  0054                     InterReceiver@EEPROMCmdDataLength:	
  1363                           
  1364                           ; 2 bytes @ 0x34
  1365  0054                     	ds	2
  1366  0056                     InterReceiver@EEPROMTestData:	
  1367                           
  1368                           ; 5 bytes @ 0x36
  1369  0056                     	ds	5
  1370  005B                     InterReceiver@i:	
  1371                           
  1372                           ; 2 bytes @ 0x3B
  1373  005B                     	ds	2
  1374                           
  1375                           	psect	maintext
  1376  0368                     __pmaintext:	
  1377 ;;
  1378 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1379 ;;
  1380 ;; *************** function _main *****************
  1381 ;; Defined at:
  1382 ;;		line 35 in file "main.c"
  1383 ;; Parameters:    Size  Location     Type
  1384 ;;		None
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;  EEPROMData     32    0        unsigned char [32]
  1387 ;;  EEPROMDataLe    2    0        unsigned int 
  1388 ;;  EEPROMData      2    0        PTR unsigned char 
  1389 ;;  dData           0    0        unsigned char [0]
  1390 ;; Return value:  Size  Location     Type
  1391 ;;                  1    wreg      void 
  1392 ;; Registers used:
  1393 ;;		wreg, status,2, status,0, pclath, cstack
  1394 ;; Tracked objects:
  1395 ;;		On entry : B00/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1399 ;;      Params:         0       0       0       0       0
  1400 ;;      Locals:         0       0       0       0       0
  1401 ;;      Temps:          0       0       3       0       0
  1402 ;;      Totals:         0       0       3       0       0
  1403 ;;Total ram usage:        3 bytes
  1404 ;; Hardware stack levels required when called:    6
  1405 ;; This function calls:
  1406 ;;		_Init_I2C_M
  1407 ;;		_Init_MPU
  1408 ;;		_Init_SERIAL
  1409 ;; This function is called by:
  1410 ;;		Startup code after reset
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           
  1415                           ;psect for function _main
  1416  0368                     _main:	
  1417                           
  1418                           ;main.c: 36: _delay((unsigned long)((1000)*(10000000/4000.0)));
  1419                           
  1420                           ;incstack = 0
  1421                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1422  0368  300D               	movlw	13
  1423  0369  1683               	bsf	3,5	;RP0=1, select bank1
  1424  036A  1303               	bcf	3,6	;RP1=0, select bank1
  1425  036B  00D6               	movwf	(??_main^(0+128)+2)
  1426  036C  30AF               	movlw	175
  1427  036D  00D5               	movwf	(??_main^(0+128)+1)
  1428  036E  30B5               	movlw	181
  1429  036F  00D4               	movwf	??_main^(0+128)
  1430  0370                     u977:	
  1431  0370  0BD4               	decfsz	??_main^(0+128),f
  1432  0371  2B70               	goto	u977
  1433  0372  0BD5               	decfsz	(??_main^(0+128)+1),f
  1434  0373  2B70               	goto	u977
  1435  0374  0BD6               	decfsz	(??_main^(0+128)+2),f
  1436  0375  2B70               	goto	u977
  1437  0376  2B77               	nop2
  1438                           
  1439                           ;main.c: 41: Init_SERIAL();
  1440  0377  120A  118A  24FF  120A  118A  	fcall	_Init_SERIAL
  1441                           
  1442                           ;main.c: 42: Init_MPU();
  1443  037C  120A  118A  251A  120A  118A  	fcall	_Init_MPU
  1444                           
  1445                           ;main.c: 45: Init_I2C_M(400000);
  1446  0381  3000               	movlw	0
  1447  0382  1683               	bsf	3,5	;RP0=1, select bank1
  1448  0383  1303               	bcf	3,6	;RP1=0, select bank1
  1449  0384  00CF               	movwf	(Init_I2C_M@c+3)^(0+128)
  1450  0385  3006               	movlw	6
  1451  0386  00CE               	movwf	(Init_I2C_M@c+2)^(0+128)
  1452  0387  301A               	movlw	26
  1453  0388  00CD               	movwf	(Init_I2C_M@c+1)^(0+128)
  1454  0389  3080               	movlw	128
  1455  038A  00CC               	movwf	Init_I2C_M@c^(0+128)
  1456  038B  120A  118A  2489  120A  118A  	fcall	_Init_I2C_M
  1457  0390  2BBD               	goto	l1619
  1458  0391                     l1623:	
  1459                           
  1460                           ;main.c: 107: RC0 = 1;
  1461  0391  1407               	bsf	7,0	;volatile
  1462                           
  1463                           ;main.c: 108: RB3 = 0;
  1464  0392  1186               	bcf	6,3	;volatile
  1465                           
  1466                           ;main.c: 109: UBYTE EEPROMData[32];
  1467                           ;main.c: 110: UINT EEPROMDataLength;
  1468                           ;main.c: 112: _delay((unsigned long)((200)*(10000000/4000.0)));
  1469  0393  3003               	movlw	3
  1470  0394  1683               	bsf	3,5	;RP0=1, select bank1
  1471  0395  1303               	bcf	3,6	;RP1=0, select bank1
  1472  0396  00D6               	movwf	(??_main^(0+128)+2)
  1473  0397  308A               	movlw	138
  1474  0398  00D5               	movwf	(??_main^(0+128)+1)
  1475  0399  3055               	movlw	85
  1476  039A  00D4               	movwf	??_main^(0+128)
  1477  039B                     u997:	
  1478  039B  0BD4               	decfsz	??_main^(0+128),f
  1479  039C  2B9B               	goto	u997
  1480  039D  0BD5               	decfsz	(??_main^(0+128)+1),f
  1481  039E  2B9B               	goto	u997
  1482  039F  0BD6               	decfsz	(??_main^(0+128)+2),f
  1483  03A0  2B9B               	goto	u997
  1484                           
  1485                           ;main.c: 114: _delay((unsigned long)((200)*(10000000/4000.0)));
  1486  03A1  3003               	movlw	3
  1487  03A2  1683               	bsf	3,5	;RP0=1, select bank1
  1488  03A3  1303               	bcf	3,6	;RP1=0, select bank1
  1489  03A4  00D6               	movwf	(??_main^(0+128)+2)
  1490  03A5  308A               	movlw	138
  1491  03A6  00D5               	movwf	(??_main^(0+128)+1)
  1492  03A7  3055               	movlw	85
  1493  03A8  00D4               	movwf	??_main^(0+128)
  1494  03A9                     u1007:	
  1495  03A9  0BD4               	decfsz	??_main^(0+128),f
  1496  03AA  2BA9               	goto	u1007
  1497  03AB  0BD5               	decfsz	(??_main^(0+128)+1),f
  1498  03AC  2BA9               	goto	u1007
  1499  03AD  0BD6               	decfsz	(??_main^(0+128)+2),f
  1500  03AE  2BA9               	goto	u1007
  1501                           
  1502                           ;main.c: 130: _delay((unsigned long)((200)*(10000000/4000.0)));
  1503  03AF  3003               	movlw	3
  1504  03B0  1683               	bsf	3,5	;RP0=1, select bank1
  1505  03B1  1303               	bcf	3,6	;RP1=0, select bank1
  1506  03B2  00D6               	movwf	(??_main^(0+128)+2)
  1507  03B3  308A               	movlw	138
  1508  03B4  00D5               	movwf	(??_main^(0+128)+1)
  1509  03B5  3055               	movlw	85
  1510  03B6  00D4               	movwf	??_main^(0+128)
  1511  03B7                     u1017:	
  1512  03B7  0BD4               	decfsz	??_main^(0+128),f
  1513  03B8  2BB7               	goto	u1017
  1514  03B9  0BD5               	decfsz	(??_main^(0+128)+1),f
  1515  03BA  2BB7               	goto	u1017
  1516  03BB  0BD6               	decfsz	(??_main^(0+128)+2),f
  1517  03BC  2BB7               	goto	u1017
  1518  03BD                     l1619:	
  1519                           ;main.c: 57: while(1){
  1520                           
  1521                           ;main.c: 155: }else{
  1522                           
  1523                           
  1524                           ;main.c: 73: UBYTE dData[];
  1525                           ;main.c: 83: _delay((unsigned long)((200)*(10000000/4000.0)));
  1526  03BD  3003               	movlw	3
  1527  03BE  1683               	bsf	3,5	;RP0=1, select bank1
  1528  03BF  1303               	bcf	3,6	;RP1=0, select bank1
  1529  03C0  00D6               	movwf	(??_main^(0+128)+2)
  1530  03C1  308A               	movlw	138
  1531  03C2  00D5               	movwf	(??_main^(0+128)+1)
  1532  03C3  3055               	movlw	85
  1533  03C4  00D4               	movwf	??_main^(0+128)
  1534  03C5                     u987:	
  1535  03C5  0BD4               	decfsz	??_main^(0+128),f
  1536  03C6  2BC5               	goto	u987
  1537  03C7  0BD5               	decfsz	(??_main^(0+128)+1),f
  1538  03C8  2BC5               	goto	u987
  1539  03C9  0BD6               	decfsz	(??_main^(0+128)+2),f
  1540  03CA  2BC5               	goto	u987
  1541                           
  1542                           ;main.c: 105: UBYTE *EEPROMData;
  1543                           ;main.c: 106: if (RC2==1){
  1544  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  1545  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  1546  03CD  1907               	btfsc	7,2	;volatile
  1547  03CE  2B91               	goto	l1623
  1548                           
  1549                           ;main.c: 157: RC0 = 0;
  1550  03CF  1007               	bcf	7,0	;volatile
  1551  03D0  2BBD               	goto	l1619
  1552  03D1                     __end_of_main:	
  1553                           
  1554                           	psect	text1
  1555  04FF                     __ptext1:	
  1556 ;; *************** function _Init_SERIAL *****************
  1557 ;; Defined at:
  1558 ;;		line 8 in file "UART.c"
  1559 ;; Parameters:    Size  Location     Type
  1560 ;;		None
  1561 ;; Auto vars:     Size  Location     Type
  1562 ;;		None
  1563 ;; Return value:  Size  Location     Type
  1564 ;;                  1    wreg      void 
  1565 ;; Registers used:
  1566 ;;		wreg
  1567 ;; Tracked objects:
  1568 ;;		On entry : 0/0
  1569 ;;		On exit  : 0/0
  1570 ;;		Unchanged: 0/0
  1571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1572 ;;      Params:         0       0       0       0       0
  1573 ;;      Locals:         0       0       0       0       0
  1574 ;;      Temps:          0       0       0       0       0
  1575 ;;      Totals:         0       0       0       0       0
  1576 ;;Total ram usage:        0 bytes
  1577 ;; Hardware stack levels used:    1
  1578 ;; Hardware stack levels required when called:    4
  1579 ;; This function calls:
  1580 ;;		Nothing
  1581 ;; This function is called by:
  1582 ;;		_main
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586                           
  1587                           ;psect for function _Init_SERIAL
  1588  04FF                     _Init_SERIAL:	
  1589                           
  1590                           ;UART.c: 9: SPBRG = 10;
  1591                           
  1592                           ;incstack = 0
  1593                           ; Regs used in _Init_SERIAL: [wreg]
  1594  04FF  300A               	movlw	10
  1595  0500  1683               	bsf	3,5	;RP0=1, select bank1
  1596  0501  1303               	bcf	3,6	;RP1=0, select bank1
  1597  0502  0099               	movwf	25	;volatile
  1598                           
  1599                           ;UART.c: 10: GIE = 1;
  1600  0503  178B               	bsf	11,7	;volatile
  1601                           
  1602                           ;UART.c: 11: PEIE = 1;
  1603  0504  170B               	bsf	11,6	;volatile
  1604                           
  1605                           ;UART.c: 12: BRGH = 0;
  1606  0505  1118               	bcf	24,2	;volatile
  1607                           
  1608                           ;UART.c: 13: SYNC = 0;
  1609  0506  1218               	bcf	24,4	;volatile
  1610                           
  1611                           ;UART.c: 14: SPEN = 1;
  1612  0507  1283               	bcf	3,5	;RP0=0, select bank0
  1613  0508  1303               	bcf	3,6	;RP1=0, select bank0
  1614  0509  1798               	bsf	24,7	;volatile
  1615                           
  1616                           ;UART.c: 15: CREN = 1;
  1617  050A  1618               	bsf	24,4	;volatile
  1618                           
  1619                           ;UART.c: 16: SREN = 0;
  1620  050B  1298               	bcf	24,5	;volatile
  1621                           
  1622                           ;UART.c: 17: RCIF = 0;
  1623  050C  128C               	bcf	12,5	;volatile
  1624                           
  1625                           ;UART.c: 18: TXIE = 0;
  1626  050D  1683               	bsf	3,5	;RP0=1, select bank1
  1627  050E  1303               	bcf	3,6	;RP1=0, select bank1
  1628  050F  120C               	bcf	12,4	;volatile
  1629                           
  1630                           ;UART.c: 19: RCIE = 1;
  1631  0510  168C               	bsf	12,5	;volatile
  1632                           
  1633                           ;UART.c: 20: TX9 = 0;
  1634  0511  1318               	bcf	24,6	;volatile
  1635                           
  1636                           ;UART.c: 21: RX9 = 0;
  1637  0512  1283               	bcf	3,5	;RP0=0, select bank0
  1638  0513  1303               	bcf	3,6	;RP1=0, select bank0
  1639  0514  1318               	bcf	24,6	;volatile
  1640                           
  1641                           ;UART.c: 22: TXEN = 0;
  1642  0515  1683               	bsf	3,5	;RP0=1, select bank1
  1643  0516  1303               	bcf	3,6	;RP1=0, select bank1
  1644  0517  1298               	bcf	24,5	;volatile
  1645                           
  1646                           ;UART.c: 23: TXEN = 1;
  1647  0518  1698               	bsf	24,5	;volatile
  1648  0519  0008               	return
  1649  051A                     __end_of_Init_SERIAL:	
  1650                           
  1651                           	psect	text2
  1652  051A                     __ptext2:	
  1653 ;; *************** function _Init_MPU *****************
  1654 ;; Defined at:
  1655 ;;		line 8 in file "Init_MPU.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;		None
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;		None
  1660 ;; Return value:  Size  Location     Type
  1661 ;;                  1    wreg      void 
  1662 ;; Registers used:
  1663 ;;		wreg, status,2
  1664 ;; Tracked objects:
  1665 ;;		On entry : 0/0
  1666 ;;		On exit  : 0/0
  1667 ;;		Unchanged: 0/0
  1668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1669 ;;      Params:         0       0       0       0       0
  1670 ;;      Locals:         0       0       0       0       0
  1671 ;;      Temps:          0       0       0       0       0
  1672 ;;      Totals:         0       0       0       0       0
  1673 ;;Total ram usage:        0 bytes
  1674 ;; Hardware stack levels used:    1
  1675 ;; Hardware stack levels required when called:    4
  1676 ;; This function calls:
  1677 ;;		Nothing
  1678 ;; This function is called by:
  1679 ;;		_main
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683                           
  1684                           ;psect for function _Init_MPU
  1685  051A                     _Init_MPU:	
  1686                           
  1687                           ;Init_MPU.c: 11: PORTA = 0x00;
  1688                           
  1689                           ;incstack = 0
  1690                           ; Regs used in _Init_MPU: [wreg+status,2]
  1691  051A  1283               	bcf	3,5	;RP0=0, select bank0
  1692  051B  1303               	bcf	3,6	;RP1=0, select bank0
  1693  051C  0185               	clrf	5	;volatile
  1694                           
  1695                           ;Init_MPU.c: 12: PORTB = 0x00;
  1696  051D  0186               	clrf	6	;volatile
  1697                           
  1698                           ;Init_MPU.c: 13: PORTC = 0x00;
  1699  051E  0187               	clrf	7	;volatile
  1700                           
  1701                           ;Init_MPU.c: 15: PORTE = 0x00;
  1702  051F  0189               	clrf	9	;volatile
  1703                           
  1704                           ;Init_MPU.c: 18: ANSEL = 0x00;
  1705  0520  1683               	bsf	3,5	;RP0=1, select bank3
  1706  0521  1703               	bsf	3,6	;RP1=1, select bank3
  1707  0522  0188               	clrf	8	;volatile
  1708                           
  1709                           ;Init_MPU.c: 19: ANSELH = 0x00;
  1710  0523  0189               	clrf	9	;volatile
  1711                           
  1712                           ;Init_MPU.c: 23: TRISA = 0b10000000;
  1713  0524  3080               	movlw	128
  1714  0525  1683               	bsf	3,5	;RP0=1, select bank1
  1715  0526  1303               	bcf	3,6	;RP1=0, select bank1
  1716  0527  0085               	movwf	5	;volatile
  1717                           
  1718                           ;Init_MPU.c: 24: TRISB = 0b00010000;
  1719  0528  3010               	movlw	16
  1720  0529  0086               	movwf	6	;volatile
  1721                           
  1722                           ;Init_MPU.c: 25: TRISC = 0b01011100;
  1723  052A  305C               	movlw	92
  1724  052B  0087               	movwf	7	;volatile
  1725                           
  1726                           ;Init_MPU.c: 27: TRISE = 0b00000000;
  1727  052C  0189               	clrf	9	;volatile
  1728                           
  1729                           ;Init_MPU.c: 30: PORTA = 0x00;
  1730  052D  1283               	bcf	3,5	;RP0=0, select bank0
  1731  052E  1303               	bcf	3,6	;RP1=0, select bank0
  1732  052F  0185               	clrf	5	;volatile
  1733                           
  1734                           ;Init_MPU.c: 31: PORTB = 0x00;
  1735  0530  0186               	clrf	6	;volatile
  1736                           
  1737                           ;Init_MPU.c: 32: PORTC = 0x00;
  1738  0531  0187               	clrf	7	;volatile
  1739                           
  1740                           ;Init_MPU.c: 34: PORTE = 0x00;
  1741  0532  0189               	clrf	9	;volatile
  1742  0533  0008               	return
  1743  0534                     __end_of_Init_MPU:	
  1744                           
  1745                           	psect	text3
  1746  0489                     __ptext3:	
  1747 ;; *************** function _Init_I2C_M *****************
  1748 ;; Defined at:
  1749 ;;		line 11 in file "I2C.c"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;  c               4   14[BANK1 ] const unsigned long 
  1752 ;; Auto vars:     Size  Location     Type
  1753 ;;		None
  1754 ;; Return value:  Size  Location     Type
  1755 ;;                  1    wreg      void 
  1756 ;; Registers used:
  1757 ;;		wreg, status,2, status,0, pclath, cstack
  1758 ;; Tracked objects:
  1759 ;;		On entry : 0/0
  1760 ;;		On exit  : 0/0
  1761 ;;		Unchanged: 0/0
  1762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1763 ;;      Params:         0       0       4       0       0
  1764 ;;      Locals:         0       0       0       0       0
  1765 ;;      Temps:          0       0       4       0       0
  1766 ;;      Totals:         0       0       8       0       0
  1767 ;;Total ram usage:        8 bytes
  1768 ;; Hardware stack levels used:    1
  1769 ;; Hardware stack levels required when called:    5
  1770 ;; This function calls:
  1771 ;;		___lldiv
  1772 ;; This function is called by:
  1773 ;;		_main
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777                           
  1778                           ;psect for function _Init_I2C_M
  1779  0489                     _Init_I2C_M:	
  1780                           
  1781                           ;I2C.c: 12: SSPCON = 0b00101000;
  1782                           
  1783                           ;incstack = 0
  1784                           ; Regs used in _Init_I2C_M: [wreg+status,2+status,0+pclath+cstack]
  1785  0489  3028               	movlw	40
  1786  048A  1283               	bcf	3,5	;RP0=0, select bank0
  1787  048B  1303               	bcf	3,6	;RP1=0, select bank0
  1788  048C  0094               	movwf	20	;volatile
  1789                           
  1790                           ;I2C.c: 13: SSPCON2 = 0;
  1791  048D  1683               	bsf	3,5	;RP0=1, select bank1
  1792  048E  1303               	bcf	3,6	;RP1=0, select bank1
  1793  048F  0191               	clrf	17	;volatile
  1794                           
  1795                           ;I2C.c: 14: SSPADD = (10000000/(4*c))-1;
  1796  0490  084C               	movf	Init_I2C_M@c^(0+128),w
  1797  0491  00D0               	movwf	??_Init_I2C_M^(0+128)
  1798  0492  084D               	movf	(Init_I2C_M@c+1)^(0+128),w
  1799  0493  00D1               	movwf	(??_Init_I2C_M^(0+128)+1)
  1800  0494  084E               	movf	(Init_I2C_M@c+2)^(0+128),w
  1801  0495  00D2               	movwf	(??_Init_I2C_M^(0+128)+2)
  1802  0496  084F               	movf	(Init_I2C_M@c+3)^(0+128),w
  1803  0497  00D3               	movwf	(??_Init_I2C_M^(0+128)+3)
  1804  0498  3002               	movlw	2
  1805  0499                     u875:	
  1806  0499  1003               	clrc
  1807  049A  0DD0               	rlf	??_Init_I2C_M^(0+128),f
  1808  049B  0DD1               	rlf	(??_Init_I2C_M^(0+128)+1),f
  1809  049C  0DD2               	rlf	(??_Init_I2C_M^(0+128)+2),f
  1810  049D  0DD3               	rlf	(??_Init_I2C_M^(0+128)+3),f
  1811  049E  3EFF               	addlw	-1
  1812  049F  1D03               	skipz
  1813  04A0  2C99               	goto	u875
  1814  04A1  0853               	movf	(??_Init_I2C_M+3)^(0+128),w
  1815  04A2  00C1               	movwf	(___lldiv@divisor+3)^(0+128)
  1816  04A3  0852               	movf	(??_Init_I2C_M+2)^(0+128),w
  1817  04A4  00C0               	movwf	(___lldiv@divisor+2)^(0+128)
  1818  04A5  0851               	movf	(??_Init_I2C_M+1)^(0+128),w
  1819  04A6  00BF               	movwf	(___lldiv@divisor+1)^(0+128)
  1820  04A7  0850               	movf	??_Init_I2C_M^(0+128),w
  1821  04A8  00BE               	movwf	___lldiv@divisor^(0+128)
  1822  04A9  3000               	movlw	0
  1823  04AA  00C5               	movwf	(___lldiv@dividend+3)^(0+128)
  1824  04AB  3098               	movlw	152
  1825  04AC  00C4               	movwf	(___lldiv@dividend+2)^(0+128)
  1826  04AD  3096               	movlw	150
  1827  04AE  00C3               	movwf	(___lldiv@dividend+1)^(0+128)
  1828  04AF  3080               	movlw	128
  1829  04B0  00C2               	movwf	___lldiv@dividend^(0+128)
  1830  04B1  120A  118A  23D1   	fcall	___lldiv
  1831  04B4  1683               	bsf	3,5	;RP0=1, select bank1
  1832  04B5  1303               	bcf	3,6	;RP1=0, select bank1
  1833  04B6  083E               	movf	?___lldiv^(0+128),w
  1834  04B7  3EFF               	addlw	255
  1835  04B8  0093               	movwf	19	;volatile
  1836                           
  1837                           ;I2C.c: 15: SSPSTAT = 0;
  1838  04B9  0194               	clrf	20	;volatile
  1839  04BA  0008               	return
  1840  04BB                     __end_of_Init_I2C_M:	
  1841                           
  1842                           	psect	text4
  1843  03D1                     __ptext4:	
  1844 ;; *************** function ___lldiv *****************
  1845 ;; Defined at:
  1846 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;  divisor         4    0[BANK1 ] unsigned long 
  1849 ;;  dividend        4    4[BANK1 ] unsigned long 
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;  quotient        4    9[BANK1 ] unsigned long 
  1852 ;;  counter         1   13[BANK1 ] unsigned char 
  1853 ;; Return value:  Size  Location     Type
  1854 ;;                  4    0[BANK1 ] unsigned long 
  1855 ;; Registers used:
  1856 ;;		wreg, status,2, status,0
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1862 ;;      Params:         0       0       8       0       0
  1863 ;;      Locals:         0       0       5       0       0
  1864 ;;      Temps:          0       0       1       0       0
  1865 ;;      Totals:         0       0      14       0       0
  1866 ;;Total ram usage:       14 bytes
  1867 ;; Hardware stack levels used:    1
  1868 ;; Hardware stack levels required when called:    4
  1869 ;; This function calls:
  1870 ;;		Nothing
  1871 ;; This function is called by:
  1872 ;;		_Init_I2C_M
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           
  1877                           ;psect for function ___lldiv
  1878  03D1                     ___lldiv:	
  1879                           
  1880                           ;incstack = 0
  1881                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1882  03D1  3000               	movlw	0
  1883  03D2  1683               	bsf	3,5	;RP0=1, select bank1
  1884  03D3  1303               	bcf	3,6	;RP1=0, select bank1
  1885  03D4  00CA               	movwf	(___lldiv@quotient+3)^(0+128)
  1886  03D5  3000               	movlw	0
  1887  03D6  00C9               	movwf	(___lldiv@quotient+2)^(0+128)
  1888  03D7  3000               	movlw	0
  1889  03D8  00C8               	movwf	(___lldiv@quotient+1)^(0+128)
  1890  03D9  3000               	movlw	0
  1891  03DA  00C7               	movwf	___lldiv@quotient^(0+128)
  1892  03DB  0841               	movf	(___lldiv@divisor+3)^(0+128),w
  1893  03DC  0440               	iorwf	(___lldiv@divisor+2)^(0+128),w
  1894  03DD  043F               	iorwf	(___lldiv@divisor+1)^(0+128),w
  1895  03DE  043E               	iorwf	___lldiv@divisor^(0+128),w
  1896  03DF  1903               	skipnz
  1897  03E0  2C28               	goto	l1397
  1898  03E1  01CB               	clrf	___lldiv@counter^(0+128)
  1899  03E2  0ACB               	incf	___lldiv@counter^(0+128),f
  1900  03E3                     l1383:	
  1901  03E3  1BC1               	btfsc	(___lldiv@divisor+3)^(0+128),7
  1902  03E4  2BF3               	goto	l1385
  1903  03E5  3001               	movlw	1
  1904  03E6  00C6               	movwf	??___lldiv^(0+128)
  1905  03E7                     u715:	
  1906  03E7  1003               	clrc
  1907  03E8  0DBE               	rlf	___lldiv@divisor^(0+128),f
  1908  03E9  0DBF               	rlf	(___lldiv@divisor+1)^(0+128),f
  1909  03EA  0DC0               	rlf	(___lldiv@divisor+2)^(0+128),f
  1910  03EB  0DC1               	rlf	(___lldiv@divisor+3)^(0+128),f
  1911  03EC  0BC6               	decfsz	??___lldiv^(0+128),f
  1912  03ED  2BE7               	goto	u715
  1913  03EE  3001               	movlw	1
  1914  03EF  00C6               	movwf	??___lldiv^(0+128)
  1915  03F0  0846               	movf	??___lldiv^(0+128),w
  1916  03F1  07CB               	addwf	___lldiv@counter^(0+128),f
  1917  03F2  2BE3               	goto	l1383
  1918  03F3                     l1385:	
  1919  03F3  3001               	movlw	1
  1920  03F4  00C6               	movwf	??___lldiv^(0+128)
  1921  03F5                     u735:	
  1922  03F5  1003               	clrc
  1923  03F6  0DC7               	rlf	___lldiv@quotient^(0+128),f
  1924  03F7  0DC8               	rlf	(___lldiv@quotient+1)^(0+128),f
  1925  03F8  0DC9               	rlf	(___lldiv@quotient+2)^(0+128),f
  1926  03F9  0DCA               	rlf	(___lldiv@quotient+3)^(0+128),f
  1927  03FA  0BC6               	decfsz	??___lldiv^(0+128),f
  1928  03FB  2BF5               	goto	u735
  1929  03FC  0841               	movf	(___lldiv@divisor+3)^(0+128),w
  1930  03FD  0245               	subwf	(___lldiv@dividend+3)^(0+128),w
  1931  03FE  1D03               	skipz
  1932  03FF  2C0A               	goto	u745
  1933  0400  0840               	movf	(___lldiv@divisor+2)^(0+128),w
  1934  0401  0244               	subwf	(___lldiv@dividend+2)^(0+128),w
  1935  0402  1D03               	skipz
  1936  0403  2C0A               	goto	u745
  1937  0404  083F               	movf	(___lldiv@divisor+1)^(0+128),w
  1938  0405  0243               	subwf	(___lldiv@dividend+1)^(0+128),w
  1939  0406  1D03               	skipz
  1940  0407  2C0A               	goto	u745
  1941  0408  083E               	movf	___lldiv@divisor^(0+128),w
  1942  0409  0242               	subwf	___lldiv@dividend^(0+128),w
  1943  040A                     u745:	
  1944  040A  1C03               	skipc
  1945  040B  2C1B               	goto	l1393
  1946  040C  083E               	movf	___lldiv@divisor^(0+128),w
  1947  040D  02C2               	subwf	___lldiv@dividend^(0+128),f
  1948  040E  083F               	movf	(___lldiv@divisor+1)^(0+128),w
  1949  040F  1C03               	skipc
  1950  0410  0F3F               	incfsz	(___lldiv@divisor+1)^(0+128),w
  1951  0411  02C3               	subwf	(___lldiv@dividend+1)^(0+128),f
  1952  0412  0840               	movf	(___lldiv@divisor+2)^(0+128),w
  1953  0413  1C03               	skipc
  1954  0414  0F40               	incfsz	(___lldiv@divisor+2)^(0+128),w
  1955  0415  02C4               	subwf	(___lldiv@dividend+2)^(0+128),f
  1956  0416  0841               	movf	(___lldiv@divisor+3)^(0+128),w
  1957  0417  1C03               	skipc
  1958  0418  0F41               	incfsz	(___lldiv@divisor+3)^(0+128),w
  1959  0419  02C5               	subwf	(___lldiv@dividend+3)^(0+128),f
  1960  041A  1447               	bsf	___lldiv@quotient^(0+128),0
  1961  041B                     l1393:	
  1962  041B  3001               	movlw	1
  1963  041C                     u755:	
  1964  041C  1003               	clrc
  1965  041D  0CC1               	rrf	(___lldiv@divisor+3)^(0+128),f
  1966  041E  0CC0               	rrf	(___lldiv@divisor+2)^(0+128),f
  1967  041F  0CBF               	rrf	(___lldiv@divisor+1)^(0+128),f
  1968  0420  0CBE               	rrf	___lldiv@divisor^(0+128),f
  1969  0421  3EFF               	addlw	-1
  1970  0422  1D03               	skipz
  1971  0423  2C1C               	goto	u755
  1972  0424  3001               	movlw	1
  1973  0425  02CB               	subwf	___lldiv@counter^(0+128),f
  1974  0426  1D03               	btfss	3,2
  1975  0427  2BF3               	goto	l1385
  1976  0428                     l1397:	
  1977  0428  084A               	movf	(___lldiv@quotient+3)^(0+128),w
  1978  0429  00C1               	movwf	(?___lldiv+3)^(0+128)
  1979  042A  0849               	movf	(___lldiv@quotient+2)^(0+128),w
  1980  042B  00C0               	movwf	(?___lldiv+2)^(0+128)
  1981  042C  0848               	movf	(___lldiv@quotient+1)^(0+128),w
  1982  042D  00BF               	movwf	(?___lldiv+1)^(0+128)
  1983  042E  0847               	movf	___lldiv@quotient^(0+128),w
  1984  042F  00BE               	movwf	?___lldiv^(0+128)
  1985  0430  0008               	return
  1986  0431                     __end_of___lldiv:	
  1987                           
  1988                           	psect	text5
  1989  0129                     __ptext5:	
  1990 ;; *************** function _InterReceiver *****************
  1991 ;; Defined at:
  1992 ;;		line 88 in file "UART.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;		None
  1995 ;; Auto vars:     Size  Location     Type
  1996 ;;  i               2   59[BANK0 ] int 
  1997 ;;  EEPROMTestDa    5   54[BANK0 ] unsigned char [5]
  1998 ;;  EEPROMCmdDat    2   52[BANK0 ] unsigned int 
  1999 ;;  EEPROMCmdDat    0   20[BANK0 ] unsigned char [0]
  2000 ;;  RXDATA         32   20[BANK0 ] unsigned char [32]
  2001 ;; Return value:  Size  Location     Type
  2002 ;;                  1    wreg      void 
  2003 ;; Registers used:
  2004 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2010 ;;      Params:         0       0       0       0       0
  2011 ;;      Locals:         0      41       0       0       0
  2012 ;;      Temps:          0       7       0       0       0
  2013 ;;      Totals:         0      48       0       0       0
  2014 ;;Total ram usage:       48 bytes
  2015 ;; Hardware stack levels used:    1
  2016 ;; Hardware stack levels required when called:    3
  2017 ;; This function calls:
  2018 ;;		_EEPROM_Read
  2019 ;;		_SendPacket
  2020 ;;		_getch
  2021 ;; This function is called by:
  2022 ;;		Interrupt level 1
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           
  2026                           
  2027                           ;psect for function _InterReceiver
  2028  0129                     _InterReceiver:	
  2029                           
  2030                           ;UART.c: 89: UBYTE RXDATA[32];
  2031                           ;UART.c: 90: if (RCIF == 1) {
  2032  0129  1E8C               	btfss	12,5	;volatile
  2033  012A  29F7               	goto	i1l94
  2034                           
  2035                           ;UART.c: 93: RXDATA[0] = getch();
  2036  012B  120A  118A  2585  120A  118A  	fcall	_getch
  2037  0130  1283               	bcf	3,5	;RP0=0, select bank0
  2038  0131  1303               	bcf	3,6	;RP1=0, select bank0
  2039  0132  00AD               	movwf	??_InterReceiver
  2040  0133  082D               	movf	??_InterReceiver,w
  2041  0134  00B4               	movwf	InterReceiver@RXDATA
  2042                           
  2043                           ;UART.c: 95: if (RXDATA[0] == 0x74){
  2044  0135  3074               	movlw	116
  2045  0136  0634               	xorwf	InterReceiver@RXDATA,w
  2046  0137  1D03               	btfss	3,2
  2047  0138  29F6               	goto	i1l90
  2048                           
  2049                           ;UART.c: 96: RB1 = 1;
  2050  0139  1486               	bsf	6,1	;volatile
  2051                           
  2052                           ;UART.c: 97: RXDATA[1] = getch();
  2053  013A  120A  118A  2585  120A  118A  	fcall	_getch
  2054  013F  1283               	bcf	3,5	;RP0=0, select bank0
  2055  0140  1303               	bcf	3,6	;RP1=0, select bank0
  2056  0141  00AD               	movwf	??_InterReceiver
  2057  0142  082D               	movf	??_InterReceiver,w
  2058  0143  00B5               	movwf	InterReceiver@RXDATA+1
  2059                           
  2060                           ;UART.c: 98: RXDATA[2] = getch();
  2061  0144  120A  118A  2585  120A  118A  	fcall	_getch
  2062  0149  1283               	bcf	3,5	;RP0=0, select bank0
  2063  014A  1303               	bcf	3,6	;RP1=0, select bank0
  2064  014B  00AD               	movwf	??_InterReceiver
  2065  014C  082D               	movf	??_InterReceiver,w
  2066  014D  00B6               	movwf	InterReceiver@RXDATA+2
  2067                           
  2068                           ;UART.c: 99: RCIF = 0 ;
  2069  014E  128C               	bcf	12,5	;volatile
  2070                           
  2071                           ;UART.c: 101: _delay((unsigned long)((200)*(10000000/4000.0)));
  2072  014F  3003               	movlw	3
  2073  0150  1283               	bcf	3,5	;RP0=0, select bank0
  2074  0151  1303               	bcf	3,6	;RP1=0, select bank0
  2075  0152  00AF               	movwf	??_InterReceiver+2
  2076  0153  308A               	movlw	138
  2077  0154  00AE               	movwf	??_InterReceiver+1
  2078  0155  3055               	movlw	85
  2079  0156  00AD               	movwf	??_InterReceiver
  2080  0157                     u102_27:	
  2081  0157  0BAD               	decfsz	??_InterReceiver,f
  2082  0158  2957               	goto	u102_27
  2083  0159  0BAE               	decfsz	??_InterReceiver+1,f
  2084  015A  2957               	goto	u102_27
  2085  015B  0BAF               	decfsz	??_InterReceiver+2,f
  2086  015C  2957               	goto	u102_27
  2087                           
  2088                           ;UART.c: 102: UBYTE EEPROMCmdData[];
  2089                           ;UART.c: 103: UINT EEPROMCmdDataLength;
  2090                           ;UART.c: 104: EEPROMCmdDataLength = 32;
  2091  015D  3020               	movlw	32
  2092  015E  1283               	bcf	3,5	;RP0=0, select bank0
  2093  015F  1303               	bcf	3,6	;RP1=0, select bank0
  2094  0160  00D4               	movwf	InterReceiver@EEPROMCmdDataLength
  2095  0161  3000               	movlw	0
  2096  0162  00D5               	movwf	InterReceiver@EEPROMCmdDataLength+1
  2097                           
  2098                           ;UART.c: 105: EEPROM_Read(0x50,RXDATA[1],RXDATA[2], EEPROMCmdData,EEPROMCmdDataLength);
  2099  0163  0835               	movf	InterReceiver@RXDATA+1,w
  2100  0164  00AD               	movwf	??_InterReceiver
  2101  0165  082D               	movf	??_InterReceiver,w
  2102  0166  00F3               	movwf	EEPROM_Read@high_address
  2103  0167  0836               	movf	InterReceiver@RXDATA+2,w
  2104  0168  00AE               	movwf	??_InterReceiver+1
  2105  0169  082E               	movf	??_InterReceiver+1,w
  2106  016A  00F4               	movwf	EEPROM_Read@low_address
  2107  016B  3034               	movlw	low InterReceiver@EEPROMCmdData
  2108  016C  00F5               	movwf	EEPROM_Read@ReadData
  2109  016D  3000               	movlw	high InterReceiver@EEPROMCmdData
  2110  016E  00F6               	movwf	EEPROM_Read@ReadData+1
  2111  016F  0854               	movf	InterReceiver@EEPROMCmdDataLength,w
  2112  0170  00F7               	movwf	EEPROM_Read@EEPROMDataLength
  2113  0171  0855               	movf	InterReceiver@EEPROMCmdDataLength+1,w
  2114  0172  00F8               	movwf	EEPROM_Read@EEPROMDataLength+1
  2115  0173  3050               	movlw	80
  2116  0174  120A  118A  204C  120A  118A  	fcall	_EEPROM_Read
  2117                           
  2118                           ;UART.c: 106: _delay((unsigned long)((200)*(10000000/4000.0)));
  2119  0179  3003               	movlw	3
  2120  017A  1283               	bcf	3,5	;RP0=0, select bank0
  2121  017B  1303               	bcf	3,6	;RP1=0, select bank0
  2122  017C  00AF               	movwf	??_InterReceiver+2
  2123  017D  308A               	movlw	138
  2124  017E  00AE               	movwf	??_InterReceiver+1
  2125  017F  3055               	movlw	85
  2126  0180  00AD               	movwf	??_InterReceiver
  2127  0181                     u103_27:	
  2128  0181  0BAD               	decfsz	??_InterReceiver,f
  2129  0182  2981               	goto	u103_27
  2130  0183  0BAE               	decfsz	??_InterReceiver+1,f
  2131  0184  2981               	goto	u103_27
  2132  0185  0BAF               	decfsz	??_InterReceiver+2,f
  2133  0186  2981               	goto	u103_27
  2134                           
  2135                           ;UART.c: 107: RC0 = 1;
  2136  0187  1283               	bcf	3,5	;RP0=0, select bank0
  2137  0188  1303               	bcf	3,6	;RP1=0, select bank0
  2138  0189  1407               	bsf	7,0	;volatile
  2139                           
  2140                           ;UART.c: 108: RB3 = 0;
  2141  018A  1186               	bcf	6,3	;volatile
  2142                           
  2143                           ;UART.c: 109: UBYTE EEPROMTestData[5];
  2144                           ;UART.c: 110: EEPROMTestData[0] = 'u';
  2145  018B  3075               	movlw	117
  2146  018C  00AD               	movwf	??_InterReceiver
  2147  018D  082D               	movf	??_InterReceiver,w
  2148  018E  00D6               	movwf	InterReceiver@EEPROMTestData
  2149                           
  2150                           ;UART.c: 111: EEPROMTestData[1] = 'n';
  2151  018F  306E               	movlw	110
  2152  0190  00AD               	movwf	??_InterReceiver
  2153  0191  082D               	movf	??_InterReceiver,w
  2154  0192  00D7               	movwf	InterReceiver@EEPROMTestData+1
  2155                           
  2156                           ;UART.c: 112: EEPROMTestData[2] = 'k';
  2157  0193  306B               	movlw	107
  2158  0194  00AD               	movwf	??_InterReceiver
  2159  0195  082D               	movf	??_InterReceiver,w
  2160  0196  00D8               	movwf	InterReceiver@EEPROMTestData+2
  2161                           
  2162                           ;UART.c: 113: EEPROMTestData[3] = 'o';
  2163  0197  306F               	movlw	111
  2164  0198  00AD               	movwf	??_InterReceiver
  2165  0199  082D               	movf	??_InterReceiver,w
  2166  019A  00D9               	movwf	InterReceiver@EEPROMTestData+3
  2167                           
  2168                           ;UART.c: 114: EEPROMTestData[4] = 0x0d;
  2169  019B  300D               	movlw	13
  2170  019C  00AD               	movwf	??_InterReceiver
  2171  019D  082D               	movf	??_InterReceiver,w
  2172  019E  00DA               	movwf	InterReceiver@EEPROMTestData+4
  2173                           
  2174                           ;UART.c: 115: for(int i = 0; i<5;i++){
  2175  019F  01DB               	clrf	InterReceiver@i
  2176  01A0  01DC               	clrf	InterReceiver@i+1
  2177  01A1  085C               	movf	InterReceiver@i+1,w
  2178  01A2  3A80               	xorlw	128
  2179  01A3  00FF               	movwf	127
  2180  01A4  3080               	movlw	128
  2181  01A5  027F               	subwf	127,w
  2182  01A6  1D03               	skipz
  2183  01A7  29AA               	goto	u90_25
  2184  01A8  3005               	movlw	5
  2185  01A9  025B               	subwf	InterReceiver@i,w
  2186  01AA                     u90_25:	
  2187  01AA  1803               	btfsc	3,0
  2188  01AB  29F1               	goto	i1l92
  2189  01AC                     i1l1603:	
  2190                           
  2191                           ;UART.c: 116: SendPacket(EEPROMCmdData);
  2192  01AC  3034               	movlw	low InterReceiver@EEPROMCmdData
  2193  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  2194  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  2195  01AF  00A0               	movwf	SendPacket@eDataField
  2196  01B0  3000               	movlw	high InterReceiver@EEPROMCmdData
  2197  01B1  00A1               	movwf	SendPacket@eDataField+1
  2198  01B2  120A  118A  2202  120A  118A  	fcall	_SendPacket
  2199                           
  2200                           ;UART.c: 117: _delay((unsigned long)((300)*(10000000/4000.0)));
  2201  01B7  3004               	movlw	4
  2202  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  2203  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  2204  01BA  00AF               	movwf	??_InterReceiver+2
  2205  01BB  30CF               	movlw	207
  2206  01BC  00AE               	movwf	??_InterReceiver+1
  2207  01BD  3001               	movlw	1
  2208  01BE  00AD               	movwf	??_InterReceiver
  2209  01BF                     u104_27:	
  2210  01BF  0BAD               	decfsz	??_InterReceiver,f
  2211  01C0  29BF               	goto	u104_27
  2212  01C1  0BAE               	decfsz	??_InterReceiver+1,f
  2213  01C2  29BF               	goto	u104_27
  2214  01C3  0BAF               	decfsz	??_InterReceiver+2,f
  2215  01C4  29BF               	goto	u104_27
  2216                           
  2217                           ;UART.c: 118: SendPacket(EEPROMTestData);
  2218  01C5  3056               	movlw	(low (InterReceiver@EEPROMTestData| 0))& (0+255)
  2219  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  2220  01C7  1303               	bcf	3,6	;RP1=0, select bank0
  2221  01C8  00A0               	movwf	SendPacket@eDataField
  2222  01C9  3000               	movlw	0
  2223  01CA  00A1               	movwf	SendPacket@eDataField+1
  2224  01CB  120A  118A  2202  120A  118A  	fcall	_SendPacket
  2225                           
  2226                           ;UART.c: 119: _delay((unsigned long)((300)*(10000000/4000.0)));
  2227  01D0  3004               	movlw	4
  2228  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  2229  01D2  1303               	bcf	3,6	;RP1=0, select bank0
  2230  01D3  00AF               	movwf	??_InterReceiver+2
  2231  01D4  30CF               	movlw	207
  2232  01D5  00AE               	movwf	??_InterReceiver+1
  2233  01D6  3001               	movlw	1
  2234  01D7  00AD               	movwf	??_InterReceiver
  2235  01D8                     u105_27:	
  2236  01D8  0BAD               	decfsz	??_InterReceiver,f
  2237  01D9  29D8               	goto	u105_27
  2238  01DA  0BAE               	decfsz	??_InterReceiver+1,f
  2239  01DB  29D8               	goto	u105_27
  2240  01DC  0BAF               	decfsz	??_InterReceiver+2,f
  2241  01DD  29D8               	goto	u105_27
  2242  01DE  3001               	movlw	1
  2243  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  2244  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  2245  01E1  07DB               	addwf	InterReceiver@i,f
  2246  01E2  1803               	skipnc
  2247  01E3  0ADC               	incf	InterReceiver@i+1,f
  2248  01E4  3000               	movlw	0
  2249  01E5  07DC               	addwf	InterReceiver@i+1,f
  2250  01E6  085C               	movf	InterReceiver@i+1,w
  2251  01E7  3A80               	xorlw	128
  2252  01E8  00FF               	movwf	127
  2253  01E9  3080               	movlw	128
  2254  01EA  027F               	subwf	127,w
  2255  01EB  1D03               	skipz
  2256  01EC  29EF               	goto	u91_25
  2257  01ED  3005               	movlw	5
  2258  01EE  025B               	subwf	InterReceiver@i,w
  2259  01EF                     u91_25:	
  2260  01EF  1C03               	skipc
  2261  01F0  29AC               	goto	i1l1603
  2262  01F1                     i1l92:	
  2263                           
  2264                           ;UART.c: 120: }
  2265                           ;UART.c: 121: RC0 = 0;
  2266  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  2267  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  2268  01F3  1007               	bcf	7,0	;volatile
  2269                           
  2270                           ;UART.c: 122: RB1 = 0;
  2271  01F4  1086               	bcf	6,1	;volatile
  2272                           
  2273                           ;UART.c: 123: }else{
  2274  01F5  29F7               	goto	i1l94
  2275  01F6                     i1l90:	
  2276                           
  2277                           ;UART.c: 124: RCIF = 0 ;
  2278  01F6  128C               	bcf	12,5	;volatile
  2279  01F7                     i1l94:	
  2280  01F7  0833               	movf	??_InterReceiver+6,w
  2281  01F8  00FF               	movwf	127
  2282  01F9  0832               	movf	??_InterReceiver+5,w
  2283  01FA  008A               	movwf	10
  2284  01FB  0831               	movf	??_InterReceiver+4,w
  2285  01FC  0084               	movwf	4
  2286  01FD  0E30               	swapf	(??_InterReceiver+3)^0,w
  2287  01FE  0083               	movwf	3
  2288  01FF  0EFE               	swapf	126,f
  2289  0200  0E7E               	swapf	126,w
  2290  0201  0009               	retfie
  2291  0202                     __end_of_InterReceiver:	
  2292                           
  2293                           	psect	intentry
  2294  0004                     __pintentry:	
  2295                           ;incstack = 0
  2296                           ; Regs used in _InterReceiver: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2297                           
  2298  0004                     interrupt_function:	
  2299  007E                     saved_w	set	btemp
  2300  0004  00FE               	movwf	btemp
  2301  0005  0E03               	swapf	3,w
  2302  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2303  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2304  0008  00B0               	movwf	??_InterReceiver+3
  2305  0009  0804               	movf	4,w
  2306  000A  00B1               	movwf	??_InterReceiver+4
  2307  000B  080A               	movf	10,w
  2308  000C  00B2               	movwf	??_InterReceiver+5
  2309  000D  087F               	movf	btemp+1,w
  2310  000E  00B3               	movwf	??_InterReceiver+6
  2311  000F  120A  118A  2929   	ljmp	_InterReceiver
  2312                           
  2313                           	psect	text6
  2314  0585                     __ptext6:	
  2315 ;; *************** function _getch *****************
  2316 ;; Defined at:
  2317 ;;		line 26 in file "UART.c"
  2318 ;; Parameters:    Size  Location     Type
  2319 ;;		None
  2320 ;; Auto vars:     Size  Location     Type
  2321 ;;		None
  2322 ;; Return value:  Size  Location     Type
  2323 ;;                  1    wreg      unsigned char 
  2324 ;; Registers used:
  2325 ;;		wreg
  2326 ;; Tracked objects:
  2327 ;;		On entry : 0/0
  2328 ;;		On exit  : 0/0
  2329 ;;		Unchanged: 0/0
  2330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2331 ;;      Params:         0       0       0       0       0
  2332 ;;      Locals:         0       0       0       0       0
  2333 ;;      Temps:          0       0       0       0       0
  2334 ;;      Totals:         0       0       0       0       0
  2335 ;;Total ram usage:        0 bytes
  2336 ;; Hardware stack levels used:    1
  2337 ;; This function calls:
  2338 ;;		Nothing
  2339 ;; This function is called by:
  2340 ;;		_InterReceiver
  2341 ;; This function uses a non-reentrant model
  2342 ;;
  2343                           
  2344                           
  2345                           ;psect for function _getch
  2346  0585                     _getch:	
  2347                           
  2348                           ;UART.c: 28: if(FERR || OERR)
  2349                           
  2350                           ;incstack = 0
  2351                           ; Regs used in _getch: [wreg]
  2352  0585  1283               	bcf	3,5	;RP0=0, select bank0
  2353  0586  1303               	bcf	3,6	;RP1=0, select bank0
  2354  0587  1918               	btfsc	24,2	;volatile
  2355  0588  2D8B               	goto	i1l74
  2356  0589  1C98               	btfss	24,1	;volatile
  2357  058A  2D90               	goto	i1l75
  2358  058B                     i1l74:	
  2359                           
  2360                           ;UART.c: 29: {
  2361                           ;UART.c: 35: CREN = 0;
  2362  058B  1218               	bcf	24,4	;volatile
  2363                           
  2364                           ;UART.c: 36: __nop();
  2365  058C  0000               	nop
  2366                           
  2367                           ;UART.c: 37: CREN = 1;
  2368  058D  1283               	bcf	3,5	;RP0=0, select bank0
  2369  058E  1303               	bcf	3,6	;RP1=0, select bank0
  2370  058F  1618               	bsf	24,4	;volatile
  2371  0590                     i1l75:	
  2372                           ;UART.c: 38: }
  2373                           ;UART.c: 39: while(!RCIF);
  2374                           
  2375  0590  1E8C               	btfss	12,5	;volatile
  2376  0591  2D90               	goto	i1l75
  2377                           
  2378                           ;UART.c: 43: return RCREG;
  2379  0592  081A               	movf	26,w	;volatile
  2380  0593  0008               	return
  2381  0594                     __end_of_getch:	
  2382                           
  2383                           	psect	text7
  2384  0202                     __ptext7:	
  2385 ;; *************** function _SendPacket *****************
  2386 ;; Defined at:
  2387 ;;		line 59 in file "encode_AX25.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;  eDataField      2    0[BANK0 ] PTR unsigned char 
  2390 ;;		 -> InterReceiver@EEPROMTestData(5), InterReceiver@EEPROMCmdData(0), 
  2391 ;; Auto vars:     Size  Location     Type
  2392 ;;  i               2   11[BANK0 ] unsigned int 
  2393 ;;  i               2    9[BANK0 ] unsigned int 
  2394 ;;  i               2    7[BANK0 ] unsigned int 
  2395 ;;  Packetnum       2    5[BANK0 ] unsigned int 
  2396 ;; Return value:  Size  Location     Type
  2397 ;;                  1    wreg      void 
  2398 ;; Registers used:
  2399 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2405 ;;      Params:         0       2       0       0       0
  2406 ;;      Locals:         0       8       0       0       0
  2407 ;;      Temps:          0       3       0       0       0
  2408 ;;      Totals:         0      13       0       0       0
  2409 ;;Total ram usage:       13 bytes
  2410 ;; Hardware stack levels used:    1
  2411 ;; Hardware stack levels required when called:    2
  2412 ;; This function calls:
  2413 ;;		_Packetmaker
  2414 ;;		_SendByte
  2415 ;; This function is called by:
  2416 ;;		_InterReceiver
  2417 ;; This function uses a non-reentrant model
  2418 ;;
  2419                           
  2420                           
  2421                           ;psect for function _SendPacket
  2422  0202                     _SendPacket:	
  2423                           
  2424                           ;encode_AX25.c: 62: _delay((unsigned long)((200)*(10000000/4000.0)));
  2425                           
  2426                           ;incstack = 0
  2427                           ; Regs used in _SendPacket: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2428  0202  3003               	movlw	3
  2429  0203  1283               	bcf	3,5	;RP0=0, select bank0
  2430  0204  1303               	bcf	3,6	;RP1=0, select bank0
  2431  0205  00A4               	movwf	??_SendPacket+2
  2432  0206  308A               	movlw	138
  2433  0207  00A3               	movwf	??_SendPacket+1
  2434  0208  3055               	movlw	85
  2435  0209  00A2               	movwf	??_SendPacket
  2436  020A                     u106_27:	
  2437  020A  0BA2               	decfsz	??_SendPacket,f
  2438  020B  2A0A               	goto	u106_27
  2439  020C  0BA3               	decfsz	??_SendPacket+1,f
  2440  020D  2A0A               	goto	u106_27
  2441  020E  0BA4               	decfsz	??_SendPacket+2,f
  2442  020F  2A0A               	goto	u106_27
  2443                           
  2444                           ;encode_AX25.c: 63: UINT Packetnum;
  2445                           ;encode_AX25.c: 64: Packetnum = 0;
  2446  0210  1283               	bcf	3,5	;RP0=0, select bank0
  2447  0211  1303               	bcf	3,6	;RP1=0, select bank0
  2448  0212  01A5               	clrf	SendPacket@Packetnum
  2449  0213  01A6               	clrf	SendPacket@Packetnum+1
  2450                           
  2451                           ;encode_AX25.c: 65: Packetnum = Packetmaker(eDataField);
  2452  0214  0820               	movf	SendPacket@eDataField,w
  2453  0215  00F0               	movwf	Packetmaker@eDataField
  2454  0216  0821               	movf	SendPacket@eDataField+1,w
  2455  0217  00F1               	movwf	Packetmaker@eDataField+1
  2456  0218  120A  118A  22BA  120A  118A  	fcall	_Packetmaker
  2457  021D  0871               	movf	?_Packetmaker+1,w
  2458  021E  1283               	bcf	3,5	;RP0=0, select bank0
  2459  021F  1303               	bcf	3,6	;RP1=0, select bank0
  2460  0220  00A6               	movwf	SendPacket@Packetnum+1
  2461  0221  0870               	movf	?_Packetmaker,w
  2462  0222  00A5               	movwf	SendPacket@Packetnum
  2463                           
  2464                           ;encode_AX25.c: 66: ebitstatus = 1;
  2465  0223  3001               	movlw	1
  2466  0224  00DD               	movwf	_ebitstatus
  2467  0225  3000               	movlw	0
  2468  0226  00DE               	movwf	_ebitstatus+1
  2469                           
  2470                           ;encode_AX25.c: 67: efcslo = efcshi = 0xff;
  2471  0227  30FF               	movlw	255
  2472  0228  00E5               	movwf	_efcshi
  2473  0229  00A2               	movwf	??_SendPacket
  2474  022A  0822               	movf	??_SendPacket,w
  2475  022B  00E6               	movwf	_efcslo
  2476                           
  2477                           ;encode_AX25.c: 68: estuff = 0;
  2478  022C  01DF               	clrf	_estuff
  2479  022D  01E0               	clrf	_estuff+1
  2480                           
  2481                           ;encode_AX25.c: 70: eflag = 1;
  2482  022E  3001               	movlw	1
  2483  022F  00E3               	movwf	_eflag
  2484  0230  3000               	movlw	0
  2485  0231  00E4               	movwf	_eflag+1
  2486                           
  2487                           ;encode_AX25.c: 71: efcsflag = 0;
  2488  0232  01E1               	clrf	_efcsflag
  2489  0233  01E2               	clrf	_efcsflag+1
  2490                           
  2491                           ;encode_AX25.c: 72: for(UINT i=0;i<27;i++){
  2492  0234  01A7               	clrf	SendPacket@i
  2493  0235  01A8               	clrf	SendPacket@i+1
  2494  0236  3000               	movlw	0
  2495  0237  0228               	subwf	SendPacket@i+1,w
  2496  0238  301B               	movlw	27
  2497  0239  1903               	skipnz
  2498  023A  0227               	subwf	SendPacket@i,w
  2499  023B  1803               	btfsc	3,0
  2500  023C  2A52               	goto	i1l1503
  2501  023D                     i1l1497:	
  2502                           
  2503                           ;encode_AX25.c: 73: SendByte(0x7e);
  2504  023D  307E               	movlw	126
  2505  023E  120A  118A  2431  120A  118A  	fcall	_SendByte
  2506  0243  3001               	movlw	1
  2507  0244  1283               	bcf	3,5	;RP0=0, select bank0
  2508  0245  1303               	bcf	3,6	;RP1=0, select bank0
  2509  0246  07A7               	addwf	SendPacket@i,f
  2510  0247  1803               	skipnc
  2511  0248  0AA8               	incf	SendPacket@i+1,f
  2512  0249  3000               	movlw	0
  2513  024A  07A8               	addwf	SendPacket@i+1,f
  2514  024B  3000               	movlw	0
  2515  024C  0228               	subwf	SendPacket@i+1,w
  2516  024D  301B               	movlw	27
  2517  024E  1903               	skipnz
  2518  024F  0227               	subwf	SendPacket@i,w
  2519  0250  1C03               	skipc
  2520  0251  2A3D               	goto	i1l1497
  2521  0252                     i1l1503:	
  2522                           
  2523                           ;encode_AX25.c: 74: }
  2524                           ;encode_AX25.c: 75: eflag = 0;
  2525  0252  01E3               	clrf	_eflag
  2526  0253  01E4               	clrf	_eflag+1
  2527                           
  2528                           ;encode_AX25.c: 77: for(UINT i=0;i<Packetnum;i++){
  2529  0254  01A9               	clrf	SendPacket@i_142
  2530  0255  01AA               	clrf	SendPacket@i_142+1
  2531  0256                     i1l1509:	
  2532  0256  0826               	movf	SendPacket@Packetnum+1,w
  2533  0257  022A               	subwf	SendPacket@i_142+1,w
  2534  0258  1D03               	skipz
  2535  0259  2A5C               	goto	u84_25
  2536  025A  0825               	movf	SendPacket@Packetnum,w
  2537  025B  0229               	subwf	SendPacket@i_142,w
  2538  025C                     u84_25:	
  2539  025C  1803               	btfsc	3,0
  2540  025D  2A71               	goto	i1l1511
  2541                           
  2542                           ;encode_AX25.c: 78: SendByte(ePacket[i]);
  2543  025E  0829               	movf	SendPacket@i_142,w
  2544  025F  3E90               	addlw	(low (_ePacket| (0+256)))& (0+255)
  2545  0260  0084               	movwf	4
  2546  0261  1783               	bsf	3,7	;select IRP bank3
  2547  0262  0800               	movf	0,w
  2548  0263  120A  118A  2431  120A  118A  	fcall	_SendByte
  2549  0268  3001               	movlw	1
  2550  0269  1283               	bcf	3,5	;RP0=0, select bank0
  2551  026A  1303               	bcf	3,6	;RP1=0, select bank0
  2552  026B  07A9               	addwf	SendPacket@i_142,f
  2553  026C  1803               	skipnc
  2554  026D  0AAA               	incf	SendPacket@i_142+1,f
  2555  026E  3000               	movlw	0
  2556  026F  07AA               	addwf	SendPacket@i_142+1,f
  2557  0270  2A56               	goto	i1l1509
  2558  0271                     i1l1511:	
  2559                           
  2560                           ;encode_AX25.c: 79: }
  2561                           ;encode_AX25.c: 83: efcsflag = 1;
  2562  0271  3001               	movlw	1
  2563  0272  00E1               	movwf	_efcsflag
  2564  0273  3000               	movlw	0
  2565  0274  00E2               	movwf	_efcsflag+1
  2566                           
  2567                           ;encode_AX25.c: 84: efcslo = efcslo ^ 0xff;
  2568  0275  09E6               	comf	_efcslo,f
  2569                           
  2570                           ;encode_AX25.c: 85: efcshi = efcshi ^ 0xff;
  2571  0276  09E5               	comf	_efcshi,f
  2572                           
  2573                           ;encode_AX25.c: 86: SendByte(efcslo);
  2574  0277  0866               	movf	_efcslo,w
  2575  0278  120A  118A  2431  120A  118A  	fcall	_SendByte
  2576                           
  2577                           ;encode_AX25.c: 87: SendByte(efcshi);
  2578  027D  1283               	bcf	3,5	;RP0=0, select bank0
  2579  027E  1303               	bcf	3,6	;RP1=0, select bank0
  2580  027F  0865               	movf	_efcshi,w
  2581  0280  120A  118A  2431  120A  118A  	fcall	_SendByte
  2582                           
  2583                           ;encode_AX25.c: 88: efcsflag = 0;
  2584  0285  1283               	bcf	3,5	;RP0=0, select bank0
  2585  0286  1303               	bcf	3,6	;RP1=0, select bank0
  2586  0287  01E1               	clrf	_efcsflag
  2587  0288  01E2               	clrf	_efcsflag+1
  2588                           
  2589                           ;encode_AX25.c: 91: eflag = 1;
  2590  0289  3001               	movlw	1
  2591  028A  00E3               	movwf	_eflag
  2592  028B  3000               	movlw	0
  2593  028C  00E4               	movwf	_eflag+1
  2594                           
  2595                           ;encode_AX25.c: 92: for(UINT i=0;i<6;i++){
  2596  028D  01AB               	clrf	SendPacket@i_143
  2597  028E  01AC               	clrf	SendPacket@i_143+1
  2598  028F  3000               	movlw	0
  2599  0290  022C               	subwf	SendPacket@i_143+1,w
  2600  0291  3006               	movlw	6
  2601  0292  1903               	skipnz
  2602  0293  022B               	subwf	SendPacket@i_143,w
  2603  0294  1803               	btfsc	3,0
  2604  0295  2AAB               	goto	i1l1535
  2605  0296                     i1l1529:	
  2606                           
  2607                           ;encode_AX25.c: 93: SendByte(0x7e);
  2608  0296  307E               	movlw	126
  2609  0297  120A  118A  2431  120A  118A  	fcall	_SendByte
  2610  029C  3001               	movlw	1
  2611  029D  1283               	bcf	3,5	;RP0=0, select bank0
  2612  029E  1303               	bcf	3,6	;RP1=0, select bank0
  2613  029F  07AB               	addwf	SendPacket@i_143,f
  2614  02A0  1803               	skipnc
  2615  02A1  0AAC               	incf	SendPacket@i_143+1,f
  2616  02A2  3000               	movlw	0
  2617  02A3  07AC               	addwf	SendPacket@i_143+1,f
  2618  02A4  3000               	movlw	0
  2619  02A5  022C               	subwf	SendPacket@i_143+1,w
  2620  02A6  3006               	movlw	6
  2621  02A7  1903               	skipnz
  2622  02A8  022B               	subwf	SendPacket@i_143,w
  2623  02A9  1C03               	skipc
  2624  02AA  2A96               	goto	i1l1529
  2625  02AB                     i1l1535:	
  2626                           
  2627                           ;encode_AX25.c: 94: }
  2628                           ;encode_AX25.c: 96: _delay((unsigned long)((200)*(10000000/4000.0)));
  2629  02AB  3003               	movlw	3
  2630  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  2631  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  2632  02AE  00A4               	movwf	??_SendPacket+2
  2633  02AF  308A               	movlw	138
  2634  02B0  00A3               	movwf	??_SendPacket+1
  2635  02B1  3055               	movlw	85
  2636  02B2  00A2               	movwf	??_SendPacket
  2637  02B3                     u107_27:	
  2638  02B3  0BA2               	decfsz	??_SendPacket,f
  2639  02B4  2AB3               	goto	u107_27
  2640  02B5  0BA3               	decfsz	??_SendPacket+1,f
  2641  02B6  2AB3               	goto	u107_27
  2642  02B7  0BA4               	decfsz	??_SendPacket+2,f
  2643  02B8  2AB3               	goto	u107_27
  2644  02B9  0008               	return
  2645  02BA                     __end_of_SendPacket:	
  2646                           
  2647                           	psect	text8
  2648  0431                     __ptext8:	
  2649 ;; *************** function _SendByte *****************
  2650 ;; Defined at:
  2651 ;;		line 101 in file "encode_AX25.c"
  2652 ;; Parameters:    Size  Location     Type
  2653 ;;  byte            1    wreg     unsigned char 
  2654 ;; Auto vars:     Size  Location     Type
  2655 ;;  byte            1    7[COMMON] unsigned char 
  2656 ;;  i               2    5[COMMON] unsigned int 
  2657 ;;  bt              1    8[COMMON] unsigned char 
  2658 ;; Return value:  Size  Location     Type
  2659 ;;                  1    wreg      void 
  2660 ;; Registers used:
  2661 ;;		wreg, status,2, status,0, pclath, cstack
  2662 ;; Tracked objects:
  2663 ;;		On entry : 0/0
  2664 ;;		On exit  : 0/0
  2665 ;;		Unchanged: 0/0
  2666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2667 ;;      Params:         0       0       0       0       0
  2668 ;;      Locals:         4       0       0       0       0
  2669 ;;      Temps:          2       0       0       0       0
  2670 ;;      Totals:         6       0       0       0       0
  2671 ;;Total ram usage:        6 bytes
  2672 ;; Hardware stack levels used:    1
  2673 ;; Hardware stack levels required when called:    1
  2674 ;; This function calls:
  2675 ;;		_fcsbit
  2676 ;;		_flipout
  2677 ;; This function is called by:
  2678 ;;		_SendPacket
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           
  2682                           
  2683                           ;psect for function _SendByte
  2684  0431                     _SendByte:	
  2685                           
  2686                           ;incstack = 0
  2687                           ; Regs used in _SendByte: [wreg+status,2+status,0+pclath+cstack]
  2688                           ;SendByte@byte stored from wreg
  2689  0431  00F7               	movwf	SendByte@byte
  2690                           
  2691                           ;encode_AX25.c: 102: UBYTE bt;
  2692                           ;encode_AX25.c: 103: for(UINT i=0;i<8;i++){
  2693  0432  01F5               	clrf	SendByte@i
  2694  0433  01F6               	clrf	SendByte@i+1
  2695  0434                     L2:	
  2696  0434  3000               	movlw	0
  2697  0435  0276               	subwf	SendByte@i+1,w
  2698  0436  3008               	movlw	8
  2699  0437  1903               	skipnz
  2700  0438  0275               	subwf	SendByte@i,w
  2701  0439  1803               	btfsc	3,0
  2702  043A  0008               	return
  2703                           
  2704                           ;encode_AX25.c: 104: bt = byte & 0x01;
  2705  043B  0877               	movf	SendByte@byte,w
  2706  043C  3901               	andlw	1
  2707  043D  00F3               	movwf	??_SendByte
  2708  043E  0873               	movf	??_SendByte,w
  2709  043F  00F8               	movwf	SendByte@bt
  2710                           
  2711                           ;encode_AX25.c: 106: if(efcsflag == 0 && eflag == 0){
  2712  0440  1283               	bcf	3,5	;RP0=0, select bank0
  2713  0441  1303               	bcf	3,6	;RP1=0, select bank0
  2714  0442  0861               	movf	_efcsflag,w
  2715  0443  0462               	iorwf	_efcsflag+1,w
  2716  0444  1D03               	btfss	3,2
  2717  0445  2C50               	goto	i1l1323
  2718  0446  0863               	movf	_eflag,w
  2719  0447  0464               	iorwf	_eflag+1,w
  2720  0448  1D03               	btfss	3,2
  2721  0449  2C50               	goto	i1l1323
  2722                           
  2723                           ;encode_AX25.c: 107: fcsbit(bt);
  2724  044A  0878               	movf	SendByte@bt,w
  2725  044B  120A  118A  2534  120A  118A  	fcall	_fcsbit
  2726  0450                     i1l1323:	
  2727                           
  2728                           ;encode_AX25.c: 108: }
  2729                           ;encode_AX25.c: 110: if(bt == 0x00){
  2730  0450  0878               	movf	SendByte@bt,w
  2731  0451  1903               	btfsc	3,2
  2732  0452  2C6D               	goto	L1
  2733                           
  2734                           ;encode_AX25.c: 113: estuff ++;
  2735                           
  2736                           ;encode_AX25.c: 112: }else{
  2737                           
  2738                           ;encode_AX25.c: 111: flipout();
  2739  0453  3001               	movlw	1
  2740  0454  1283               	bcf	3,5	;RP0=0, select bank0
  2741  0455  1303               	bcf	3,6	;RP1=0, select bank0
  2742  0456  07DF               	addwf	_estuff,f
  2743  0457  1803               	skipnc
  2744  0458  0AE0               	incf	_estuff+1,f
  2745  0459  3000               	movlw	0
  2746  045A  07E0               	addwf	_estuff+1,f
  2747                           
  2748                           ;encode_AX25.c: 115: if(eflag == 0 && estuff == 5){
  2749  045B  0863               	movf	_eflag,w
  2750  045C  0464               	iorwf	_eflag+1,w
  2751  045D  1D03               	btfss	3,2
  2752  045E  2C72               	goto	i1l1337
  2753  045F  3005               	movlw	5
  2754  0460  065F               	xorwf	_estuff,w
  2755  0461  0460               	iorwf	_estuff+1,w
  2756  0462  1D03               	btfss	3,2
  2757  0463  2C72               	goto	i1l1337
  2758                           
  2759                           ;encode_AX25.c: 116: _delay((unsigned long)((795)*(10000000/4000000.0)));
  2760  0464  3003               	movlw	3
  2761  0465  00F4               	movwf	??_SendByte+1
  2762  0466  3093               	movlw	147
  2763  0467  00F3               	movwf	??_SendByte
  2764  0468                     u108_27:	
  2765  0468  0BF3               	decfsz	??_SendByte,f
  2766  0469  2C68               	goto	u108_27
  2767  046A  0BF4               	decfsz	??_SendByte+1,f
  2768  046B  2C68               	goto	u108_27
  2769  046C  0000               	nop
  2770  046D                     L1:	
  2771                           
  2772                           ;encode_AX25.c: 117: flipout();
  2773  046D  120A  118A  2562  120A  118A  	fcall	_flipout
  2774  0472                     i1l1337:	
  2775                           
  2776                           ;encode_AX25.c: 118: }
  2777                           ;encode_AX25.c: 119: }
  2778                           ;encode_AX25.c: 120: _delay((unsigned long)((795)*(10000000/4000000.0)));
  2779  0472  3003               	movlw	3
  2780  0473  00F4               	movwf	??_SendByte+1
  2781  0474  3093               	movlw	147
  2782  0475  00F3               	movwf	??_SendByte
  2783  0476                     u109_27:	
  2784  0476  0BF3               	decfsz	??_SendByte,f
  2785  0477  2C76               	goto	u109_27
  2786  0478  0BF4               	decfsz	??_SendByte+1,f
  2787  0479  2C76               	goto	u109_27
  2788  047A  0000               	nop
  2789                           
  2790                           ;encode_AX25.c: 121: byte = byte >> 1;
  2791  047B  0877               	movf	SendByte@byte,w
  2792  047C  00F3               	movwf	??_SendByte
  2793  047D  1003               	clrc
  2794  047E  0C73               	rrf	??_SendByte,w
  2795  047F  00F4               	movwf	??_SendByte+1
  2796  0480  0874               	movf	??_SendByte+1,w
  2797  0481  00F7               	movwf	SendByte@byte
  2798  0482  3001               	movlw	1
  2799  0483  07F5               	addwf	SendByte@i,f
  2800  0484  1803               	skipnc
  2801  0485  0AF6               	incf	SendByte@i+1,f
  2802  0486  3000               	movlw	0
  2803  0487  07F6               	addwf	SendByte@i+1,f
  2804  0488  2C34               	goto	L2
  2805  0489                     __end_of_SendByte:	
  2806                           
  2807                           	psect	text9
  2808  0562                     __ptext9:	
  2809 ;; *************** function _flipout *****************
  2810 ;; Defined at:
  2811 ;;		line 125 in file "encode_AX25.c"
  2812 ;; Parameters:    Size  Location     Type
  2813 ;;		None
  2814 ;; Auto vars:     Size  Location     Type
  2815 ;;		None
  2816 ;; Return value:  Size  Location     Type
  2817 ;;                  1    wreg      void 
  2818 ;; Registers used:
  2819 ;;		wreg, status,2, status,0
  2820 ;; Tracked objects:
  2821 ;;		On entry : 0/0
  2822 ;;		On exit  : 0/0
  2823 ;;		Unchanged: 0/0
  2824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2825 ;;      Params:         0       0       0       0       0
  2826 ;;      Locals:         0       0       0       0       0
  2827 ;;      Temps:          0       0       0       0       0
  2828 ;;      Totals:         0       0       0       0       0
  2829 ;;Total ram usage:        0 bytes
  2830 ;; Hardware stack levels used:    1
  2831 ;; This function calls:
  2832 ;;		Nothing
  2833 ;; This function is called by:
  2834 ;;		_SendByte
  2835 ;; This function uses a non-reentrant model
  2836 ;;
  2837                           
  2838                           
  2839                           ;psect for function _flipout
  2840  0562                     _flipout:	
  2841                           
  2842                           ;encode_AX25.c: 126: estuff = 0;
  2843                           
  2844                           ;incstack = 0
  2845                           ; Regs used in _flipout: [wreg+status,2+status,0]
  2846  0562  1283               	bcf	3,5	;RP0=0, select bank0
  2847  0563  1303               	bcf	3,6	;RP1=0, select bank0
  2848  0564  01DF               	clrf	_estuff
  2849  0565  01E0               	clrf	_estuff+1
  2850                           
  2851                           ;encode_AX25.c: 127: if(ebitstatus == 0){
  2852  0566  085D               	movf	_ebitstatus,w
  2853  0567  045E               	iorwf	_ebitstatus+1,w
  2854  0568  1D03               	btfss	3,2
  2855  0569  2D70               	goto	i1l190
  2856                           
  2857                           ;encode_AX25.c: 128: RC5 = 1;
  2858  056A  1687               	bsf	7,5	;volatile
  2859                           
  2860                           ;encode_AX25.c: 129: ebitstatus = 1;
  2861  056B  3001               	movlw	1
  2862  056C  00DD               	movwf	_ebitstatus
  2863  056D  3000               	movlw	0
  2864  056E  00DE               	movwf	_ebitstatus+1
  2865                           
  2866                           ;encode_AX25.c: 130: }else{
  2867  056F  0008               	return
  2868  0570                     i1l190:	
  2869                           
  2870                           ;encode_AX25.c: 131: RC5 = 0;
  2871  0570  1287               	bcf	7,5	;volatile
  2872                           
  2873                           ;encode_AX25.c: 132: ebitstatus = 0;
  2874  0571  01DD               	clrf	_ebitstatus
  2875  0572  01DE               	clrf	_ebitstatus+1
  2876  0573  0008               	return
  2877  0574                     __end_of_flipout:	
  2878                           
  2879                           	psect	text10
  2880  0534                     __ptext10:	
  2881 ;; *************** function _fcsbit *****************
  2882 ;; Defined at:
  2883 ;;		line 138 in file "encode_AX25.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;  tbyte           1    wreg     unsigned char 
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;  tbyte           1    2[COMMON] unsigned char 
  2888 ;; Return value:  Size  Location     Type
  2889 ;;                  1    wreg      void 
  2890 ;; Registers used:
  2891 ;;		wreg, status,2, status,0
  2892 ;; Tracked objects:
  2893 ;;		On entry : 0/0
  2894 ;;		On exit  : 0/0
  2895 ;;		Unchanged: 0/0
  2896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2897 ;;      Params:         0       0       0       0       0
  2898 ;;      Locals:         1       0       0       0       0
  2899 ;;      Temps:          2       0       0       0       0
  2900 ;;      Totals:         3       0       0       0       0
  2901 ;;Total ram usage:        3 bytes
  2902 ;; Hardware stack levels used:    1
  2903 ;; This function calls:
  2904 ;;		Nothing
  2905 ;; This function is called by:
  2906 ;;		_SendByte
  2907 ;; This function uses a non-reentrant model
  2908 ;;
  2909                           
  2910                           
  2911                           ;psect for function _fcsbit
  2912  0534                     _fcsbit:	
  2913                           
  2914                           ;incstack = 0
  2915                           ; Regs used in _fcsbit: [wreg+status,2+status,0]
  2916                           ;fcsbit@tbyte stored from wreg
  2917  0534  00F2               	movwf	fcsbit@tbyte
  2918  0535  1003               	bcf	3,0	;# 
  2919  0536  0CE5               	rrf	_efcshi,f	;# 
  2920  0537  0CE6               	rrf	_efcslo,f	;# 
  2921                           
  2922                           ;encode_AX25.c: 144: if(((STATUS & 0x01)^(tbyte)) == 0x01){
  2923  0538  3001               	movlw	1
  2924  0539  1283               	bcf	3,5	;RP0=0, select bank0
  2925  053A  1303               	bcf	3,6	;RP1=0, select bank0
  2926  053B  0503               	andwf	3,w	;volatile
  2927  053C  00F0               	movwf	??_fcsbit
  2928  053D  0872               	movf	fcsbit@tbyte,w
  2929  053E  0670               	xorwf	??_fcsbit,w
  2930  053F  00F1               	movwf	??_fcsbit+1
  2931  0540  0371               	decf	??_fcsbit+1,w
  2932  0541  1D03               	btfss	3,2
  2933  0542  0008               	return
  2934                           
  2935                           ;encode_AX25.c: 145: efcshi = efcshi ^ 0x84;
  2936  0543  0865               	movf	_efcshi,w
  2937  0544  3A84               	xorlw	132
  2938  0545  00F0               	movwf	??_fcsbit
  2939  0546  0870               	movf	??_fcsbit,w
  2940  0547  00E5               	movwf	_efcshi
  2941                           
  2942                           ;encode_AX25.c: 146: efcslo = efcslo ^ 0x08;
  2943  0548  0866               	movf	_efcslo,w
  2944  0549  3A08               	xorlw	8
  2945  054A  00F0               	movwf	??_fcsbit
  2946  054B  0870               	movf	??_fcsbit,w
  2947  054C  00E6               	movwf	_efcslo
  2948  054D  0008               	return
  2949  054E                     __end_of_fcsbit:	
  2950                           
  2951                           	psect	text11
  2952  02BA                     __ptext11:	
  2953 ;; *************** function _Packetmaker *****************
  2954 ;; Defined at:
  2955 ;;		line 40 in file "encode_AX25.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;  eDataField      2    0[COMMON] PTR unsigned char 
  2958 ;;		 -> InterReceiver@EEPROMTestData(5), InterReceiver@EEPROMCmdData(0), 
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;  i               2    5[COMMON] unsigned int 
  2961 ;;  i               2   11[COMMON] unsigned int 
  2962 ;;  i               2    9[COMMON] unsigned int 
  2963 ;;  Datanum         2    7[COMMON] unsigned int 
  2964 ;; Return value:  Size  Location     Type
  2965 ;;                  2    0[COMMON] unsigned int 
  2966 ;; Registers used:
  2967 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2968 ;; Tracked objects:
  2969 ;;		On entry : 0/0
  2970 ;;		On exit  : 0/0
  2971 ;;		Unchanged: 0/0
  2972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2973 ;;      Params:         2       0       0       0       0
  2974 ;;      Locals:         8       0       0       0       0
  2975 ;;      Temps:          3       0       0       0       0
  2976 ;;      Totals:        13       0       0       0       0
  2977 ;;Total ram usage:       13 bytes
  2978 ;; Hardware stack levels used:    2
  2979 ;; This function calls:
  2980 ;;		Nothing
  2981 ;; This function is called by:
  2982 ;;		_SendPacket
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986                           
  2987                           ;psect for function _Packetmaker
  2988  02BA                     _Packetmaker:	
  2989                           
  2990                           ;encode_AX25.c: 41: for(UINT i=0;i<6;i++){
  2991                           
  2992                           ;incstack = 0
  2993                           ; Regs used in _Packetmaker: [wreg-fsr0h+status,2+status,0+pclath]
  2994  02BA  01F9               	clrf	Packetmaker@i
  2995  02BB  01FA               	clrf	Packetmaker@i+1
  2996  02BC  3000               	movlw	0
  2997  02BD  027A               	subwf	Packetmaker@i+1,w
  2998  02BE  3006               	movlw	6
  2999  02BF  1903               	skipnz
  3000  02C0  0279               	subwf	Packetmaker@i,w
  3001  02C1  1803               	btfsc	3,0
  3002  02C2  2AE1               	goto	i1l1273
  3003  02C3                     i1l1267:	
  3004                           
  3005                           ;encode_AX25.c: 42: ePacket[i] = "JQ1ZHX"[i] << 1;
  3006  02C3  0879               	movf	Packetmaker@i,w
  3007  02C4  3E01               	addlw	low ((STR_1-__stringbase)| (0+32768))
  3008  02C5  0084               	movwf	4
  3009  02C6  120A  118A  254E  120A  118A  	fcall	stringdir
  3010  02CB  00F2               	movwf	??_Packetmaker
  3011  02CC  0772               	addwf	??_Packetmaker,w
  3012  02CD  00F3               	movwf	??_Packetmaker+1
  3013  02CE  0879               	movf	Packetmaker@i,w
  3014  02CF  3E90               	addlw	(low (_ePacket| (0+256)))& (0+255)
  3015  02D0  0084               	movwf	4
  3016  02D1  0873               	movf	??_Packetmaker+1,w
  3017  02D2  1783               	bsf	3,7	;select IRP bank3
  3018  02D3  0080               	movwf	0
  3019  02D4  3001               	movlw	1
  3020  02D5  07F9               	addwf	Packetmaker@i,f
  3021  02D6  1803               	skipnc
  3022  02D7  0AFA               	incf	Packetmaker@i+1,f
  3023  02D8  3000               	movlw	0
  3024  02D9  07FA               	addwf	Packetmaker@i+1,f
  3025  02DA  3000               	movlw	0
  3026  02DB  027A               	subwf	Packetmaker@i+1,w
  3027  02DC  3006               	movlw	6
  3028  02DD  1903               	skipnz
  3029  02DE  0279               	subwf	Packetmaker@i,w
  3030  02DF  1C03               	skipc
  3031  02E0  2AC3               	goto	i1l1267
  3032  02E1                     i1l1273:	
  3033                           
  3034                           ;encode_AX25.c: 43: }
  3035                           ;encode_AX25.c: 44: ePacket[6] = 0x60;
  3036  02E1  3060               	movlw	96
  3037  02E2  00F2               	movwf	??_Packetmaker
  3038  02E3  0872               	movf	??_Packetmaker,w
  3039  02E4  1683               	bsf	3,5	;RP0=1, select bank3
  3040  02E5  1703               	bsf	3,6	;RP1=1, select bank3
  3041  02E6  0096               	movwf	(_ePacket^(0+384)+6)
  3042                           
  3043                           ;encode_AX25.c: 45: for(UINT i=0;i<6;i++){
  3044  02E7  01FB               	clrf	Packetmaker@i_133
  3045  02E8  01FC               	clrf	Packetmaker@i_133+1
  3046  02E9  3000               	movlw	0
  3047  02EA  027C               	subwf	Packetmaker@i_133+1,w
  3048  02EB  3006               	movlw	6
  3049  02EC  1903               	skipnz
  3050  02ED  027B               	subwf	Packetmaker@i_133,w
  3051  02EE  1803               	btfsc	3,0
  3052  02EF  2B0F               	goto	i1l1287
  3053  02F0                     i1l1281:	
  3054                           
  3055                           ;encode_AX25.c: 46: ePacket[i+7] = "JQ1YCZ"[i] << 1;
  3056  02F0  087B               	movf	Packetmaker@i_133,w
  3057  02F1  3E08               	addlw	low ((STR_2-__stringbase)| (0+32768))
  3058  02F2  0084               	movwf	4
  3059  02F3  120A  118A  254E  120A  118A  	fcall	stringdir
  3060  02F8  00F2               	movwf	??_Packetmaker
  3061  02F9  0772               	addwf	??_Packetmaker,w
  3062  02FA  00F3               	movwf	??_Packetmaker+1
  3063  02FB  087B               	movf	Packetmaker@i_133,w
  3064  02FC  3E07               	addlw	7
  3065  02FD  3E90               	addlw	(low (_ePacket| (0+256)))& (0+255)
  3066  02FE  0084               	movwf	4
  3067  02FF  0873               	movf	??_Packetmaker+1,w
  3068  0300  1783               	bsf	3,7	;select IRP bank3
  3069  0301  0080               	movwf	0
  3070  0302  3001               	movlw	1
  3071  0303  07FB               	addwf	Packetmaker@i_133,f
  3072  0304  1803               	skipnc
  3073  0305  0AFC               	incf	Packetmaker@i_133+1,f
  3074  0306  3000               	movlw	0
  3075  0307  07FC               	addwf	Packetmaker@i_133+1,f
  3076  0308  3000               	movlw	0
  3077  0309  027C               	subwf	Packetmaker@i_133+1,w
  3078  030A  3006               	movlw	6
  3079  030B  1903               	skipnz
  3080  030C  027B               	subwf	Packetmaker@i_133,w
  3081  030D  1C03               	skipc
  3082  030E  2AF0               	goto	i1l1281
  3083  030F                     i1l1287:	
  3084                           
  3085                           ;encode_AX25.c: 47: }
  3086                           ;encode_AX25.c: 48: ePacket[13] = 0xe1;
  3087  030F  30E1               	movlw	225
  3088  0310  00F2               	movwf	??_Packetmaker
  3089  0311  0872               	movf	??_Packetmaker,w
  3090  0312  1683               	bsf	3,5	;RP0=1, select bank3
  3091  0313  1703               	bsf	3,6	;RP1=1, select bank3
  3092  0314  009D               	movwf	(_ePacket^(0+384)+13)
  3093                           
  3094                           ;encode_AX25.c: 49: ePacket[14] = 0x03;
  3095  0315  3003               	movlw	3
  3096  0316  00F2               	movwf	??_Packetmaker
  3097  0317  0872               	movf	??_Packetmaker,w
  3098  0318  009E               	movwf	(_ePacket^(0+384)+14)
  3099                           
  3100                           ;encode_AX25.c: 50: ePacket[15] = 0xf0;
  3101  0319  30F0               	movlw	240
  3102  031A  00F2               	movwf	??_Packetmaker
  3103  031B  0872               	movf	??_Packetmaker,w
  3104  031C  009F               	movwf	(_ePacket^(0+384)+15)
  3105                           
  3106                           ;encode_AX25.c: 51: UINT Datanum = 0;
  3107  031D  01F7               	clrf	Packetmaker@Datanum
  3108  031E  01F8               	clrf	Packetmaker@Datanum+1
  3109                           
  3110                           ;encode_AX25.c: 52: for(Datanum=0;eDataField[Datanum] != '\0';Datanum++);
  3111  031F  01F7               	clrf	Packetmaker@Datanum
  3112  0320  01F8               	clrf	Packetmaker@Datanum+1
  3113  0321                     i1l1295:	
  3114  0321  0877               	movf	Packetmaker@Datanum,w
  3115  0322  0770               	addwf	Packetmaker@eDataField,w
  3116  0323  00F2               	movwf	??_Packetmaker
  3117  0324  0878               	movf	Packetmaker@Datanum+1,w
  3118  0325  1803               	skipnc
  3119  0326  0A78               	incf	Packetmaker@Datanum+1,w
  3120  0327  0771               	addwf	Packetmaker@eDataField+1,w
  3121  0328  00F3               	movwf	??_Packetmaker+1
  3122  0329  0872               	movf	??_Packetmaker,w
  3123  032A  0084               	movwf	4
  3124  032B  1783               	bsf	3,7
  3125  032C  1C73               	btfss	??_Packetmaker+1,0
  3126  032D  1383               	bcf	3,7
  3127  032E  0800               	movf	0,w
  3128  032F  1903               	btfsc	3,2
  3129  0330  2B38               	goto	i1l1297
  3130  0331  3001               	movlw	1
  3131  0332  07F7               	addwf	Packetmaker@Datanum,f
  3132  0333  1803               	skipnc
  3133  0334  0AF8               	incf	Packetmaker@Datanum+1,f
  3134  0335  3000               	movlw	0
  3135  0336  07F8               	addwf	Packetmaker@Datanum+1,f
  3136  0337  2B21               	goto	i1l1295
  3137  0338                     i1l1297:	
  3138                           
  3139                           ;encode_AX25.c: 53: for(UINT i=0;i<Datanum;i++){
  3140  0338  01F5               	clrf	Packetmaker@i_136
  3141  0339  01F6               	clrf	Packetmaker@i_136+1
  3142  033A                     i1l1303:	
  3143  033A  0878               	movf	Packetmaker@Datanum+1,w
  3144  033B  0276               	subwf	Packetmaker@i_136+1,w
  3145  033C  1D03               	skipz
  3146  033D  2B40               	goto	u60_25
  3147  033E  0877               	movf	Packetmaker@Datanum,w
  3148  033F  0275               	subwf	Packetmaker@i_136,w
  3149  0340                     u60_25:	
  3150  0340  1803               	btfsc	3,0
  3151  0341  2B5F               	goto	i1l1305
  3152                           
  3153                           ;encode_AX25.c: 54: ePacket[16+i] = eDataField[i];
  3154  0342  0875               	movf	Packetmaker@i_136,w
  3155  0343  0770               	addwf	Packetmaker@eDataField,w
  3156  0344  00F2               	movwf	??_Packetmaker
  3157  0345  0876               	movf	Packetmaker@i_136+1,w
  3158  0346  1803               	skipnc
  3159  0347  0A76               	incf	Packetmaker@i_136+1,w
  3160  0348  0771               	addwf	Packetmaker@eDataField+1,w
  3161  0349  00F3               	movwf	??_Packetmaker+1
  3162  034A  0872               	movf	??_Packetmaker,w
  3163  034B  0084               	movwf	4
  3164  034C  1783               	bsf	3,7
  3165  034D  1C73               	btfss	??_Packetmaker+1,0
  3166  034E  1383               	bcf	3,7
  3167  034F  0800               	movf	0,w
  3168  0350  00F4               	movwf	??_Packetmaker+2
  3169  0351  0875               	movf	Packetmaker@i_136,w
  3170  0352  3E10               	addlw	16
  3171  0353  3E90               	addlw	(low (_ePacket| (0+256)))& (0+255)
  3172  0354  0084               	movwf	4
  3173  0355  0874               	movf	??_Packetmaker+2,w
  3174  0356  1783               	bsf	3,7	;select IRP bank3
  3175  0357  0080               	movwf	0
  3176  0358  3001               	movlw	1
  3177  0359  07F5               	addwf	Packetmaker@i_136,f
  3178  035A  1803               	skipnc
  3179  035B  0AF6               	incf	Packetmaker@i_136+1,f
  3180  035C  3000               	movlw	0
  3181  035D  07F6               	addwf	Packetmaker@i_136+1,f
  3182  035E  2B3A               	goto	i1l1303
  3183  035F                     i1l1305:	
  3184                           
  3185                           ;encode_AX25.c: 55: }
  3186                           ;encode_AX25.c: 56: return 16+Datanum;
  3187  035F  0877               	movf	Packetmaker@Datanum,w
  3188  0360  3E10               	addlw	16
  3189  0361  00F0               	movwf	?_Packetmaker
  3190  0362  0878               	movf	Packetmaker@Datanum+1,w
  3191  0363  1803               	skipnc
  3192  0364  3E01               	addlw	1
  3193  0365  3E00               	addlw	0
  3194  0366  00F1               	movwf	?_Packetmaker+1
  3195  0367  0008               	return
  3196  0368                     __end_of_Packetmaker:	
  3197                           
  3198                           	psect	text12
  3199  004C                     __ptext12:	
  3200 ;; *************** function _EEPROM_Read *****************
  3201 ;; Defined at:
  3202 ;;		line 116 in file "I2C.c"
  3203 ;; Parameters:    Size  Location     Type
  3204 ;;  EEPROM_addre    1    wreg     unsigned char 
  3205 ;;  high_address    1    3[COMMON] unsigned char 
  3206 ;;  low_address     1    4[COMMON] unsigned char 
  3207 ;;  ReadData        2    5[COMMON] PTR unsigned char 
  3208 ;;		 -> InterReceiver@EEPROMCmdData(0), 
  3209 ;;  EEPROMDataLe    2    7[COMMON] PTR unsigned int 
  3210 ;;		 -> RAM(512), 
  3211 ;; Auto vars:     Size  Location     Type
  3212 ;;  EEPROM_addre    1    0[BANK0 ] unsigned char 
  3213 ;;  i               2    2[BANK0 ] unsigned int 
  3214 ;;  Address         1    4[BANK0 ] unsigned char 
  3215 ;;  ReadAddress     1    1[BANK0 ] unsigned char 
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  1    wreg      void 
  3218 ;; Registers used:
  3219 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3225 ;;      Params:         6       0       0       0       0
  3226 ;;      Locals:         0       5       0       0       0
  3227 ;;      Temps:          5       0       0       0       0
  3228 ;;      Totals:        11       5       0       0       0
  3229 ;;Total ram usage:       16 bytes
  3230 ;; Hardware stack levels used:    1
  3231 ;; Hardware stack levels required when called:    2
  3232 ;; This function calls:
  3233 ;;		_I2C_Master_Read
  3234 ;;		_I2C_Master_RepeatedStart
  3235 ;;		_I2C_Master_Start
  3236 ;;		_I2C_Master_Stop
  3237 ;;		_I2C_Master_Write
  3238 ;; This function is called by:
  3239 ;;		_InterReceiver
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242                           
  3243                           
  3244                           ;psect for function _EEPROM_Read
  3245  004C                     _EEPROM_Read:	
  3246                           
  3247                           ;incstack = 0
  3248                           ; Regs used in _EEPROM_Read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3249                           ;EEPROM_Read@EEPROM_address stored from wreg
  3250  004C  1283               	bcf	3,5	;RP0=0, select bank0
  3251  004D  1303               	bcf	3,6	;RP1=0, select bank0
  3252  004E  00A0               	movwf	EEPROM_Read@EEPROM_address
  3253                           
  3254                           ;I2C.c: 117: UBYTE Address = EEPROM_address << 1;
  3255  004F  0820               	movf	EEPROM_Read@EEPROM_address,w
  3256  0050  00F9               	movwf	??_EEPROM_Read
  3257  0051  0779               	addwf	??_EEPROM_Read,w
  3258  0052  00FA               	movwf	??_EEPROM_Read+1
  3259  0053  087A               	movf	??_EEPROM_Read+1,w
  3260  0054  00A4               	movwf	EEPROM_Read@Address
  3261                           
  3262                           ;I2C.c: 118: UBYTE ReadAddress = Address | 0x01;
  3263  0055  0824               	movf	EEPROM_Read@Address,w
  3264  0056  3801               	iorlw	1
  3265  0057  00F9               	movwf	??_EEPROM_Read
  3266  0058  0879               	movf	??_EEPROM_Read,w
  3267  0059  00A1               	movwf	EEPROM_Read@ReadAddress
  3268                           
  3269                           ;I2C.c: 122: I2C_Master_Start();
  3270  005A  120A  118A  25B4  120A  118A  	fcall	_I2C_Master_Start
  3271                           
  3272                           ;I2C.c: 123: I2C_Master_Write(Address);
  3273  005F  1283               	bcf	3,5	;RP0=0, select bank0
  3274  0060  1303               	bcf	3,6	;RP1=0, select bank0
  3275  0061  0824               	movf	EEPROM_Read@Address,w
  3276  0062  00F9               	movwf	??_EEPROM_Read
  3277  0063  01FA               	clrf	??_EEPROM_Read+1
  3278  0064  0879               	movf	??_EEPROM_Read,w
  3279  0065  00F0               	movwf	I2C_Master_Write@d
  3280  0066  087A               	movf	??_EEPROM_Read+1,w
  3281  0067  00F1               	movwf	I2C_Master_Write@d+1
  3282  0068  120A  118A  25A5  120A  118A  	fcall	_I2C_Master_Write
  3283                           
  3284                           ;I2C.c: 124: I2C_Master_Write(high_address);
  3285  006D  0873               	movf	EEPROM_Read@high_address,w
  3286  006E  00F9               	movwf	??_EEPROM_Read
  3287  006F  01FA               	clrf	??_EEPROM_Read+1
  3288  0070  0879               	movf	??_EEPROM_Read,w
  3289  0071  00F0               	movwf	I2C_Master_Write@d
  3290  0072  087A               	movf	??_EEPROM_Read+1,w
  3291  0073  00F1               	movwf	I2C_Master_Write@d+1
  3292  0074  120A  118A  25A5  120A  118A  	fcall	_I2C_Master_Write
  3293                           
  3294                           ;I2C.c: 125: I2C_Master_Write(low_address);
  3295  0079  0874               	movf	EEPROM_Read@low_address,w
  3296  007A  00F9               	movwf	??_EEPROM_Read
  3297  007B  01FA               	clrf	??_EEPROM_Read+1
  3298  007C  0879               	movf	??_EEPROM_Read,w
  3299  007D  00F0               	movwf	I2C_Master_Write@d
  3300  007E  087A               	movf	??_EEPROM_Read+1,w
  3301  007F  00F1               	movwf	I2C_Master_Write@d+1
  3302  0080  120A  118A  25A5  120A  118A  	fcall	_I2C_Master_Write
  3303                           
  3304                           ;I2C.c: 126: I2C_Master_RepeatedStart();
  3305  0085  120A  118A  25BB  120A  118A  	fcall	_I2C_Master_RepeatedStart
  3306                           
  3307                           ;I2C.c: 129: I2C_Master_Write(ReadAddress);
  3308  008A  1283               	bcf	3,5	;RP0=0, select bank0
  3309  008B  1303               	bcf	3,6	;RP1=0, select bank0
  3310  008C  0821               	movf	EEPROM_Read@ReadAddress,w
  3311  008D  00F9               	movwf	??_EEPROM_Read
  3312  008E  01FA               	clrf	??_EEPROM_Read+1
  3313  008F  0879               	movf	??_EEPROM_Read,w
  3314  0090  00F0               	movwf	I2C_Master_Write@d
  3315  0091  087A               	movf	??_EEPROM_Read+1,w
  3316  0092  00F1               	movwf	I2C_Master_Write@d+1
  3317  0093  120A  118A  25A5  120A  118A  	fcall	_I2C_Master_Write
  3318                           
  3319                           ;I2C.c: 131: for (*EEPROMDataLength = 0; ReadData[*EEPROMDataLength]!= 0xFF; *EEPROMData
      +                          Length++);
  3320  0098  0877               	movf	EEPROM_Read@EEPROMDataLength,w
  3321  0099  0084               	movwf	4
  3322  009A  1783               	bsf	3,7
  3323  009B  1C78               	btfss	EEPROM_Read@EEPROMDataLength+1,0
  3324  009C  1383               	bcf	3,7
  3325  009D  0180               	clrf	0
  3326  009E  0A84               	incf	4,f
  3327  009F  0180               	clrf	0
  3328  00A0                     i1l1459:	
  3329  00A0  0877               	movf	EEPROM_Read@EEPROMDataLength,w
  3330  00A1  0084               	movwf	4
  3331  00A2  1783               	bsf	3,7
  3332  00A3  1C78               	btfss	EEPROM_Read@EEPROMDataLength+1,0
  3333  00A4  1383               	bcf	3,7
  3334  00A5  0800               	movf	0,w
  3335  00A6  00F9               	movwf	??_EEPROM_Read
  3336  00A7  0A84               	incf	4,f
  3337  00A8  0800               	movf	0,w
  3338  00A9  00FA               	movwf	??_EEPROM_Read+1
  3339  00AA  0879               	movf	??_EEPROM_Read,w
  3340  00AB  0775               	addwf	EEPROM_Read@ReadData,w
  3341  00AC  00FB               	movwf	??_EEPROM_Read+2
  3342  00AD  087A               	movf	??_EEPROM_Read+1,w
  3343  00AE  1803               	skipnc
  3344  00AF  0A7A               	incf	??_EEPROM_Read+1,w
  3345  00B0  0776               	addwf	EEPROM_Read@ReadData+1,w
  3346  00B1  00FC               	movwf	??_EEPROM_Read+3
  3347  00B2  087B               	movf	??_EEPROM_Read+2,w
  3348  00B3  0084               	movwf	4
  3349  00B4  1783               	bsf	3,7
  3350  00B5  1C7C               	btfss	??_EEPROM_Read+3,0
  3351  00B6  1383               	bcf	3,7
  3352  00B7  0A00               	incf	0,w
  3353  00B8  1903               	btfsc	3,2
  3354  00B9  28C1               	goto	i1l1461
  3355  00BA  3002               	movlw	2
  3356  00BB  07F7               	addwf	EEPROM_Read@EEPROMDataLength,f
  3357  00BC  1803               	skipnc
  3358  00BD  0AF8               	incf	EEPROM_Read@EEPROMDataLength+1,f
  3359  00BE  3000               	movlw	0
  3360  00BF  07F8               	addwf	EEPROM_Read@EEPROMDataLength+1,f
  3361  00C0  28A0               	goto	i1l1459
  3362  00C1                     i1l1461:	
  3363                           
  3364                           ;I2C.c: 134: for(UINT i = 0; i < *EEPROMDataLength; i++){
  3365  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  3366  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  3367  00C3  01A2               	clrf	EEPROM_Read@i
  3368  00C4  01A3               	clrf	EEPROM_Read@i+1
  3369  00C5                     i1l1467:	
  3370  00C5  0877               	movf	EEPROM_Read@EEPROMDataLength,w
  3371  00C6  0084               	movwf	4
  3372  00C7  1783               	bsf	3,7
  3373  00C8  1C78               	btfss	EEPROM_Read@EEPROMDataLength+1,0
  3374  00C9  1383               	bcf	3,7
  3375  00CA  0800               	movf	0,w
  3376  00CB  00F9               	movwf	??_EEPROM_Read
  3377  00CC  0A84               	incf	4,f
  3378  00CD  0800               	movf	0,w
  3379  00CE  00FA               	movwf	??_EEPROM_Read+1
  3380  00CF  087A               	movf	??_EEPROM_Read+1,w
  3381  00D0  0223               	subwf	EEPROM_Read@i+1,w
  3382  00D1  1D03               	skipz
  3383  00D2  28D5               	goto	u81_25
  3384  00D3  0879               	movf	??_EEPROM_Read,w
  3385  00D4  0222               	subwf	EEPROM_Read@i,w
  3386  00D5                     u81_25:	
  3387  00D5  1803               	btfsc	3,0
  3388  00D6  28F6               	goto	i1l1469
  3389                           
  3390                           ;I2C.c: 138: ReadData[i] = I2C_Master_Read(1);
  3391  00D7  3001               	movlw	1
  3392  00D8  120A  118A  24BB  120A  118A  	fcall	_I2C_Master_Read
  3393  00DD  00F9               	movwf	??_EEPROM_Read
  3394  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  3395  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  3396  00E0  0822               	movf	EEPROM_Read@i,w
  3397  00E1  0775               	addwf	EEPROM_Read@ReadData,w
  3398  00E2  00FA               	movwf	??_EEPROM_Read+1
  3399  00E3  0823               	movf	EEPROM_Read@i+1,w
  3400  00E4  1803               	skipnc
  3401  00E5  0A23               	incf	EEPROM_Read@i+1,w
  3402  00E6  0776               	addwf	EEPROM_Read@ReadData+1,w
  3403  00E7  00FB               	movwf	??_EEPROM_Read+2
  3404  00E8  087A               	movf	??_EEPROM_Read+1,w
  3405  00E9  0084               	movwf	4
  3406  00EA  1783               	bsf	3,7
  3407  00EB  1C7B               	btfss	??_EEPROM_Read+2,0
  3408  00EC  1383               	bcf	3,7
  3409  00ED  0879               	movf	??_EEPROM_Read,w
  3410  00EE  0080               	movwf	0
  3411  00EF  3001               	movlw	1
  3412  00F0  07A2               	addwf	EEPROM_Read@i,f
  3413  00F1  1803               	skipnc
  3414  00F2  0AA3               	incf	EEPROM_Read@i+1,f
  3415  00F3  3000               	movlw	0
  3416  00F4  07A3               	addwf	EEPROM_Read@i+1,f
  3417  00F5  28C5               	goto	i1l1467
  3418  00F6                     i1l1469:	
  3419                           
  3420                           ;I2C.c: 140: }
  3421                           ;I2C.c: 141: ReadData[*EEPROMDataLength] = I2C_Master_Read(0);
  3422  00F6  3000               	movlw	0
  3423  00F7  120A  118A  24BB  120A  118A  	fcall	_I2C_Master_Read
  3424  00FC  00F9               	movwf	??_EEPROM_Read
  3425  00FD  0877               	movf	EEPROM_Read@EEPROMDataLength,w
  3426  00FE  0084               	movwf	4
  3427  00FF  1783               	bsf	3,7
  3428  0100  1C78               	btfss	EEPROM_Read@EEPROMDataLength+1,0
  3429  0101  1383               	bcf	3,7
  3430  0102  0800               	movf	0,w
  3431  0103  00FA               	movwf	??_EEPROM_Read+1
  3432  0104  0A84               	incf	4,f
  3433  0105  0800               	movf	0,w
  3434  0106  00FB               	movwf	??_EEPROM_Read+2
  3435  0107  087A               	movf	??_EEPROM_Read+1,w
  3436  0108  0775               	addwf	EEPROM_Read@ReadData,w
  3437  0109  00FC               	movwf	??_EEPROM_Read+3
  3438  010A  087B               	movf	??_EEPROM_Read+2,w
  3439  010B  1803               	skipnc
  3440  010C  0A7B               	incf	??_EEPROM_Read+2,w
  3441  010D  0776               	addwf	EEPROM_Read@ReadData+1,w
  3442  010E  00FD               	movwf	??_EEPROM_Read+4
  3443  010F  087C               	movf	??_EEPROM_Read+3,w
  3444  0110  0084               	movwf	4
  3445  0111  1783               	bsf	3,7
  3446  0112  1C7D               	btfss	??_EEPROM_Read+4,0
  3447  0113  1383               	bcf	3,7
  3448  0114  0879               	movf	??_EEPROM_Read,w
  3449  0115  0080               	movwf	0
  3450                           
  3451                           ;I2C.c: 143: I2C_Master_Stop();
  3452  0116  120A  118A  25AD  120A  118A  	fcall	_I2C_Master_Stop
  3453                           
  3454                           ;I2C.c: 152: _delay((unsigned long)((200)*(10000000/4000.0)));
  3455  011B  3003               	movlw	3
  3456  011C  00FB               	movwf	??_EEPROM_Read+2
  3457  011D  308A               	movlw	138
  3458  011E  00FA               	movwf	??_EEPROM_Read+1
  3459  011F  3055               	movlw	85
  3460  0120  00F9               	movwf	??_EEPROM_Read
  3461  0121                     u110_27:	
  3462  0121  0BF9               	decfsz	??_EEPROM_Read,f
  3463  0122  2921               	goto	u110_27
  3464  0123  0BFA               	decfsz	??_EEPROM_Read+1,f
  3465  0124  2921               	goto	u110_27
  3466  0125  0BFB               	decfsz	??_EEPROM_Read+2,f
  3467  0126  2921               	goto	u110_27
  3468  0127  2928               	nop2
  3469  0128  0008               	return
  3470  0129                     __end_of_EEPROM_Read:	
  3471                           
  3472                           	psect	text13
  3473  05A5                     __ptext13:	
  3474 ;; *************** function _I2C_Master_Write *****************
  3475 ;; Defined at:
  3476 ;;		line 37 in file "I2C.c"
  3477 ;; Parameters:    Size  Location     Type
  3478 ;;  d               2    0[COMMON] unsigned int 
  3479 ;; Auto vars:     Size  Location     Type
  3480 ;;		None
  3481 ;; Return value:  Size  Location     Type
  3482 ;;                  1    wreg      void 
  3483 ;; Registers used:
  3484 ;;		wreg, status,2, status,0, pclath, cstack
  3485 ;; Tracked objects:
  3486 ;;		On entry : 0/0
  3487 ;;		On exit  : 0/0
  3488 ;;		Unchanged: 0/0
  3489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3490 ;;      Params:         2       0       0       0       0
  3491 ;;      Locals:         0       0       0       0       0
  3492 ;;      Temps:          0       0       0       0       0
  3493 ;;      Totals:         2       0       0       0       0
  3494 ;;Total ram usage:        2 bytes
  3495 ;; Hardware stack levels used:    1
  3496 ;; Hardware stack levels required when called:    1
  3497 ;; This function calls:
  3498 ;;		_I2C_Master_Wait
  3499 ;; This function is called by:
  3500 ;;		_EEPROM_Read
  3501 ;;		_EEPROM_Write
  3502 ;;		_EEPROM_Read2
  3503 ;; This function uses a non-reentrant model
  3504 ;;
  3505                           
  3506                           
  3507                           ;psect for function _I2C_Master_Write
  3508  05A5                     _I2C_Master_Write:	
  3509                           
  3510                           ;I2C.c: 38: I2C_Master_Wait();
  3511                           
  3512                           ;incstack = 0
  3513                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3514  05A5  120A  118A  2594   	fcall	_I2C_Master_Wait
  3515                           
  3516                           ;I2C.c: 39: SSPBUF = d;
  3517  05A8  0870               	movf	I2C_Master_Write@d,w
  3518  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  3519  05AA  1303               	bcf	3,6	;RP1=0, select bank0
  3520  05AB  0093               	movwf	19	;volatile
  3521  05AC  0008               	return
  3522  05AD                     __end_of_I2C_Master_Write:	
  3523                           
  3524                           	psect	text14
  3525  05AD                     __ptext14:	
  3526 ;; *************** function _I2C_Master_Stop *****************
  3527 ;; Defined at:
  3528 ;;		line 32 in file "I2C.c"
  3529 ;; Parameters:    Size  Location     Type
  3530 ;;		None
  3531 ;; Auto vars:     Size  Location     Type
  3532 ;;		None
  3533 ;; Return value:  Size  Location     Type
  3534 ;;                  1    wreg      void 
  3535 ;; Registers used:
  3536 ;;		wreg, status,2, status,0, pclath, cstack
  3537 ;; Tracked objects:
  3538 ;;		On entry : 0/0
  3539 ;;		On exit  : 0/0
  3540 ;;		Unchanged: 0/0
  3541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3542 ;;      Params:         0       0       0       0       0
  3543 ;;      Locals:         0       0       0       0       0
  3544 ;;      Temps:          0       0       0       0       0
  3545 ;;      Totals:         0       0       0       0       0
  3546 ;;Total ram usage:        0 bytes
  3547 ;; Hardware stack levels used:    1
  3548 ;; Hardware stack levels required when called:    1
  3549 ;; This function calls:
  3550 ;;		_I2C_Master_Wait
  3551 ;; This function is called by:
  3552 ;;		_EEPROM_Read
  3553 ;;		_EEPROM_Write
  3554 ;;		_EEPROM_Read2
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           
  3559                           ;psect for function _I2C_Master_Stop
  3560  05AD                     _I2C_Master_Stop:	
  3561                           
  3562                           ;I2C.c: 33: I2C_Master_Wait();
  3563                           
  3564                           ;incstack = 0
  3565                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3566  05AD  120A  118A  2594   	fcall	_I2C_Master_Wait
  3567                           
  3568                           ;I2C.c: 34: PEN = 1;
  3569  05B0  1683               	bsf	3,5	;RP0=1, select bank1
  3570  05B1  1303               	bcf	3,6	;RP1=0, select bank1
  3571  05B2  1511               	bsf	17,2	;volatile
  3572  05B3  0008               	return
  3573  05B4                     __end_of_I2C_Master_Stop:	
  3574                           
  3575                           	psect	text15
  3576  05B4                     __ptext15:	
  3577 ;; *************** function _I2C_Master_Start *****************
  3578 ;; Defined at:
  3579 ;;		line 22 in file "I2C.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;		None
  3582 ;; Auto vars:     Size  Location     Type
  3583 ;;		None
  3584 ;; Return value:  Size  Location     Type
  3585 ;;                  1    wreg      void 
  3586 ;; Registers used:
  3587 ;;		wreg, status,2, status,0, pclath, cstack
  3588 ;; Tracked objects:
  3589 ;;		On entry : 0/0
  3590 ;;		On exit  : 0/0
  3591 ;;		Unchanged: 0/0
  3592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3593 ;;      Params:         0       0       0       0       0
  3594 ;;      Locals:         0       0       0       0       0
  3595 ;;      Temps:          0       0       0       0       0
  3596 ;;      Totals:         0       0       0       0       0
  3597 ;;Total ram usage:        0 bytes
  3598 ;; Hardware stack levels used:    1
  3599 ;; Hardware stack levels required when called:    1
  3600 ;; This function calls:
  3601 ;;		_I2C_Master_Wait
  3602 ;; This function is called by:
  3603 ;;		_EEPROM_Read
  3604 ;;		_EEPROM_Write
  3605 ;;		_EEPROM_Read2
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608                           
  3609                           
  3610                           ;psect for function _I2C_Master_Start
  3611  05B4                     _I2C_Master_Start:	
  3612                           
  3613                           ;I2C.c: 23: I2C_Master_Wait();
  3614                           
  3615                           ;incstack = 0
  3616                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3617  05B4  120A  118A  2594   	fcall	_I2C_Master_Wait
  3618                           
  3619                           ;I2C.c: 24: SEN = 1;
  3620  05B7  1683               	bsf	3,5	;RP0=1, select bank1
  3621  05B8  1303               	bcf	3,6	;RP1=0, select bank1
  3622  05B9  1411               	bsf	17,0	;volatile
  3623  05BA  0008               	return
  3624  05BB                     __end_of_I2C_Master_Start:	
  3625                           
  3626                           	psect	text16
  3627  05BB                     __ptext16:	
  3628 ;; *************** function _I2C_Master_RepeatedStart *****************
  3629 ;; Defined at:
  3630 ;;		line 27 in file "I2C.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;		None
  3633 ;; Auto vars:     Size  Location     Type
  3634 ;;		None
  3635 ;; Return value:  Size  Location     Type
  3636 ;;                  1    wreg      void 
  3637 ;; Registers used:
  3638 ;;		wreg, status,2, status,0, pclath, cstack
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3644 ;;      Params:         0       0       0       0       0
  3645 ;;      Locals:         0       0       0       0       0
  3646 ;;      Temps:          0       0       0       0       0
  3647 ;;      Totals:         0       0       0       0       0
  3648 ;;Total ram usage:        0 bytes
  3649 ;; Hardware stack levels used:    1
  3650 ;; Hardware stack levels required when called:    1
  3651 ;; This function calls:
  3652 ;;		_I2C_Master_Wait
  3653 ;; This function is called by:
  3654 ;;		_EEPROM_Read
  3655 ;;		_EEPROM_Read2
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659                           
  3660                           ;psect for function _I2C_Master_RepeatedStart
  3661  05BB                     _I2C_Master_RepeatedStart:	
  3662                           
  3663                           ;I2C.c: 28: I2C_Master_Wait();
  3664                           
  3665                           ;incstack = 0
  3666                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3667  05BB  120A  118A  2594   	fcall	_I2C_Master_Wait
  3668                           
  3669                           ;I2C.c: 29: RSEN = 1;
  3670  05BE  1683               	bsf	3,5	;RP0=1, select bank1
  3671  05BF  1303               	bcf	3,6	;RP1=0, select bank1
  3672  05C0  1491               	bsf	17,1	;volatile
  3673  05C1  0008               	return
  3674  05C2                     __end_of_I2C_Master_RepeatedStart:	
  3675                           
  3676                           	psect	text17
  3677  04BB                     __ptext17:	
  3678 ;; *************** function _I2C_Master_Read *****************
  3679 ;; Defined at:
  3680 ;;		line 42 in file "I2C.c"
  3681 ;; Parameters:    Size  Location     Type
  3682 ;;  a               1    wreg     unsigned char 
  3683 ;; Auto vars:     Size  Location     Type
  3684 ;;  a               1    1[COMMON] unsigned char 
  3685 ;;  temp            1    2[COMMON] unsigned char 
  3686 ;; Return value:  Size  Location     Type
  3687 ;;                  1    wreg      unsigned char 
  3688 ;; Registers used:
  3689 ;;		wreg, status,2, status,0, pclath, cstack
  3690 ;; Tracked objects:
  3691 ;;		On entry : 0/0
  3692 ;;		On exit  : 0/0
  3693 ;;		Unchanged: 0/0
  3694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3695 ;;      Params:         0       0       0       0       0
  3696 ;;      Locals:         2       0       0       0       0
  3697 ;;      Temps:          1       0       0       0       0
  3698 ;;      Totals:         3       0       0       0       0
  3699 ;;Total ram usage:        3 bytes
  3700 ;; Hardware stack levels used:    1
  3701 ;; Hardware stack levels required when called:    1
  3702 ;; This function calls:
  3703 ;;		_I2C_Master_Wait
  3704 ;; This function is called by:
  3705 ;;		_EEPROM_Read
  3706 ;;		_EEPROM_Read2
  3707 ;; This function uses a non-reentrant model
  3708 ;;
  3709                           
  3710                           
  3711                           ;psect for function _I2C_Master_Read
  3712  04BB                     _I2C_Master_Read:	
  3713                           
  3714                           ;incstack = 0
  3715                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3716                           ;I2C_Master_Read@a stored from wreg
  3717  04BB  00F1               	movwf	I2C_Master_Read@a
  3718                           
  3719                           ;I2C.c: 43: unsigned char temp;
  3720                           ;I2C.c: 45: I2C_Master_Wait();
  3721  04BC  120A  118A  2594  120A  118A  	fcall	_I2C_Master_Wait
  3722                           
  3723                           ;I2C.c: 46: RCEN = 1;
  3724  04C1  1683               	bsf	3,5	;RP0=1, select bank1
  3725  04C2  1303               	bcf	3,6	;RP1=0, select bank1
  3726  04C3  1591               	bsf	17,3	;volatile
  3727                           
  3728                           ;I2C.c: 47: I2C_Master_Wait();
  3729  04C4  120A  118A  2594  120A  118A  	fcall	_I2C_Master_Wait
  3730                           
  3731                           ;I2C.c: 48: temp = SSPBUF;
  3732  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  3733  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  3734  04CB  0813               	movf	19,w	;volatile
  3735  04CC  00F0               	movwf	??_I2C_Master_Read
  3736  04CD  0870               	movf	??_I2C_Master_Read,w
  3737  04CE  00F2               	movwf	I2C_Master_Read@temp
  3738                           
  3739                           ;I2C.c: 50: I2C_Master_Wait();
  3740  04CF  120A  118A  2594  120A  118A  	fcall	_I2C_Master_Wait
  3741                           
  3742                           ;I2C.c: 51: ACKDT = (a)?0:1;
  3743  04D4  0871               	movf	I2C_Master_Read@a,w
  3744  04D5  1D03               	btfss	3,2
  3745  04D6  2CDB               	goto	u68_20
  3746  04D7  1683               	bsf	3,5	;RP0=1, select bank1
  3747  04D8  1303               	bcf	3,6	;RP1=0, select bank1
  3748  04D9  1691               	bsf	17,5	;volatile
  3749  04DA  2CDE               	goto	i1l1371
  3750  04DB                     u68_20:	
  3751  04DB  1683               	bsf	3,5	;RP0=1, select bank1
  3752  04DC  1303               	bcf	3,6	;RP1=0, select bank1
  3753  04DD  1291               	bcf	17,5	;volatile
  3754  04DE                     i1l1371:	
  3755                           
  3756                           ;I2C.c: 52: ACKEN = 1;
  3757  04DE  1611               	bsf	17,4	;volatile
  3758                           
  3759                           ;I2C.c: 53: return temp;
  3760  04DF  0872               	movf	I2C_Master_Read@temp,w
  3761  04E0  0008               	return
  3762  04E1                     __end_of_I2C_Master_Read:	
  3763                           
  3764                           	psect	text18
  3765  0594                     __ptext18:	
  3766 ;; *************** function _I2C_Master_Wait *****************
  3767 ;; Defined at:
  3768 ;;		line 18 in file "I2C.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;		None
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;		None
  3773 ;; Return value:  Size  Location     Type
  3774 ;;                  1    wreg      void 
  3775 ;; Registers used:
  3776 ;;		wreg, status,2
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3782 ;;      Params:         0       0       0       0       0
  3783 ;;      Locals:         0       0       0       0       0
  3784 ;;      Temps:          0       0       0       0       0
  3785 ;;      Totals:         0       0       0       0       0
  3786 ;;Total ram usage:        0 bytes
  3787 ;; Hardware stack levels used:    1
  3788 ;; This function calls:
  3789 ;;		Nothing
  3790 ;; This function is called by:
  3791 ;;		_I2C_Master_Start
  3792 ;;		_I2C_Master_RepeatedStart
  3793 ;;		_I2C_Master_Stop
  3794 ;;		_I2C_Master_Write
  3795 ;;		_I2C_Master_Read
  3796 ;; This function uses a non-reentrant model
  3797 ;;
  3798                           
  3799                           
  3800                           ;psect for function _I2C_Master_Wait
  3801  0594                     _I2C_Master_Wait:	
  3802  0594                     i1l264:	
  3803                           ;I2C.c: 19: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3804                           
  3805                           ;incstack = 0
  3806                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3807                           
  3808  0594  1683               	bsf	3,5	;RP0=1, select bank1
  3809  0595  1303               	bcf	3,6	;RP1=0, select bank1
  3810  0596  1914               	btfsc	20,2	;volatile
  3811  0597  2D94               	goto	i1l264
  3812  0598  0811               	movf	17,w	;volatile
  3813  0599  391F               	andlw	31
  3814  059A  1903               	btfsc	3,2
  3815  059B  0008               	return
  3816  059C  2D94               	goto	i1l264
  3817  059D                     __end_of_I2C_Master_Wait:	
  3818  007E                     btemp	set	126	;btemp
  3819  007E                     wtemp0	set	126


Data Sizes:
    Strings     14
    Constant    0
    Data        36
    BSS         76
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     61      77
    BANK1            80     25      71
    BANK3            96      0      50
    BANK2            96      0       0

Pointer List with Targets:

    EEPROM_Read@ReadData	PTR unsigned char  size(2) Largest target is 0
		 -> InterReceiver@EEPROMCmdData(BANK0[0]), 

    EEPROM_Read@EEPROMDataLength	PTR unsigned int  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    SendPacket@eDataField	PTR unsigned char  size(2) Largest target is 5
		 -> InterReceiver@EEPROMTestData(BANK0[5]), InterReceiver@EEPROMCmdData(BANK0[0]), 

    Packetmaker@eDataField	PTR unsigned char  size(2) Largest target is 5
		 -> InterReceiver@EEPROMTestData(BANK0[5]), InterReceiver@EEPROMCmdData(BANK0[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _InterReceiver in COMMON

    _InterReceiver->_EEPROM_Read
    _SendPacket->_Packetmaker
    _SendByte->_fcsbit
    _EEPROM_Read->_I2C_Master_Read

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterReceiver in BANK0

    _InterReceiver->_SendPacket

Critical Paths under _main in BANK1

    _main->_Init_I2C_M
    _Init_I2C_M->___lldiv

Critical Paths under _InterReceiver in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterReceiver in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterReceiver in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                39    39      0     343
                                             22 BANK1      3     3      0
                         _Init_I2C_M
                           _Init_MPU
                        _Init_SERIAL
 ---------------------------------------------------------------------------------
 (1) _Init_SERIAL                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_MPU                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_I2C_M                                           8     4      4     343
                                             14 BANK1      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     268
                                              0 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _InterReceiver                                       48    48      0    2523
                                             13 BANK0     48    48      0
                        _EEPROM_Read
                         _SendPacket
                              _getch
 ---------------------------------------------------------------------------------
 (4) _getch                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _SendPacket                                          13    11      2     862
                                              0 BANK0     13    11      2
                        _Packetmaker
                           _SendByte
 ---------------------------------------------------------------------------------
 (5) _SendByte                                             6     6      0     158
                                              3 COMMON     6     6      0
                             _fcsbit
                            _flipout
 ---------------------------------------------------------------------------------
 (6) _flipout                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _fcsbit                                               3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (6) _Packetmaker                                         13    11      2     414
                                              0 COMMON    13    11      2
 ---------------------------------------------------------------------------------
 (4) _EEPROM_Read                                         16    10      6    1303
                                              3 COMMON    11     5      6
                                              0 BANK0      5     5      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     2     0      2     711
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Read                                      3     3      0      45
                                              0 COMMON     3     3      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_I2C_M
     ___lldiv
   _Init_MPU
   _Init_SERIAL

 _InterReceiver (ROOT)
   _EEPROM_Read
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _SendPacket
     _Packetmaker
     _SendByte
       _fcsbit
       _flipout
   _getch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      32       9       52.1%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     19      47       7       88.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     3D      4D       5       96.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      D4      12        0.0%
ABS                  0      0      D4       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Feb 22 19:55:05 2018

                                pc 0002                        __CFG_CP$OFF 0000  
                               fsr 0004                                _GIE 005F  
                              _RB1 0031                                _RC0 0038  
                              _RB3 0033                                _RC2 003A  
                              _RC5 003D                                _PEN 048A  
                     __CFG_CPD$OFF 0000                                u715 03E7  
                              _SEN 0488                                u735 03F5  
                              u745 040A                                u755 041C  
                              _RX9 00C6                                u875 0499  
                              u977 0370                                _TX9 04C6  
                              u987 03C5                                u997 039B  
                              fsr0 0004                                indf 0000  
                     __CFG_FOSC$HS 0000                       __CFG_LVP$OFF 0000  
                  SendPacket@i_142 0029                    SendPacket@i_143 002B  
                             l1383 03E3                               l1623 0391  
                             l1393 041B                               l1385 03F3  
                             l1619 03BD                               l1397 0428  
                             STR_1 0554                               STR_2 055B  
                             _BRGH 04C2                               _CREN 00C4  
                             _FERR 00C2                               u1007 03A9  
                             u1017 03B7                               _PEIE 005E  
                             _RCIE 0465                               _RCEN 048B  
                             _RCIF 0065                               i1l74 058B  
                             i1l90 01F6                               i1l75 0590  
                             i1l92 01F1                               i1l94 01F7  
                             _OERR 00C1                               _SPEN 00C7  
                             _RSEN 0489                               _SREN 00C5  
                             _TXIE 0464                               _TXEN 04C5  
                             _TXIF 0064                               _SYNC 04C4  
                     __CFG_WRT$OFF 0000   __end_of_I2C_Master_RepeatedStart 05C2  
                             _main 0368                      ??_Init_SERIAL 00BE  
                             btemp 007E                      ??_Packetmaker 0072  
                      Init_I2C_M@c 00CC                               start 0012  
                    __CFG_IESO$OFF 0000                      __CFG_MCLRE$ON 0000  
 InterReceiver@EEPROMCmdDataLength 0054                   ?_I2C_Master_Read 0070  
                 ?_I2C_Master_Wait 0070         InterReceiver@EEPROMCmdData 0034  
                 ?_I2C_Master_Stop 0070                              ?_main 0070  
                            _ACKEN 048C                              _ACKDT 048D  
                    __CFG_WDTE$OFF 0000                              _ANSEL 0188  
                  __end_of___lldiv 0431                              i1l190 0570  
                            i1l264 0594                              _RCREG 001A  
                            _SPBRG 0099                              _PORTA 0005  
                            _PORTB 0006                              _PORTC 0007  
                            _PORTE 0009                              u60_25 0340  
                            _TRISA 0085                              _TRISB 0086  
                            u81_25 00D5                              _TRISC 0087  
                            _TRISE 0089                              u90_25 01AA  
                            u91_25 01EF                              u68_20 04DB  
                            u84_25 025C                              _TXREG 0019  
                    __CFG_PWRTE$ON 0000                     __CFG_FCMEN$OFF 0000  
                  __end_of_flipout 0574                              _eflag 0063  
                            _getch 0585                     __CFG_BOREN$OFF 0000  
                            pclath 000A                              status 0003  
                            wtemp0 007E             __size_of_InterReceiver 00D9  
                       _Init_I2C_M 0489                         SendByte@bt 0078  
          EEPROM_Read@high_address 0073               __size_of_EEPROM_Read 00DD  
                  __initialization 0015                       __end_of_main 03D1  
              __end_of_Init_SERIAL 051A                   __end_of_Init_MPU 0534  
              __end_of_Packetmaker 0368                             ??_main 00D4  
                 __end_of_SendByte 0489                  ?_I2C_Master_Start 0070  
                ?_I2C_Master_Write 0070              Packetmaker@eDataField 0070  
               ??_I2C_Master_Start 0070                         _SendPacket 0202  
                           ?_getch 0070                 ??_I2C_Master_Write 0072  
                           _ANSELH 0189                       Packetmaker@i 0079  
                           u110_27 0121                             i1l1303 033A  
                           u102_27 0157                             i1l1305 035F  
                           i1l1323 0450                             i1l1511 0271  
                           i1l1503 0252                             u103_27 0181  
                           i1l1281 02F0                             i1l1273 02E1  
                           i1l1337 0472                             i1l1371 04DE  
                           i1l1267 02C3                             i1l1603 01AC  
                           i1l1461 00C1                             i1l1509 0256  
                           i1l1295 0321                             i1l1287 030F  
                           i1l1535 02AB                             u104_27 01BF  
                           i1l1297 0338                             i1l1529 0296  
                           i1l1467 00C5                             i1l1459 00A0  
                           i1l1469 00F6                             u105_27 01D8  
                           i1l1497 023D                             u106_27 020A  
                           u107_27 02B3                             u108_27 0468  
                           u109_27 0476                             _SSPADD 0093  
                           _STATUS 0003                             _SSPCON 0014  
                           _SSPBUF 0013           _I2C_Master_RepeatedStart 05BB  
                        ??___lldiv 00C6                             _efcshi 0065  
                           _efcslo 0066                             _fcsbit 0534  
                           _estuff 005F                      _InterReceiver 0129  
                        ??_flipout 0070                             saved_w 007E  
           EEPROM_Read@low_address 0074            __end_of__initialization 0048  
                      SendPacket@i 0027                        ?_Init_I2C_M 00CC  
                      _Init_SERIAL 04FF                 Packetmaker@Datanum 0077  
                      _Packetmaker 02BA                     __pcstackCOMMON 0070  
                     __pidataBANK0 05C2                       __pidataBANK1 04E1  
                    __end_of_getch 0594                     ?_InterReceiver 0070  
                      ?_SendPacket 0020                            ??_getch 0070  
                       __pbssBANK0 005D                         __pbssBANK1 00D7  
                       __pbssBANK3 0190                          ?_Init_MPU 0070  
                        ?_SendByte 0070                         __pmaintext 0368  
                       _ebitstatus 005D                         __pintentry 0004  
                          ?_fcsbit 0070               SendPacket@eDataField 0020  
              __size_of_Init_I2C_M 0032                            _SSPCON2 0091  
                          _SSPSTAT 0094                         __stringtab 054E  
                       ??_Init_MPU 00BE                         ??_SendByte 0073  
                          _ePacket 0190                            ___lldiv 03D1  
              __size_of_SendPacket 00B8                    ??_InterReceiver 002D  
                  __size_of_fcsbit 001A                            __ptext1 04FF  
                          __ptext2 051A                            __ptext3 0489  
                          __ptext4 03D1                            __ptext5 0129  
                          __ptext6 0585                            __ptext7 0202  
                          __ptext8 0431                            __ptext9 0562  
                   InterReceiver@i 005B                            _flipout 0562  
         __size_of_I2C_Master_Read 0026           __size_of_I2C_Master_Wait 0009  
         __size_of_I2C_Master_Stop 0007                            clrloop0 059E  
             end_of_initialization 0048                          _FMRX_Nref 0067  
                        _FMRX_Nprg 00A0         ??_I2C_Master_RepeatedStart 0070  
                        _FMTX_Nref 006B                          _FMTX_Nprg 00B4  
                    ??_EEPROM_Read 0079                          _CWTX_Nref 0069  
                        _CWTX_Nprg 00AA          __size_of_I2C_Master_Start 0007  
        __size_of_I2C_Master_Write 0008                    ___lldiv@divisor 00BE  
                  ___lldiv@counter 00CB                   I2C_Master_Read@a 0071  
              InterReceiver@RXDATA 0034                       SendByte@byte 0077  
                     ??_Init_I2C_M 00D0                       ?_Init_SERIAL 0070  
                     ?_Packetmaker 0070          EEPROM_Read@EEPROM_address 0020  
              __end_of_EEPROM_Read 0129                     __end_of_fcsbit 054E  
              start_initialization 0015                          SendByte@i 0075  
               __end_of_Init_I2C_M 04BB                       ??_SendPacket 0022  
                ??_I2C_Master_Read 0070                  ??_I2C_Master_Wait 0070  
                ??_I2C_Master_Stop 0070                  __size_of_Init_MPU 001A  
           EEPROM_Read@ReadAddress 0021                  __size_of_SendByte 0058  
                       init_fetch0 0574                           ??_fcsbit 0070  
                      __pdataBANK0 0067                        __pdataBANK1 00A0  
               __end_of_SendPacket 02BA                          ___latbits 0002  
                    __pcstackBANK0 0020                      __pcstackBANK1 00BE  
                      _EEPROM_Read 004C                SendPacket@Packetnum 0025  
                 _I2C_Master_Start 05B4                   _I2C_Master_Write 05A5  
                         ?___lldiv 00BE                          __pstrings 054E  
                         ?_flipout 0070                     __size_of_getch 000F  
                interrupt_function 0004                          clear_ram0 059D  
             __size_of_Init_SERIAL 001B               __size_of_Packetmaker 00AE  
                     EEPROM_Read@i 0022              __end_of_InterReceiver 0202  
                      __stringbase 0553                I2C_Master_Read@temp 0072  
                         _Init_MPU 051A                           _SendByte 0431  
      InterReceiver@EEPROMTestData 0056  __size_of_I2C_Master_RepeatedStart 0007  
        ?_I2C_Master_RepeatedStart 0070                   __size_of___lldiv 0060  
                 Packetmaker@i_133 007B                   Packetmaker@i_136 0075  
               __end_of__stringtab 0554                EEPROM_Read@ReadData 0075  
                       _EEPROMData 00D7                    _I2C_Master_Read 04BB  
                 __size_of_flipout 0012                    _I2C_Master_Wait 0594  
                  _I2C_Master_Stop 05AD                           _efcsflag 0061  
                         __ptext10 0534                           __ptext11 02BA  
                         __ptext12 004C                           __ptext13 05A5  
                         __ptext14 05AD                           __ptext15 05B4  
                         __ptext16 05BB                           __ptext17 04BB  
                         __ptext18 0594                  __CFG_BOR4V$BOR40V 0000  
                    __size_of_main 0069        EEPROM_Read@EEPROMDataLength 0077  
         __end_of_I2C_Master_Start 05BB           __end_of_I2C_Master_Write 05AD  
               EEPROM_Read@Address 0024                           init_ram0 0578  
                         intlevel1 0000                       ?_EEPROM_Read 0073  
                 ___lldiv@dividend 00C2                          stringcode 054E  
          __end_of_I2C_Master_Read 04E1            __end_of_I2C_Master_Wait 059D  
          __end_of_I2C_Master_Stop 05B4                        fcsbit@tbyte 0072  
                 ___lldiv@quotient 00C7                  I2C_Master_Write@d 0070  
                         stringdir 054E                           stringtab 054E  
